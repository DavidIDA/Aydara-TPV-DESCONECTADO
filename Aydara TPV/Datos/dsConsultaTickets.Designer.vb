'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsConsultaTickets"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsConsultaTickets
    Inherits Global.System.Data.DataSet
    
    Private tableARTICULOS_TICKETS As ARTICULOS_TICKETSDataTable
    
    Private tableARTICULOS As ARTICULOSDataTable
    
    Private tableTICKETS As TICKETSDataTable
    
    Private tableTICKETS_LINEAS As TICKETS_LINEASDataTable
    
    Private tableESTADISTICAS As ESTADISTICASDataTable
    
    Private tableTOTALES As TOTALESDataTable
    
    Private relationTICKETS_TICKETS_LINEAS As Global.System.Data.DataRelation
    
    Private relationARTICULOS_ARTICULOS_TICKETS As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
        Me.InitExpressions
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.ExcludeSchema) Then
                Me.InitExpressions
            End If
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ARTICULOS_TICKETS")) Is Nothing) Then
                MyBase.Tables.Add(New ARTICULOS_TICKETSDataTable(ds.Tables("ARTICULOS_TICKETS")))
            End If
            If (Not (ds.Tables("ARTICULOS")) Is Nothing) Then
                MyBase.Tables.Add(New ARTICULOSDataTable(ds.Tables("ARTICULOS")))
            End If
            If (Not (ds.Tables("TICKETS")) Is Nothing) Then
                MyBase.Tables.Add(New TICKETSDataTable(ds.Tables("TICKETS")))
            End If
            If (Not (ds.Tables("TICKETS_LINEAS")) Is Nothing) Then
                MyBase.Tables.Add(New TICKETS_LINEASDataTable(ds.Tables("TICKETS_LINEAS")))
            End If
            If (Not (ds.Tables("ESTADISTICAS")) Is Nothing) Then
                MyBase.Tables.Add(New ESTADISTICASDataTable(ds.Tables("ESTADISTICAS")))
            End If
            If (Not (ds.Tables("TOTALES")) Is Nothing) Then
                MyBase.Tables.Add(New TOTALESDataTable(ds.Tables("TOTALES")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            Me.InitExpressions
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ARTICULOS_TICKETS() As ARTICULOS_TICKETSDataTable
        Get
            Return Me.tableARTICULOS_TICKETS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ARTICULOS() As ARTICULOSDataTable
        Get
            Return Me.tableARTICULOS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TICKETS() As TICKETSDataTable
        Get
            Return Me.tableTICKETS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TICKETS_LINEAS() As TICKETS_LINEASDataTable
        Get
            Return Me.tableTICKETS_LINEAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ESTADISTICAS() As ESTADISTICASDataTable
        Get
            Return Me.tableESTADISTICAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TOTALES() As TOTALESDataTable
        Get
            Return Me.tableTOTALES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsConsultaTickets = CType(MyBase.Clone,dsConsultaTickets)
        cln.InitVars
        cln.InitExpressions
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ARTICULOS_TICKETS")) Is Nothing) Then
                MyBase.Tables.Add(New ARTICULOS_TICKETSDataTable(ds.Tables("ARTICULOS_TICKETS")))
            End If
            If (Not (ds.Tables("ARTICULOS")) Is Nothing) Then
                MyBase.Tables.Add(New ARTICULOSDataTable(ds.Tables("ARTICULOS")))
            End If
            If (Not (ds.Tables("TICKETS")) Is Nothing) Then
                MyBase.Tables.Add(New TICKETSDataTable(ds.Tables("TICKETS")))
            End If
            If (Not (ds.Tables("TICKETS_LINEAS")) Is Nothing) Then
                MyBase.Tables.Add(New TICKETS_LINEASDataTable(ds.Tables("TICKETS_LINEAS")))
            End If
            If (Not (ds.Tables("ESTADISTICAS")) Is Nothing) Then
                MyBase.Tables.Add(New ESTADISTICASDataTable(ds.Tables("ESTADISTICAS")))
            End If
            If (Not (ds.Tables("TOTALES")) Is Nothing) Then
                MyBase.Tables.Add(New TOTALESDataTable(ds.Tables("TOTALES")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableARTICULOS_TICKETS = CType(MyBase.Tables("ARTICULOS_TICKETS"),ARTICULOS_TICKETSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableARTICULOS_TICKETS) Is Nothing) Then
                Me.tableARTICULOS_TICKETS.InitVars
            End If
        End If
        Me.tableARTICULOS = CType(MyBase.Tables("ARTICULOS"),ARTICULOSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableARTICULOS) Is Nothing) Then
                Me.tableARTICULOS.InitVars
            End If
        End If
        Me.tableTICKETS = CType(MyBase.Tables("TICKETS"),TICKETSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTICKETS) Is Nothing) Then
                Me.tableTICKETS.InitVars
            End If
        End If
        Me.tableTICKETS_LINEAS = CType(MyBase.Tables("TICKETS_LINEAS"),TICKETS_LINEASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTICKETS_LINEAS) Is Nothing) Then
                Me.tableTICKETS_LINEAS.InitVars
            End If
        End If
        Me.tableESTADISTICAS = CType(MyBase.Tables("ESTADISTICAS"),ESTADISTICASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableESTADISTICAS) Is Nothing) Then
                Me.tableESTADISTICAS.InitVars
            End If
        End If
        Me.tableTOTALES = CType(MyBase.Tables("TOTALES"),TOTALESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTOTALES) Is Nothing) Then
                Me.tableTOTALES.InitVars
            End If
        End If
        Me.relationTICKETS_TICKETS_LINEAS = Me.Relations("TICKETS_TICKETS_LINEAS")
        Me.relationARTICULOS_ARTICULOS_TICKETS = Me.Relations("ARTICULOS_ARTICULOS_TICKETS")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsConsultaTickets"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsConsultaTickets.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableARTICULOS_TICKETS = New ARTICULOS_TICKETSDataTable()
        MyBase.Tables.Add(Me.tableARTICULOS_TICKETS)
        Me.tableARTICULOS = New ARTICULOSDataTable(false)
        MyBase.Tables.Add(Me.tableARTICULOS)
        Me.tableTICKETS = New TICKETSDataTable()
        MyBase.Tables.Add(Me.tableTICKETS)
        Me.tableTICKETS_LINEAS = New TICKETS_LINEASDataTable()
        MyBase.Tables.Add(Me.tableTICKETS_LINEAS)
        Me.tableESTADISTICAS = New ESTADISTICASDataTable()
        MyBase.Tables.Add(Me.tableESTADISTICAS)
        Me.tableTOTALES = New TOTALESDataTable()
        MyBase.Tables.Add(Me.tableTOTALES)
        Me.relationTICKETS_TICKETS_LINEAS = New Global.System.Data.DataRelation("TICKETS_TICKETS_LINEAS", New Global.System.Data.DataColumn() {Me.tableTICKETS.IdColumn}, New Global.System.Data.DataColumn() {Me.tableTICKETS_LINEAS.Ticket_IdColumn}, false)
        Me.Relations.Add(Me.relationTICKETS_TICKETS_LINEAS)
        Me.relationARTICULOS_ARTICULOS_TICKETS = New Global.System.Data.DataRelation("ARTICULOS_ARTICULOS_TICKETS", New Global.System.Data.DataColumn() {Me.tableARTICULOS.CodigoArticuloColumn}, New Global.System.Data.DataColumn() {Me.tableARTICULOS_TICKETS.CodigoArticuloColumn}, false)
        Me.Relations.Add(Me.relationARTICULOS_ARTICULOS_TICKETS)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeARTICULOS_TICKETS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeARTICULOS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTICKETS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTICKETS_LINEAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeESTADISTICAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTOTALES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsConsultaTickets = New dsConsultaTickets()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitExpressions()
        Me.ARTICULOS.TotalCosteColumn.Expression = "Cantidad * PrecioCoste"
        Me.ARTICULOS.MargenColumn.Expression = "Iif(TotalCoste<>0,(ImporteSinIva - TotalCoste) / TotalCoste,1)"
    End Sub
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ARTICULOS_TICKETSRowChangeEventHandler(ByVal sender As Object, ByVal e As ARTICULOS_TICKETSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ARTICULOSRowChangeEventHandler(ByVal sender As Object, ByVal e As ARTICULOSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TICKETSRowChangeEventHandler(ByVal sender As Object, ByVal e As TICKETSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TICKETS_LINEASRowChangeEventHandler(ByVal sender As Object, ByVal e As TICKETS_LINEASRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ESTADISTICASRowChangeEventHandler(ByVal sender As Object, ByVal e As ESTADISTICASRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TOTALESRowChangeEventHandler(ByVal sender As Object, ByVal e As TOTALESRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ARTICULOS_TICKETSDataTable
        Inherits Global.System.Data.TypedTableBase(Of ARTICULOS_TICKETSRow)
        
        Private columnCodigoArticulo As Global.System.Data.DataColumn
        
        Private columnNumeroTicket As Global.System.Data.DataColumn
        
        Private columnFechaTicket As Global.System.Data.DataColumn
        
        Private columnNombreFiscal As Global.System.Data.DataColumn
        
        Private columnCantidad As Global.System.Data.DataColumn
        
        Private columnPrecio As Global.System.Data.DataColumn
        
        Private columnImporte As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ARTICULOS_TICKETS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodigoArticuloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoArticulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumeroTicketColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumeroTicket
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaTicketColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaTicket
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NombreFiscalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreFiscal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrecioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ImporteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporte
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ARTICULOS_TICKETSRow
            Get
                Return CType(Me.Rows(index),ARTICULOS_TICKETSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ARTICULOS_TICKETSRowChanging As ARTICULOS_TICKETSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ARTICULOS_TICKETSRowChanged As ARTICULOS_TICKETSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ARTICULOS_TICKETSRowDeleting As ARTICULOS_TICKETSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ARTICULOS_TICKETSRowDeleted As ARTICULOS_TICKETSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddARTICULOS_TICKETSRow(ByVal row As ARTICULOS_TICKETSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddARTICULOS_TICKETSRow(ByVal parentARTICULOSRowByARTICULOS_ARTICULOS_TICKETS As ARTICULOSRow, ByVal NumeroTicket As Integer, ByVal FechaTicket As Date, ByVal NombreFiscal As String, ByVal Cantidad As Decimal, ByVal Precio As Decimal, ByVal Importe As Decimal) As ARTICULOS_TICKETSRow
            Dim rowARTICULOS_TICKETSRow As ARTICULOS_TICKETSRow = CType(Me.NewRow,ARTICULOS_TICKETSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, NumeroTicket, FechaTicket, NombreFiscal, Cantidad, Precio, Importe}
            If (Not (parentARTICULOSRowByARTICULOS_ARTICULOS_TICKETS) Is Nothing) Then
                columnValuesArray(0) = parentARTICULOSRowByARTICULOS_ARTICULOS_TICKETS(0)
            End If
            rowARTICULOS_TICKETSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowARTICULOS_TICKETSRow)
            Return rowARTICULOS_TICKETSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ARTICULOS_TICKETSDataTable = CType(MyBase.Clone,ARTICULOS_TICKETSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ARTICULOS_TICKETSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCodigoArticulo = MyBase.Columns("CodigoArticulo")
            Me.columnNumeroTicket = MyBase.Columns("NumeroTicket")
            Me.columnFechaTicket = MyBase.Columns("FechaTicket")
            Me.columnNombreFiscal = MyBase.Columns("NombreFiscal")
            Me.columnCantidad = MyBase.Columns("Cantidad")
            Me.columnPrecio = MyBase.Columns("Precio")
            Me.columnImporte = MyBase.Columns("Importe")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCodigoArticulo = New Global.System.Data.DataColumn("CodigoArticulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoArticulo)
            Me.columnNumeroTicket = New Global.System.Data.DataColumn("NumeroTicket", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroTicket)
            Me.columnFechaTicket = New Global.System.Data.DataColumn("FechaTicket", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaTicket)
            Me.columnNombreFiscal = New Global.System.Data.DataColumn("NombreFiscal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreFiscal)
            Me.columnCantidad = New Global.System.Data.DataColumn("Cantidad", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidad)
            Me.columnPrecio = New Global.System.Data.DataColumn("Precio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecio)
            Me.columnImporte = New Global.System.Data.DataColumn("Importe", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporte)
            Me.columnCodigoArticulo.MaxLength = 15
            Me.columnNombreFiscal.ReadOnly = True
            Me.columnNombreFiscal.MaxLength = 50
            Me.columnCantidad.ReadOnly = True
            Me.columnPrecio.ReadOnly = True
            Me.columnImporte.ReadOnly = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewARTICULOS_TICKETSRow() As ARTICULOS_TICKETSRow
            Return CType(Me.NewRow, ARTICULOS_TICKETSRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ARTICULOS_TICKETSRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ARTICULOS_TICKETSRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ARTICULOS_TICKETSRowChangedEvent) Is Nothing) Then
                RaiseEvent ARTICULOS_TICKETSRowChanged(Me, New ARTICULOS_TICKETSRowChangeEvent(CType(e.Row, ARTICULOS_TICKETSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ARTICULOS_TICKETSRowChangingEvent) Is Nothing) Then
                RaiseEvent ARTICULOS_TICKETSRowChanging(Me, New ARTICULOS_TICKETSRowChangeEvent(CType(e.Row, ARTICULOS_TICKETSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ARTICULOS_TICKETSRowDeletedEvent) Is Nothing) Then
                RaiseEvent ARTICULOS_TICKETSRowDeleted(Me, New ARTICULOS_TICKETSRowChangeEvent(CType(e.Row, ARTICULOS_TICKETSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ARTICULOS_TICKETSRowDeletingEvent) Is Nothing) Then
                RaiseEvent ARTICULOS_TICKETSRowDeleting(Me, New ARTICULOS_TICKETSRowChangeEvent(CType(e.Row, ARTICULOS_TICKETSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveARTICULOS_TICKETSRow(ByVal row As ARTICULOS_TICKETSRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsConsultaTickets = New dsConsultaTickets()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ARTICULOS_TICKETSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class ARTICULOSDataTable
        Inherits Global.System.Data.TypedTableBase(Of ARTICULOSRow)

        Private columnCodigoArticulo As Global.System.Data.DataColumn

        Private columnDescripcionArticulo As Global.System.Data.DataColumn

        Private columnCantidad As Global.System.Data.DataColumn

        Private columnImporte As Global.System.Data.DataColumn

        Private columnDescripcionFamilia As Global.System.Data.DataColumn

        Private columnDescripcionSubFamilia As Global.System.Data.DataColumn

        Private columnImporteSinIva As Global.System.Data.DataColumn

        Private columnPrecioCoste As Global.System.Data.DataColumn

        Private columnTotalCoste As Global.System.Data.DataColumn

        Private columnMargen As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            Me.New(False)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal initExpressions As Boolean)
            MyBase.New()
            Me.TableName = "ARTICULOS"
            Me.BeginInit()
            Me.InitClass()
            If (initExpressions = True) Then
                Me.InitExpressions()
            End If
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoArticuloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoArticulo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DescripcionArticuloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcionArticulo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantidad
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporte
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DescripcionFamiliaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcionFamilia
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DescripcionSubFamiliaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcionSubFamilia
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteSinIvaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporteSinIva
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioCosteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioCoste
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalCosteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalCoste
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MargenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMargen
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ARTICULOSRow
            Get
                Return CType(Me.Rows(index), ARTICULOSRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ARTICULOSRowChanging As ARTICULOSRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ARTICULOSRowChanged As ARTICULOSRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ARTICULOSRowDeleting As ARTICULOSRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ARTICULOSRowDeleted As ARTICULOSRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddARTICULOSRow(ByVal row As ARTICULOSRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddARTICULOSRow(ByVal CodigoArticulo As String, ByVal DescripcionArticulo As String, ByVal Cantidad As Decimal, ByVal Importe As Decimal, ByVal DescripcionFamilia As String, ByVal DescripcionSubFamilia As String, ByVal ImporteSinIva As Decimal, ByVal PrecioCoste As Decimal, ByVal TotalCoste As Decimal, ByVal Margen As Decimal) As ARTICULOSRow
            Dim rowARTICULOSRow As ARTICULOSRow = CType(Me.NewRow, ARTICULOSRow)
            Dim columnValuesArray() As Object = New Object() {CodigoArticulo, DescripcionArticulo, Cantidad, Importe, DescripcionFamilia, DescripcionSubFamilia, ImporteSinIva, PrecioCoste, TotalCoste, Margen}
            rowARTICULOSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowARTICULOSRow)
            Return rowARTICULOSRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddARTICULOSRow(ByVal CodigoArticulo As String, ByVal DescripcionArticulo As String, ByVal Cantidad As Decimal, ByVal Importe As Decimal, ByVal DescripcionFamilia As String, ByVal DescripcionSubFamilia As String, ByVal ImporteSinIva As Decimal, ByVal PrecioCoste As Decimal) As ARTICULOSRow
            Dim rowARTICULOSRow As ARTICULOSRow = CType(Me.NewRow, ARTICULOSRow)
            Dim columnValuesArray() As Object = New Object() {CodigoArticulo, DescripcionArticulo, Cantidad, Importe, DescripcionFamilia, DescripcionSubFamilia, ImporteSinIva, PrecioCoste, Nothing, Nothing}
            rowARTICULOSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowARTICULOSRow)
            Return rowARTICULOSRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ARTICULOSDataTable = CType(MyBase.Clone, ARTICULOSDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ARTICULOSDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnCodigoArticulo = MyBase.Columns("CodigoArticulo")
            Me.columnDescripcionArticulo = MyBase.Columns("DescripcionArticulo")
            Me.columnCantidad = MyBase.Columns("Cantidad")
            Me.columnImporte = MyBase.Columns("Importe")
            Me.columnDescripcionFamilia = MyBase.Columns("DescripcionFamilia")
            Me.columnDescripcionSubFamilia = MyBase.Columns("DescripcionSubFamilia")
            Me.columnImporteSinIva = MyBase.Columns("ImporteSinIva")
            Me.columnPrecioCoste = MyBase.Columns("PrecioCoste")
            Me.columnTotalCoste = MyBase.Columns("TotalCoste")
            Me.columnMargen = MyBase.Columns("Margen")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnCodigoArticulo = New Global.System.Data.DataColumn("CodigoArticulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoArticulo)
            Me.columnDescripcionArticulo = New Global.System.Data.DataColumn("DescripcionArticulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcionArticulo)
            Me.columnCantidad = New Global.System.Data.DataColumn("Cantidad", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidad)
            Me.columnImporte = New Global.System.Data.DataColumn("Importe", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporte)
            Me.columnDescripcionFamilia = New Global.System.Data.DataColumn("DescripcionFamilia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcionFamilia)
            Me.columnDescripcionSubFamilia = New Global.System.Data.DataColumn("DescripcionSubFamilia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcionSubFamilia)
            Me.columnImporteSinIva = New Global.System.Data.DataColumn("ImporteSinIva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporteSinIva)
            Me.columnPrecioCoste = New Global.System.Data.DataColumn("PrecioCoste", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioCoste)
            Me.columnTotalCoste = New Global.System.Data.DataColumn("TotalCoste", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalCoste)
            Me.columnMargen = New Global.System.Data.DataColumn("Margen", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMargen)
            Me.columnCodigoArticulo.MaxLength = 15
            Me.columnDescripcionArticulo.MaxLength = 150
            Me.columnCantidad.ReadOnly = True
            Me.columnImporte.ReadOnly = True
            Me.columnDescripcionFamilia.ReadOnly = True
            Me.columnDescripcionFamilia.MaxLength = 67
            Me.columnDescripcionSubFamilia.ReadOnly = True
            Me.columnDescripcionSubFamilia.MaxLength = 67
            Me.columnImporteSinIva.ReadOnly = True
            Me.columnPrecioCoste.ReadOnly = True
            Me.columnTotalCoste.ReadOnly = True
            Me.columnMargen.ReadOnly = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewARTICULOSRow() As ARTICULOSRow
            Return CType(Me.NewRow, ARTICULOSRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ARTICULOSRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ARTICULOSRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitExpressions()
            Me.TotalCosteColumn.Expression = "Cantidad * PrecioCoste"
            Me.MargenColumn.Expression = "Iif(TotalCoste<>0,(ImporteSinIva - TotalCoste) / TotalCoste,1)"
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ARTICULOSRowChangedEvent) Is Nothing) Then
                RaiseEvent ARTICULOSRowChanged(Me, New ARTICULOSRowChangeEvent(CType(e.Row, ARTICULOSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ARTICULOSRowChangingEvent) Is Nothing) Then
                RaiseEvent ARTICULOSRowChanging(Me, New ARTICULOSRowChangeEvent(CType(e.Row, ARTICULOSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ARTICULOSRowDeletedEvent) Is Nothing) Then
                RaiseEvent ARTICULOSRowDeleted(Me, New ARTICULOSRowChangeEvent(CType(e.Row, ARTICULOSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ARTICULOSRowDeletingEvent) Is Nothing) Then
                RaiseEvent ARTICULOSRowDeleting(Me, New ARTICULOSRowChangeEvent(CType(e.Row, ARTICULOSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveARTICULOSRow(ByVal row As ARTICULOSRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsConsultaTickets = New dsConsultaTickets()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ARTICULOSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class TICKETSDataTable
        Inherits Global.System.Data.TypedTableBase(Of TICKETSRow)

        Private columnId As Global.System.Data.DataColumn

        Private columnCodigoTienda As Global.System.Data.DataColumn

        Private columnCodigoCaja As Global.System.Data.DataColumn

        Private columnNumeroTicket As Global.System.Data.DataColumn

        Private columnFechaTicket As Global.System.Data.DataColumn

        Private columnHoraTicket As Global.System.Data.DataColumn

        Private columnTipoCobro As Global.System.Data.DataColumn

        Private columnCodigoCliente As Global.System.Data.DataColumn

        Private columnImpresoTicket As Global.System.Data.DataColumn

        Private columnImporteEfectivo As Global.System.Data.DataColumn

        Private columnImporteTalonCheque As Global.System.Data.DataColumn

        Private columnImporteValesProveedor As Global.System.Data.DataColumn

        Private columnImporteValesCobrados As Global.System.Data.DataColumn

        Private columnImporteTarjeta As Global.System.Data.DataColumn

        Private columnImporteEnvases As Global.System.Data.DataColumn

        Private columnImportePendienteCobro As Global.System.Data.DataColumn

        Private columnImporteValesEmitidos As Global.System.Data.DataColumn

        Private columnImporteTotalCambios As Global.System.Data.DataColumn

        Private columnImporteCambios As Global.System.Data.DataColumn

        Private columnPorcentajeDescuento As Global.System.Data.DataColumn

        Private columnImporteDescuento As Global.System.Data.DataColumn

        Private columnNumeroLineas As Global.System.Data.DataColumn

        Private columnImporteTotal As Global.System.Data.DataColumn

        Private columnEnEspera As Global.System.Data.DataColumn

        Private columnNombreFiscal As Global.System.Data.DataColumn

        Private columnRepartoDomicilio As Global.System.Data.DataColumn

        Private columnDireccionReparto As Global.System.Data.DataColumn

        Private columnImporteSorteo As Global.System.Data.DataColumn

        Private columnNumeroAlbaran As Global.System.Data.DataColumn

        Private columnNumeroDocumento As Global.System.Data.DataColumn

        Private columnCodigoEmpleado As Global.System.Data.DataColumn

        Private columnTipoFactura As Global.System.Data.DataColumn

        Private columnFidelizacionImporte As Global.System.Data.DataColumn

        Private columnFidelizacionVales As Global.System.Data.DataColumn

        Private columnFidelizacionPuntos As Global.System.Data.DataColumn

        Private columnFidelizacionLoteria As Global.System.Data.DataColumn

        Private columnValesCanjeados As Global.System.Data.DataColumn

        Private columnTotIva As Global.System.Data.DataColumn

        Private columnBase As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "TICKETS"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoTiendaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoTienda
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoCajaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoCaja
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumeroTicketColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumeroTicket
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaTicketColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaTicket
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property HoraTicketColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHoraTicket
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TipoCobroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoCobro
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoCliente
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImpresoTicketColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpresoTicket
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteEfectivoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporteEfectivo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteTalonChequeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporteTalonCheque
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteValesProveedorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporteValesProveedor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteValesCobradosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporteValesCobrados
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteTarjetaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporteTarjeta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteEnvasesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporteEnvases
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImportePendienteCobroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImportePendienteCobro
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteValesEmitidosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporteValesEmitidos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteTotalCambiosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporteTotalCambios
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteCambiosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporteCambios
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcentajeDescuentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcentajeDescuento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteDescuentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporteDescuento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumeroLineasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumeroLineas
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporteTotal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EnEsperaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEnEspera
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NombreFiscalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreFiscal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RepartoDomicilioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRepartoDomicilio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DireccionRepartoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDireccionReparto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteSorteoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporteSorteo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumeroAlbaranColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumeroAlbaran
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumeroDocumentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumeroDocumento
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoEmpleadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoEmpleado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TipoFacturaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoFactura
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FidelizacionImporteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFidelizacionImporte
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FidelizacionValesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFidelizacionVales
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FidelizacionPuntosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFidelizacionPuntos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FidelizacionLoteriaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFidelizacionLoteria
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ValesCanjeadosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValesCanjeados
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotIvaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotIva
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBase
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As TICKETSRow
            Get
                Return CType(Me.Rows(index), TICKETSRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TICKETSRowChanging As TICKETSRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TICKETSRowChanged As TICKETSRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TICKETSRowDeleting As TICKETSRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TICKETSRowDeleted As TICKETSRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddTICKETSRow(ByVal row As TICKETSRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddTICKETSRow( _
                    ByVal CodigoTienda As Integer, _
                    ByVal CodigoCaja As Integer, _
                    ByVal NumeroTicket As Integer, _
                    ByVal FechaTicket As Date, _
                    ByVal HoraTicket As String, _
                    ByVal TipoCobro As String, _
                    ByVal CodigoCliente As Integer, _
                    ByVal ImpresoTicket As Boolean, _
                    ByVal ImporteEfectivo As Decimal, _
                    ByVal ImporteTalonCheque As Decimal, _
                    ByVal ImporteValesProveedor As Decimal, _
                    ByVal ImporteValesCobrados As Decimal, _
                    ByVal ImporteTarjeta As Decimal, _
                    ByVal ImporteEnvases As Decimal, _
                    ByVal ImportePendienteCobro As Decimal, _
                    ByVal ImporteValesEmitidos As Decimal, _
                    ByVal ImporteTotalCambios As Decimal, _
                    ByVal ImporteCambios As Decimal, _
                    ByVal PorcentajeDescuento As Decimal, _
                    ByVal ImporteDescuento As Decimal, _
                    ByVal NumeroLineas As Integer, _
                    ByVal ImporteTotal As Decimal, _
                    ByVal EnEspera As Boolean, _
                    ByVal NombreFiscal As String, _
                    ByVal RepartoDomicilio As Boolean, _
                    ByVal DireccionReparto As String, _
                    ByVal ImporteSorteo As Decimal, _
                    ByVal NumeroAlbaran As Integer, _
                    ByVal NumeroDocumento As String, _
                    ByVal CodigoEmpleado As String, _
                    ByVal TipoFactura As Integer, _
                    ByVal FidelizacionImporte As Decimal, _
                    ByVal FidelizacionVales As Decimal, _
                    ByVal FidelizacionPuntos As Decimal, _
                    ByVal FidelizacionLoteria As Decimal, _
                    ByVal ValesCanjeados As Decimal, _
                    ByVal TotIva As Decimal, _
                    ByVal Base As Decimal) As TICKETSRow
            Dim rowTICKETSRow As TICKETSRow = CType(Me.NewRow, TICKETSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CodigoTienda, CodigoCaja, NumeroTicket, FechaTicket, HoraTicket, TipoCobro, CodigoCliente, ImpresoTicket, ImporteEfectivo, ImporteTalonCheque, ImporteValesProveedor, ImporteValesCobrados, ImporteTarjeta, ImporteEnvases, ImportePendienteCobro, ImporteValesEmitidos, ImporteTotalCambios, ImporteCambios, PorcentajeDescuento, ImporteDescuento, NumeroLineas, ImporteTotal, EnEspera, NombreFiscal, RepartoDomicilio, DireccionReparto, ImporteSorteo, NumeroAlbaran, NumeroDocumento, CodigoEmpleado, TipoFactura, FidelizacionImporte, FidelizacionVales, FidelizacionPuntos, FidelizacionLoteria, ValesCanjeados, TotIva, Base}
            rowTICKETSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTICKETSRow)
            Return rowTICKETSRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindById(ByVal Id As Integer) As TICKETSRow
            Return CType(Me.Rows.Find(New Object() {Id}), TICKETSRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TICKETSDataTable = CType(MyBase.Clone, TICKETSDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TICKETSDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnCodigoTienda = MyBase.Columns("CodigoTienda")
            Me.columnCodigoCaja = MyBase.Columns("CodigoCaja")
            Me.columnNumeroTicket = MyBase.Columns("NumeroTicket")
            Me.columnFechaTicket = MyBase.Columns("FechaTicket")
            Me.columnHoraTicket = MyBase.Columns("HoraTicket")
            Me.columnTipoCobro = MyBase.Columns("TipoCobro")
            Me.columnCodigoCliente = MyBase.Columns("CodigoCliente")
            Me.columnImpresoTicket = MyBase.Columns("ImpresoTicket")
            Me.columnImporteEfectivo = MyBase.Columns("ImporteEfectivo")
            Me.columnImporteTalonCheque = MyBase.Columns("ImporteTalonCheque")
            Me.columnImporteValesProveedor = MyBase.Columns("ImporteValesProveedor")
            Me.columnImporteValesCobrados = MyBase.Columns("ImporteValesCobrados")
            Me.columnImporteTarjeta = MyBase.Columns("ImporteTarjeta")
            Me.columnImporteEnvases = MyBase.Columns("ImporteEnvases")
            Me.columnImportePendienteCobro = MyBase.Columns("ImportePendienteCobro")
            Me.columnImporteValesEmitidos = MyBase.Columns("ImporteValesEmitidos")
            Me.columnImporteTotalCambios = MyBase.Columns("ImporteTotalCambios")
            Me.columnImporteCambios = MyBase.Columns("ImporteCambios")
            Me.columnPorcentajeDescuento = MyBase.Columns("PorcentajeDescuento")
            Me.columnImporteDescuento = MyBase.Columns("ImporteDescuento")
            Me.columnNumeroLineas = MyBase.Columns("NumeroLineas")
            Me.columnImporteTotal = MyBase.Columns("ImporteTotal")
            Me.columnEnEspera = MyBase.Columns("EnEspera")
            Me.columnNombreFiscal = MyBase.Columns("NombreFiscal")
            Me.columnRepartoDomicilio = MyBase.Columns("RepartoDomicilio")
            Me.columnDireccionReparto = MyBase.Columns("DireccionReparto")
            Me.columnImporteSorteo = MyBase.Columns("ImporteSorteo")
            Me.columnNumeroAlbaran = MyBase.Columns("NumeroAlbaran")
            Me.columnNumeroDocumento = MyBase.Columns("NumeroDocumento")
            Me.columnCodigoEmpleado = MyBase.Columns("CodigoEmpleado")
            Me.columnTipoFactura = MyBase.Columns("TipoFactura")
            Me.columnFidelizacionImporte = MyBase.Columns("FidelizacionImporte")
            Me.columnFidelizacionVales = MyBase.Columns("FidelizacionVales")
            Me.columnFidelizacionPuntos = MyBase.Columns("FidelizacionPuntos")
            Me.columnFidelizacionLoteria = MyBase.Columns("FidelizacionLoteria")
            Me.columnValesCanjeados = MyBase.Columns("ValesCanjeados")
            Me.columnTotIva = MyBase.Columns("TotIva")
            Me.columnBase = MyBase.Columns("Base")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnCodigoTienda = New Global.System.Data.DataColumn("CodigoTienda", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoTienda)
            Me.columnCodigoCaja = New Global.System.Data.DataColumn("CodigoCaja", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoCaja)
            Me.columnNumeroTicket = New Global.System.Data.DataColumn("NumeroTicket", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroTicket)
            Me.columnFechaTicket = New Global.System.Data.DataColumn("FechaTicket", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaTicket)
            Me.columnHoraTicket = New Global.System.Data.DataColumn("HoraTicket", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHoraTicket)
            Me.columnTipoCobro = New Global.System.Data.DataColumn("TipoCobro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoCobro)
            Me.columnCodigoCliente = New Global.System.Data.DataColumn("CodigoCliente", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoCliente)
            Me.columnImpresoTicket = New Global.System.Data.DataColumn("ImpresoTicket", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpresoTicket)
            Me.columnImporteEfectivo = New Global.System.Data.DataColumn("ImporteEfectivo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporteEfectivo)
            Me.columnImporteTalonCheque = New Global.System.Data.DataColumn("ImporteTalonCheque", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporteTalonCheque)
            Me.columnImporteValesProveedor = New Global.System.Data.DataColumn("ImporteValesProveedor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporteValesProveedor)
            Me.columnImporteValesCobrados = New Global.System.Data.DataColumn("ImporteValesCobrados", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporteValesCobrados)
            Me.columnImporteTarjeta = New Global.System.Data.DataColumn("ImporteTarjeta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporteTarjeta)
            Me.columnImporteEnvases = New Global.System.Data.DataColumn("ImporteEnvases", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporteEnvases)
            Me.columnImportePendienteCobro = New Global.System.Data.DataColumn("ImportePendienteCobro", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImportePendienteCobro)
            Me.columnImporteValesEmitidos = New Global.System.Data.DataColumn("ImporteValesEmitidos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporteValesEmitidos)
            Me.columnImporteTotalCambios = New Global.System.Data.DataColumn("ImporteTotalCambios", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporteTotalCambios)
            Me.columnImporteCambios = New Global.System.Data.DataColumn("ImporteCambios", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporteCambios)
            Me.columnPorcentajeDescuento = New Global.System.Data.DataColumn("PorcentajeDescuento", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcentajeDescuento)
            Me.columnImporteDescuento = New Global.System.Data.DataColumn("ImporteDescuento", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporteDescuento)
            Me.columnNumeroLineas = New Global.System.Data.DataColumn("NumeroLineas", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroLineas)
            Me.columnImporteTotal = New Global.System.Data.DataColumn("ImporteTotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporteTotal)
            Me.columnEnEspera = New Global.System.Data.DataColumn("EnEspera", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEnEspera)
            Me.columnNombreFiscal = New Global.System.Data.DataColumn("NombreFiscal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreFiscal)
            Me.columnRepartoDomicilio = New Global.System.Data.DataColumn("RepartoDomicilio", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRepartoDomicilio)
            Me.columnDireccionReparto = New Global.System.Data.DataColumn("DireccionReparto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDireccionReparto)
            Me.columnImporteSorteo = New Global.System.Data.DataColumn("ImporteSorteo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporteSorteo)
            Me.columnNumeroAlbaran = New Global.System.Data.DataColumn("NumeroAlbaran", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroAlbaran)
            Me.columnNumeroDocumento = New Global.System.Data.DataColumn("NumeroDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroDocumento)
            Me.columnCodigoEmpleado = New Global.System.Data.DataColumn("CodigoEmpleado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoEmpleado)
            Me.columnTipoFactura = New Global.System.Data.DataColumn("TipoFactura", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoFactura)
            Me.columnFidelizacionImporte = New Global.System.Data.DataColumn("FidelizacionImporte", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFidelizacionImporte)
            Me.columnFidelizacionVales = New Global.System.Data.DataColumn("FidelizacionVales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFidelizacionVales)
            Me.columnFidelizacionPuntos = New Global.System.Data.DataColumn("FidelizacionPuntos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFidelizacionPuntos)
            Me.columnFidelizacionLoteria = New Global.System.Data.DataColumn("FidelizacionLoteria", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFidelizacionLoteria)
            Me.columnValesCanjeados = New Global.System.Data.DataColumn("ValesCanjeados", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValesCanjeados)
            Me.columnTotIva = New Global.System.Data.DataColumn("TotIva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotIva)
            Me.columnBase = New Global.System.Data.DataColumn("Base", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBase)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, True))
            Me.columnId.AutoIncrement = True
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = False
            Me.columnId.ReadOnly = True
            Me.columnId.Unique = True
            Me.columnCodigoCliente.DefaultValue = CType(0, Integer)
            Me.columnImpresoTicket.DefaultValue = CType(False, Boolean)
            Me.columnImporteEfectivo.DefaultValue = CType(0D, Decimal)
            Me.columnImporteTalonCheque.DefaultValue = CType(0D, Decimal)
            Me.columnImporteValesProveedor.DefaultValue = CType(0D, Decimal)
            Me.columnImporteValesCobrados.DefaultValue = CType(0D, Decimal)
            Me.columnImporteTarjeta.DefaultValue = CType(0D, Decimal)
            Me.columnImporteEnvases.DefaultValue = CType(0D, Decimal)
            Me.columnImportePendienteCobro.DefaultValue = CType(0D, Decimal)
            Me.columnImporteValesEmitidos.DefaultValue = CType(0D, Decimal)
            Me.columnImporteTotalCambios.DefaultValue = CType(0D, Decimal)
            Me.columnImporteCambios.DefaultValue = CType(0D, Decimal)
            Me.columnPorcentajeDescuento.DefaultValue = CType(0D, Decimal)
            Me.columnImporteDescuento.DefaultValue = CType(0D, Decimal)
            Me.columnNumeroLineas.DefaultValue = CType(0, Integer)
            Me.columnImporteTotal.DefaultValue = CType(0D, Decimal)
            Me.columnEnEspera.DefaultValue = CType(False, Boolean)
            Me.columnImporteSorteo.DefaultValue = CType(0D, Decimal)
            Me.columnFidelizacionImporte.DefaultValue = CType(0D, Decimal)
            Me.columnFidelizacionVales.DefaultValue = CType(0D, Decimal)
            Me.columnFidelizacionPuntos.DefaultValue = CType(0D, Decimal)
            Me.columnFidelizacionLoteria.DefaultValue = CType(0D, Decimal)
            Me.columnValesCanjeados.DefaultValue = CType(0D, Decimal)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewTICKETSRow() As TICKETSRow
            Return CType(Me.NewRow, TICKETSRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TICKETSRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TICKETSRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TICKETSRowChangedEvent) Is Nothing) Then
                RaiseEvent TICKETSRowChanged(Me, New TICKETSRowChangeEvent(CType(e.Row, TICKETSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TICKETSRowChangingEvent) Is Nothing) Then
                RaiseEvent TICKETSRowChanging(Me, New TICKETSRowChangeEvent(CType(e.Row, TICKETSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TICKETSRowDeletedEvent) Is Nothing) Then
                RaiseEvent TICKETSRowDeleted(Me, New TICKETSRowChangeEvent(CType(e.Row, TICKETSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TICKETSRowDeletingEvent) Is Nothing) Then
                RaiseEvent TICKETSRowDeleting(Me, New TICKETSRowChangeEvent(CType(e.Row, TICKETSRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveTICKETSRow(ByVal row As TICKETSRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsConsultaTickets = New dsConsultaTickets()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TICKETSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class TICKETS_LINEASDataTable
        Inherits Global.System.Data.TypedTableBase(Of TICKETS_LINEASRow)

        Private columnId As Global.System.Data.DataColumn

        Private columnTicket_Id As Global.System.Data.DataColumn

        Private columnCodigoArticulo As Global.System.Data.DataColumn

        Private columnPromocion As Global.System.Data.DataColumn

        Private columnPrecioManual As Global.System.Data.DataColumn

        Private columnCodigoEmleado As Global.System.Data.DataColumn

        Private columnDescripcionArticulo As Global.System.Data.DataColumn

        Private columnCantidad As Global.System.Data.DataColumn

        Private columnPrecio As Global.System.Data.DataColumn

        Private columnDescuentoLinea As Global.System.Data.DataColumn

        Private columnImporte As Global.System.Data.DataColumn

        Private columnPorcentajeIVA As Global.System.Data.DataColumn

        Private columnNumeroTalla As Global.System.Data.DataColumn

        Private columnCodigoColor As Global.System.Data.DataColumn

        Private columnCodigoArticuloRegalo As Global.System.Data.DataColumn

        Private columnUnidadesRegalo As Global.System.Data.DataColumn

        Private columnPrecioRegalo As Global.System.Data.DataColumn

        Private columnCodigoColorPromocion As Global.System.Data.DataColumn

        Private columnNumeroTallaPromocion As Global.System.Data.DataColumn

        Private columnFraccionSinCargo As Global.System.Data.DataColumn

        Private columnUnidadesSinCargo As Global.System.Data.DataColumn

        Private columnLineaTratada As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "TICKETS_LINEAS"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Ticket_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTicket_Id
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoArticuloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoArticulo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PromocionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPromocion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioManualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioManual
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoEmleadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoEmleado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DescripcionArticuloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcionArticulo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantidad
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DescuentoLineaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescuentoLinea
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporte
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcentajeIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcentajeIVA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumeroTallaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumeroTalla
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoColorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoColor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoArticuloRegaloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoArticuloRegalo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UnidadesRegaloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnidadesRegalo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioRegaloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioRegalo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoColorPromocionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoColorPromocion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumeroTallaPromocionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumeroTallaPromocion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FraccionSinCargoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFraccionSinCargo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UnidadesSinCargoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnidadesSinCargo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LineaTratadaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLineaTratada
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As TICKETS_LINEASRow
            Get
                Return CType(Me.Rows(index), TICKETS_LINEASRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TICKETS_LINEASRowChanging As TICKETS_LINEASRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TICKETS_LINEASRowChanged As TICKETS_LINEASRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TICKETS_LINEASRowDeleting As TICKETS_LINEASRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TICKETS_LINEASRowDeleted As TICKETS_LINEASRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddTICKETS_LINEASRow(ByVal row As TICKETS_LINEASRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddTICKETS_LINEASRow( _
                    ByVal parentTICKETSRowByTICKETS_TICKETS_LINEAS As TICKETSRow, _
                    ByVal CodigoArticulo As String, _
                    ByVal Promocion As Boolean, _
                    ByVal PrecioManual As Boolean, _
                    ByVal CodigoEmleado As Integer, _
                    ByVal DescripcionArticulo As String, _
                    ByVal Cantidad As Decimal, _
                    ByVal Precio As Decimal, _
                    ByVal DescuentoLinea As Decimal, _
                    ByVal Importe As Decimal, _
                    ByVal PorcentajeIVA As Decimal, _
                    ByVal NumeroTalla As Integer, _
                    ByVal CodigoColor As Integer, _
                    ByVal CodigoArticuloRegalo As String, _
                    ByVal UnidadesRegalo As Decimal, _
                    ByVal PrecioRegalo As Decimal, _
                    ByVal CodigoColorPromocion As Integer, _
                    ByVal NumeroTallaPromocion As Integer, _
                    ByVal FraccionSinCargo As Decimal, _
                    ByVal UnidadesSinCargo As Decimal, _
                    ByVal LineaTratada As Boolean) As TICKETS_LINEASRow
            Dim rowTICKETS_LINEASRow As TICKETS_LINEASRow = CType(Me.NewRow, TICKETS_LINEASRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, CodigoArticulo, Promocion, PrecioManual, CodigoEmleado, DescripcionArticulo, Cantidad, Precio, DescuentoLinea, Importe, PorcentajeIVA, NumeroTalla, CodigoColor, CodigoArticuloRegalo, UnidadesRegalo, PrecioRegalo, CodigoColorPromocion, NumeroTallaPromocion, FraccionSinCargo, UnidadesSinCargo, LineaTratada}
            If (Not (parentTICKETSRowByTICKETS_TICKETS_LINEAS) Is Nothing) Then
                columnValuesArray(1) = parentTICKETSRowByTICKETS_TICKETS_LINEAS(0)
            End If
            rowTICKETS_LINEASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTICKETS_LINEASRow)
            Return rowTICKETS_LINEASRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindById(ByVal Id As Integer) As TICKETS_LINEASRow
            Return CType(Me.Rows.Find(New Object() {Id}), TICKETS_LINEASRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TICKETS_LINEASDataTable = CType(MyBase.Clone, TICKETS_LINEASDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TICKETS_LINEASDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnTicket_Id = MyBase.Columns("Ticket_Id")
            Me.columnCodigoArticulo = MyBase.Columns("CodigoArticulo")
            Me.columnPromocion = MyBase.Columns("Promocion")
            Me.columnPrecioManual = MyBase.Columns("PrecioManual")
            Me.columnCodigoEmleado = MyBase.Columns("CodigoEmleado")
            Me.columnDescripcionArticulo = MyBase.Columns("DescripcionArticulo")
            Me.columnCantidad = MyBase.Columns("Cantidad")
            Me.columnPrecio = MyBase.Columns("Precio")
            Me.columnDescuentoLinea = MyBase.Columns("DescuentoLinea")
            Me.columnImporte = MyBase.Columns("Importe")
            Me.columnPorcentajeIVA = MyBase.Columns("PorcentajeIVA")
            Me.columnNumeroTalla = MyBase.Columns("NumeroTalla")
            Me.columnCodigoColor = MyBase.Columns("CodigoColor")
            Me.columnCodigoArticuloRegalo = MyBase.Columns("CodigoArticuloRegalo")
            Me.columnUnidadesRegalo = MyBase.Columns("UnidadesRegalo")
            Me.columnPrecioRegalo = MyBase.Columns("PrecioRegalo")
            Me.columnCodigoColorPromocion = MyBase.Columns("CodigoColorPromocion")
            Me.columnNumeroTallaPromocion = MyBase.Columns("NumeroTallaPromocion")
            Me.columnFraccionSinCargo = MyBase.Columns("FraccionSinCargo")
            Me.columnUnidadesSinCargo = MyBase.Columns("UnidadesSinCargo")
            Me.columnLineaTratada = MyBase.Columns("LineaTratada")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnTicket_Id = New Global.System.Data.DataColumn("Ticket_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTicket_Id)
            Me.columnCodigoArticulo = New Global.System.Data.DataColumn("CodigoArticulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoArticulo)
            Me.columnPromocion = New Global.System.Data.DataColumn("Promocion", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPromocion)
            Me.columnPrecioManual = New Global.System.Data.DataColumn("PrecioManual", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioManual)
            Me.columnCodigoEmleado = New Global.System.Data.DataColumn("CodigoEmleado", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoEmleado)
            Me.columnDescripcionArticulo = New Global.System.Data.DataColumn("DescripcionArticulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcionArticulo)
            Me.columnCantidad = New Global.System.Data.DataColumn("Cantidad", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidad)
            Me.columnPrecio = New Global.System.Data.DataColumn("Precio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecio)
            Me.columnDescuentoLinea = New Global.System.Data.DataColumn("DescuentoLinea", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescuentoLinea)
            Me.columnImporte = New Global.System.Data.DataColumn("Importe", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporte)
            Me.columnPorcentajeIVA = New Global.System.Data.DataColumn("PorcentajeIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcentajeIVA)
            Me.columnNumeroTalla = New Global.System.Data.DataColumn("NumeroTalla", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroTalla)
            Me.columnCodigoColor = New Global.System.Data.DataColumn("CodigoColor", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoColor)
            Me.columnCodigoArticuloRegalo = New Global.System.Data.DataColumn("CodigoArticuloRegalo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoArticuloRegalo)
            Me.columnUnidadesRegalo = New Global.System.Data.DataColumn("UnidadesRegalo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnidadesRegalo)
            Me.columnPrecioRegalo = New Global.System.Data.DataColumn("PrecioRegalo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioRegalo)
            Me.columnCodigoColorPromocion = New Global.System.Data.DataColumn("CodigoColorPromocion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoColorPromocion)
            Me.columnNumeroTallaPromocion = New Global.System.Data.DataColumn("NumeroTallaPromocion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroTallaPromocion)
            Me.columnFraccionSinCargo = New Global.System.Data.DataColumn("FraccionSinCargo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFraccionSinCargo)
            Me.columnUnidadesSinCargo = New Global.System.Data.DataColumn("UnidadesSinCargo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnidadesSinCargo)
            Me.columnLineaTratada = New Global.System.Data.DataColumn("LineaTratada", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLineaTratada)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, True))
            Me.columnId.AutoIncrement = True
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = False
            Me.columnId.ReadOnly = True
            Me.columnId.Unique = True
            Me.columnTicket_Id.DefaultValue = CType(0, Integer)
            Me.columnCodigoArticulo.DefaultValue = CType("", String)
            Me.columnCodigoArticulo.MaxLength = 15
            Me.columnPromocion.DefaultValue = CType(False, Boolean)
            Me.columnPrecioManual.DefaultValue = CType(False, Boolean)
            Me.columnDescripcionArticulo.DefaultValue = CType("", String)
            Me.columnDescripcionArticulo.MaxLength = 150
            Me.columnCantidad.DefaultValue = CType(1D, Decimal)
            Me.columnPrecio.DefaultValue = CType(0D, Decimal)
            Me.columnDescuentoLinea.DefaultValue = CType(0D, Decimal)
            Me.columnImporte.DefaultValue = CType(0D, Decimal)
            Me.columnPorcentajeIVA.DefaultValue = CType(1D, Decimal)
            Me.columnNumeroTalla.DefaultValue = CType(1, Integer)
            Me.columnCodigoColor.DefaultValue = CType(0, Integer)
            Me.columnCodigoArticuloRegalo.DefaultValue = CType("", String)
            Me.columnUnidadesRegalo.DefaultValue = CType(0D, Decimal)
            Me.columnPrecioRegalo.DefaultValue = CType(0D, Decimal)
            Me.columnCodigoColorPromocion.DefaultValue = CType(-1, Integer)
            Me.columnNumeroTallaPromocion.DefaultValue = CType(-1, Integer)
            Me.columnFraccionSinCargo.DefaultValue = CType(0D, Decimal)
            Me.columnUnidadesSinCargo.DefaultValue = CType(0D, Decimal)
            Me.columnLineaTratada.DefaultValue = CType(False, Boolean)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewTICKETS_LINEASRow() As TICKETS_LINEASRow
            Return CType(Me.NewRow, TICKETS_LINEASRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TICKETS_LINEASRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TICKETS_LINEASRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TICKETS_LINEASRowChangedEvent) Is Nothing) Then
                RaiseEvent TICKETS_LINEASRowChanged(Me, New TICKETS_LINEASRowChangeEvent(CType(e.Row, TICKETS_LINEASRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TICKETS_LINEASRowChangingEvent) Is Nothing) Then
                RaiseEvent TICKETS_LINEASRowChanging(Me, New TICKETS_LINEASRowChangeEvent(CType(e.Row, TICKETS_LINEASRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TICKETS_LINEASRowDeletedEvent) Is Nothing) Then
                RaiseEvent TICKETS_LINEASRowDeleted(Me, New TICKETS_LINEASRowChangeEvent(CType(e.Row, TICKETS_LINEASRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TICKETS_LINEASRowDeletingEvent) Is Nothing) Then
                RaiseEvent TICKETS_LINEASRowDeleting(Me, New TICKETS_LINEASRowChangeEvent(CType(e.Row, TICKETS_LINEASRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveTICKETS_LINEASRow(ByVal row As TICKETS_LINEASRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsConsultaTickets = New dsConsultaTickets()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TICKETS_LINEASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class ESTADISTICASDataTable
        Inherits Global.System.Data.TypedTableBase(Of ESTADISTICASRow)

        Private columnCodigoTienda As Global.System.Data.DataColumn

        Private columnCodigoCaja As Global.System.Data.DataColumn

        Private columnNumeroTicket As Global.System.Data.DataColumn

        Private columnFechaTicket As Global.System.Data.DataColumn

        Private columnHoraTicket As Global.System.Data.DataColumn

        Private columnCodigoCliente As Global.System.Data.DataColumn

        Private columnNombreCliente As Global.System.Data.DataColumn

        Private columnTipoCobro As Global.System.Data.DataColumn

        Private columnNumeroLineas As Global.System.Data.DataColumn

        Private columnImporteTotal As Global.System.Data.DataColumn

        Private columnNombreEmpleado As Global.System.Data.DataColumn

        Private columnCantidad As Global.System.Data.DataColumn

        Private columnPrecio As Global.System.Data.DataColumn

        Private columnDescuentoLinea As Global.System.Data.DataColumn

        Private columnImporte As Global.System.Data.DataColumn

        Private columnArticulo_Codigo As Global.System.Data.DataColumn

        Private columnArticulo_Descripcion As Global.System.Data.DataColumn

        Private columnArticulo_Proveedor As Global.System.Data.DataColumn

        Private columnArticulo_PrecioCoste As Global.System.Data.DataColumn

        Private columnFamilias_Codigo As Global.System.Data.DataColumn

        Private columnFamilias_Descripcion As Global.System.Data.DataColumn

        Private columnSubfamilias_Codigo As Global.System.Data.DataColumn

        Private columnSubfamilias_Descripcion As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "ESTADISTICAS"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoTiendaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoTienda
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoCajaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoCaja
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumeroTicketColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumeroTicket
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaTicketColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaTicket
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property HoraTicketColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHoraTicket
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CodigoClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoCliente
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NombreClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreCliente
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TipoCobroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoCobro
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumeroLineasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumeroLineas
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporteTotal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NombreEmpleadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreEmpleado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantidad
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DescuentoLineaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescuentoLinea
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporte
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Articulo_CodigoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArticulo_Codigo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Articulo_DescripcionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArticulo_Descripcion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Articulo_ProveedorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArticulo_Proveedor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Articulo_PrecioCosteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArticulo_PrecioCoste
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Familias_CodigoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFamilias_Codigo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Familias_DescripcionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFamilias_Descripcion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Subfamilias_CodigoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubfamilias_Codigo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Subfamilias_DescripcionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubfamilias_Descripcion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ESTADISTICASRow
            Get
                Return CType(Me.Rows(index), ESTADISTICASRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ESTADISTICASRowChanging As ESTADISTICASRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ESTADISTICASRowChanged As ESTADISTICASRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ESTADISTICASRowDeleting As ESTADISTICASRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ESTADISTICASRowDeleted As ESTADISTICASRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddESTADISTICASRow(ByVal row As ESTADISTICASRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddESTADISTICASRow( _
                    ByVal CodigoTienda As Integer, _
                    ByVal CodigoCaja As Integer, _
                    ByVal NumeroTicket As Integer, _
                    ByVal FechaTicket As Date, _
                    ByVal HoraTicket As Short, _
                    ByVal CodigoCliente As Integer, _
                    ByVal NombreCliente As String, _
                    ByVal TipoCobro As String, _
                    ByVal NumeroLineas As Integer, _
                    ByVal ImporteTotal As Decimal, _
                    ByVal NombreEmpleado As String, _
                    ByVal Cantidad As Integer, _
                    ByVal Precio As Decimal, _
                    ByVal DescuentoLinea As Decimal, _
                    ByVal Importe As Decimal, _
                    ByVal Articulo_Codigo As String, _
                    ByVal Articulo_Descripcion As String, _
                    ByVal Articulo_Proveedor As Integer, _
                    ByVal Articulo_PrecioCoste As Decimal, _
                    ByVal Familias_Codigo As String, _
                    ByVal Familias_Descripcion As String, _
                    ByVal Subfamilias_Codigo As String, _
                    ByVal Subfamilias_Descripcion As String) As ESTADISTICASRow
            Dim rowESTADISTICASRow As ESTADISTICASRow = CType(Me.NewRow, ESTADISTICASRow)
            Dim columnValuesArray() As Object = New Object() {CodigoTienda, CodigoCaja, NumeroTicket, FechaTicket, HoraTicket, CodigoCliente, NombreCliente, TipoCobro, NumeroLineas, ImporteTotal, NombreEmpleado, Cantidad, Precio, DescuentoLinea, Importe, Articulo_Codigo, Articulo_Descripcion, Articulo_Proveedor, Articulo_PrecioCoste, Familias_Codigo, Familias_Descripcion, Subfamilias_Codigo, Subfamilias_Descripcion}
            rowESTADISTICASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowESTADISTICASRow)
            Return rowESTADISTICASRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ESTADISTICASDataTable = CType(MyBase.Clone, ESTADISTICASDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ESTADISTICASDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnCodigoTienda = MyBase.Columns("CodigoTienda")
            Me.columnCodigoCaja = MyBase.Columns("CodigoCaja")
            Me.columnNumeroTicket = MyBase.Columns("NumeroTicket")
            Me.columnFechaTicket = MyBase.Columns("FechaTicket")
            Me.columnHoraTicket = MyBase.Columns("HoraTicket")
            Me.columnCodigoCliente = MyBase.Columns("CodigoCliente")
            Me.columnNombreCliente = MyBase.Columns("NombreCliente")
            Me.columnTipoCobro = MyBase.Columns("TipoCobro")
            Me.columnNumeroLineas = MyBase.Columns("NumeroLineas")
            Me.columnImporteTotal = MyBase.Columns("ImporteTotal")
            Me.columnNombreEmpleado = MyBase.Columns("NombreEmpleado")
            Me.columnCantidad = MyBase.Columns("Cantidad")
            Me.columnPrecio = MyBase.Columns("Precio")
            Me.columnDescuentoLinea = MyBase.Columns("DescuentoLinea")
            Me.columnImporte = MyBase.Columns("Importe")
            Me.columnArticulo_Codigo = MyBase.Columns("Articulo_Codigo")
            Me.columnArticulo_Descripcion = MyBase.Columns("Articulo_Descripcion")
            Me.columnArticulo_Proveedor = MyBase.Columns("Articulo_Proveedor")
            Me.columnArticulo_PrecioCoste = MyBase.Columns("Articulo_PrecioCoste")
            Me.columnFamilias_Codigo = MyBase.Columns("Familias_Codigo")
            Me.columnFamilias_Descripcion = MyBase.Columns("Familias_Descripcion")
            Me.columnSubfamilias_Codigo = MyBase.Columns("Subfamilias_Codigo")
            Me.columnSubfamilias_Descripcion = MyBase.Columns("Subfamilias_Descripcion")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnCodigoTienda = New Global.System.Data.DataColumn("CodigoTienda", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoTienda)
            Me.columnCodigoCaja = New Global.System.Data.DataColumn("CodigoCaja", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoCaja)
            Me.columnNumeroTicket = New Global.System.Data.DataColumn("NumeroTicket", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroTicket)
            Me.columnFechaTicket = New Global.System.Data.DataColumn("FechaTicket", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaTicket)
            Me.columnHoraTicket = New Global.System.Data.DataColumn("HoraTicket", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHoraTicket)
            Me.columnCodigoCliente = New Global.System.Data.DataColumn("CodigoCliente", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoCliente)
            Me.columnNombreCliente = New Global.System.Data.DataColumn("NombreCliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreCliente)
            Me.columnTipoCobro = New Global.System.Data.DataColumn("TipoCobro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoCobro)
            Me.columnNumeroLineas = New Global.System.Data.DataColumn("NumeroLineas", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroLineas)
            Me.columnImporteTotal = New Global.System.Data.DataColumn("ImporteTotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporteTotal)
            Me.columnNombreEmpleado = New Global.System.Data.DataColumn("NombreEmpleado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreEmpleado)
            Me.columnCantidad = New Global.System.Data.DataColumn("Cantidad", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidad)
            Me.columnPrecio = New Global.System.Data.DataColumn("Precio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecio)
            Me.columnDescuentoLinea = New Global.System.Data.DataColumn("DescuentoLinea", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescuentoLinea)
            Me.columnImporte = New Global.System.Data.DataColumn("Importe", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporte)
            Me.columnArticulo_Codigo = New Global.System.Data.DataColumn("Articulo_Codigo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArticulo_Codigo)
            Me.columnArticulo_Descripcion = New Global.System.Data.DataColumn("Articulo_Descripcion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArticulo_Descripcion)
            Me.columnArticulo_Proveedor = New Global.System.Data.DataColumn("Articulo_Proveedor", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArticulo_Proveedor)
            Me.columnArticulo_PrecioCoste = New Global.System.Data.DataColumn("Articulo_PrecioCoste", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArticulo_PrecioCoste)
            Me.columnFamilias_Codigo = New Global.System.Data.DataColumn("Familias_Codigo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFamilias_Codigo)
            Me.columnFamilias_Descripcion = New Global.System.Data.DataColumn("Familias_Descripcion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFamilias_Descripcion)
            Me.columnSubfamilias_Codigo = New Global.System.Data.DataColumn("Subfamilias_Codigo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubfamilias_Codigo)
            Me.columnSubfamilias_Descripcion = New Global.System.Data.DataColumn("Subfamilias_Descripcion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubfamilias_Descripcion)
            Me.columnTipoCobro.MaxLength = 1
            Me.columnFamilias_Codigo.MaxLength = 15
            Me.columnFamilias_Descripcion.MaxLength = 50
            Me.columnSubfamilias_Codigo.MaxLength = 15
            Me.columnSubfamilias_Descripcion.MaxLength = 50
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewESTADISTICASRow() As ESTADISTICASRow
            Return CType(Me.NewRow, ESTADISTICASRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ESTADISTICASRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ESTADISTICASRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ESTADISTICASRowChangedEvent) Is Nothing) Then
                RaiseEvent ESTADISTICASRowChanged(Me, New ESTADISTICASRowChangeEvent(CType(e.Row, ESTADISTICASRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ESTADISTICASRowChangingEvent) Is Nothing) Then
                RaiseEvent ESTADISTICASRowChanging(Me, New ESTADISTICASRowChangeEvent(CType(e.Row, ESTADISTICASRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ESTADISTICASRowDeletedEvent) Is Nothing) Then
                RaiseEvent ESTADISTICASRowDeleted(Me, New ESTADISTICASRowChangeEvent(CType(e.Row, ESTADISTICASRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ESTADISTICASRowDeletingEvent) Is Nothing) Then
                RaiseEvent ESTADISTICASRowDeleting(Me, New ESTADISTICASRowChangeEvent(CType(e.Row, ESTADISTICASRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveESTADISTICASRow(ByVal row As ESTADISTICASRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsConsultaTickets = New dsConsultaTickets()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ESTADISTICASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class TOTALESDataTable
        Inherits Global.System.Data.TypedTableBase(Of TOTALESRow)

        Private columnDescripcion As Global.System.Data.DataColumn

        Private columnImporte As Global.System.Data.DataColumn

        Private columnBaseImponible As Global.System.Data.DataColumn

        Private columnPorcentajeIVA As Global.System.Data.DataColumn

        Private columnTotalIVA As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "TOTALES"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DescripcionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImporteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporte
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BaseImponibleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBaseImponible
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PorcentajeIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcentajeIVA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalIVA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As TOTALESRow
            Get
                Return CType(Me.Rows(index), TOTALESRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TOTALESRowChanging As TOTALESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TOTALESRowChanged As TOTALESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TOTALESRowDeleting As TOTALESRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TOTALESRowDeleted As TOTALESRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddTOTALESRow(ByVal row As TOTALESRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddTOTALESRow(ByVal Descripcion As String, ByVal Importe As Decimal, ByVal BaseImponible As Decimal, ByVal PorcentajeIVA As Decimal, ByVal TotalIVA As Decimal) As TOTALESRow
            Dim rowTOTALESRow As TOTALESRow = CType(Me.NewRow, TOTALESRow)
            Dim columnValuesArray() As Object = New Object() {Descripcion, Importe, BaseImponible, PorcentajeIVA, TotalIVA}
            rowTOTALESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTOTALESRow)
            Return rowTOTALESRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TOTALESDataTable = CType(MyBase.Clone, TOTALESDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TOTALESDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnDescripcion = MyBase.Columns("Descripcion")
            Me.columnImporte = MyBase.Columns("Importe")
            Me.columnBaseImponible = MyBase.Columns("BaseImponible")
            Me.columnPorcentajeIVA = MyBase.Columns("PorcentajeIVA")
            Me.columnTotalIVA = MyBase.Columns("TotalIVA")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnDescripcion = New Global.System.Data.DataColumn("Descripcion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcion)
            Me.columnImporte = New Global.System.Data.DataColumn("Importe", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporte)
            Me.columnBaseImponible = New Global.System.Data.DataColumn("BaseImponible", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBaseImponible)
            Me.columnPorcentajeIVA = New Global.System.Data.DataColumn("PorcentajeIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcentajeIVA)
            Me.columnTotalIVA = New Global.System.Data.DataColumn("TotalIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalIVA)
            Me.columnImporte.DefaultValue = CType(0D, Decimal)
            Me.columnBaseImponible.DefaultValue = CType(0D, Decimal)
            Me.columnPorcentajeIVA.DefaultValue = CType(0D, Decimal)
            Me.columnTotalIVA.DefaultValue = CType(0D, Decimal)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewTOTALESRow() As TOTALESRow
            Return CType(Me.NewRow, TOTALESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TOTALESRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TOTALESRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TOTALESRowChangedEvent) Is Nothing) Then
                RaiseEvent TOTALESRowChanged(Me, New TOTALESRowChangeEvent(CType(e.Row, TOTALESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TOTALESRowChangingEvent) Is Nothing) Then
                RaiseEvent TOTALESRowChanging(Me, New TOTALESRowChangeEvent(CType(e.Row, TOTALESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TOTALESRowDeletedEvent) Is Nothing) Then
                RaiseEvent TOTALESRowDeleted(Me, New TOTALESRowChangeEvent(CType(e.Row, TOTALESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TOTALESRowDeletingEvent) Is Nothing) Then
                RaiseEvent TOTALESRowDeleting(Me, New TOTALESRowChangeEvent(CType(e.Row, TOTALESRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveTOTALESRow(ByVal row As TOTALESRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsConsultaTickets = New dsConsultaTickets()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TOTALESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ARTICULOS_TICKETSRow
        Inherits Global.System.Data.DataRow

        Private tableARTICULOS_TICKETS As ARTICULOS_TICKETSDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableARTICULOS_TICKETS = CType(Me.Table, ARTICULOS_TICKETSDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoArticulo() As String
            Get
                Try
                    Return CType(Me(Me.tableARTICULOS_TICKETS.CodigoArticuloColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoArticulo' de la tabla 'ARTICULOS_TICKETS' es DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableARTICULOS_TICKETS.CodigoArticuloColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumeroTicket() As Integer
            Get
                Try
                    Return CType(Me(Me.tableARTICULOS_TICKETS.NumeroTicketColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumeroTicket' de la tabla 'ARTICULOS_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableARTICULOS_TICKETS.NumeroTicketColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaTicket() As Date
            Get
                Try
                    Return CType(Me(Me.tableARTICULOS_TICKETS.FechaTicketColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FechaTicket' de la tabla 'ARTICULOS_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableARTICULOS_TICKETS.FechaTicketColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NombreFiscal() As String
            Get
                Try
                    Return CType(Me(Me.tableARTICULOS_TICKETS.NombreFiscalColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreFiscal' de la tabla 'ARTICULOS_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableARTICULOS_TICKETS.NombreFiscalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cantidad() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableARTICULOS_TICKETS.CantidadColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Cantidad' de la tabla 'ARTICULOS_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableARTICULOS_TICKETS.CantidadColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Precio() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableARTICULOS_TICKETS.PrecioColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Precio' de la tabla 'ARTICULOS_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableARTICULOS_TICKETS.PrecioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Importe() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableARTICULOS_TICKETS.ImporteColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Importe' de la tabla 'ARTICULOS_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableARTICULOS_TICKETS.ImporteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ARTICULOSRow() As ARTICULOSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("ARTICULOS_ARTICULOS_TICKETS")), ARTICULOSRow)
            End Get
            Set(value As ARTICULOSRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("ARTICULOS_ARTICULOS_TICKETS"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCodigoArticuloNull() As Boolean
            Return Me.IsNull(Me.tableARTICULOS_TICKETS.CodigoArticuloColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCodigoArticuloNull()
            Me(Me.tableARTICULOS_TICKETS.CodigoArticuloColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumeroTicketNull() As Boolean
            Return Me.IsNull(Me.tableARTICULOS_TICKETS.NumeroTicketColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumeroTicketNull()
            Me(Me.tableARTICULOS_TICKETS.NumeroTicketColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFechaTicketNull() As Boolean
            Return Me.IsNull(Me.tableARTICULOS_TICKETS.FechaTicketColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFechaTicketNull()
            Me(Me.tableARTICULOS_TICKETS.FechaTicketColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNombreFiscalNull() As Boolean
            Return Me.IsNull(Me.tableARTICULOS_TICKETS.NombreFiscalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNombreFiscalNull()
            Me(Me.tableARTICULOS_TICKETS.NombreFiscalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCantidadNull() As Boolean
            Return Me.IsNull(Me.tableARTICULOS_TICKETS.CantidadColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCantidadNull()
            Me(Me.tableARTICULOS_TICKETS.CantidadColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioNull() As Boolean
            Return Me.IsNull(Me.tableARTICULOS_TICKETS.PrecioColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioNull()
            Me(Me.tableARTICULOS_TICKETS.PrecioColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteNull() As Boolean
            Return Me.IsNull(Me.tableARTICULOS_TICKETS.ImporteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteNull()
            Me(Me.tableARTICULOS_TICKETS.ImporteColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ARTICULOSRow
        Inherits Global.System.Data.DataRow

        Private tableARTICULOS As ARTICULOSDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableARTICULOS = CType(Me.Table, ARTICULOSDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoArticulo() As String
            Get
                Try
                    Return CType(Me(Me.tableARTICULOS.CodigoArticuloColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoArticulo' de la tabla 'ARTICULOS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableARTICULOS.CodigoArticuloColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DescripcionArticulo() As String
            Get
                Try
                    Return CType(Me(Me.tableARTICULOS.DescripcionArticuloColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescripcionArticulo' de la tabla 'ARTICULOS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableARTICULOS.DescripcionArticuloColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cantidad() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableARTICULOS.CantidadColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Cantidad' de la tabla 'ARTICULOS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableARTICULOS.CantidadColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Importe() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableARTICULOS.ImporteColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Importe' de la tabla 'ARTICULOS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableARTICULOS.ImporteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DescripcionFamilia() As String
            Get
                Try
                    Return CType(Me(Me.tableARTICULOS.DescripcionFamiliaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescripcionFamilia' de la tabla 'ARTICULOS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableARTICULOS.DescripcionFamiliaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DescripcionSubFamilia() As String
            Get
                Try
                    Return CType(Me(Me.tableARTICULOS.DescripcionSubFamiliaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescripcionSubFamilia' de la tabla 'ARTICULOS' es DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableARTICULOS.DescripcionSubFamiliaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImporteSinIva() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableARTICULOS.ImporteSinIvaColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImporteSinIva' de la tabla 'ARTICULOS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableARTICULOS.ImporteSinIvaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioCoste() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableARTICULOS.PrecioCosteColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioCoste' de la tabla 'ARTICULOS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableARTICULOS.PrecioCosteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TotalCoste() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableARTICULOS.TotalCosteColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TotalCoste' de la tabla 'ARTICULOS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableARTICULOS.TotalCosteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Margen() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableARTICULOS.MargenColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Margen' de la tabla 'ARTICULOS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableARTICULOS.MargenColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCodigoArticuloNull() As Boolean
            Return Me.IsNull(Me.tableARTICULOS.CodigoArticuloColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCodigoArticuloNull()
            Me(Me.tableARTICULOS.CodigoArticuloColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDescripcionArticuloNull() As Boolean
            Return Me.IsNull(Me.tableARTICULOS.DescripcionArticuloColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDescripcionArticuloNull()
            Me(Me.tableARTICULOS.DescripcionArticuloColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCantidadNull() As Boolean
            Return Me.IsNull(Me.tableARTICULOS.CantidadColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCantidadNull()
            Me(Me.tableARTICULOS.CantidadColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteNull() As Boolean
            Return Me.IsNull(Me.tableARTICULOS.ImporteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteNull()
            Me(Me.tableARTICULOS.ImporteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDescripcionFamiliaNull() As Boolean
            Return Me.IsNull(Me.tableARTICULOS.DescripcionFamiliaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDescripcionFamiliaNull()
            Me(Me.tableARTICULOS.DescripcionFamiliaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDescripcionSubFamiliaNull() As Boolean
            Return Me.IsNull(Me.tableARTICULOS.DescripcionSubFamiliaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDescripcionSubFamiliaNull()
            Me(Me.tableARTICULOS.DescripcionSubFamiliaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteSinIvaNull() As Boolean
            Return Me.IsNull(Me.tableARTICULOS.ImporteSinIvaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteSinIvaNull()
            Me(Me.tableARTICULOS.ImporteSinIvaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioCosteNull() As Boolean
            Return Me.IsNull(Me.tableARTICULOS.PrecioCosteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioCosteNull()
            Me(Me.tableARTICULOS.PrecioCosteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTotalCosteNull() As Boolean
            Return Me.IsNull(Me.tableARTICULOS.TotalCosteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTotalCosteNull()
            Me(Me.tableARTICULOS.TotalCosteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMargenNull() As Boolean
            Return Me.IsNull(Me.tableARTICULOS.MargenColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMargenNull()
            Me(Me.tableARTICULOS.MargenColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetARTICULOS_TICKETSRows() As ARTICULOS_TICKETSRow()
            If (Me.Table.ChildRelations("ARTICULOS_ARTICULOS_TICKETS") Is Nothing) Then
                Return New ARTICULOS_TICKETSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("ARTICULOS_ARTICULOS_TICKETS")), ARTICULOS_TICKETSRow())
            End If
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TICKETSRow
        Inherits Global.System.Data.DataRow

        Private tableTICKETS As TICKETSDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTICKETS = CType(Me.Table, TICKETSDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tableTICKETS.IdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableTICKETS.IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoTienda() As Integer
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.CodigoTiendaColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoTienda' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableTICKETS.CodigoTiendaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoCaja() As Integer
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.CodigoCajaColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoCaja' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableTICKETS.CodigoCajaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumeroTicket() As Integer
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.NumeroTicketColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumeroTicket' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableTICKETS.NumeroTicketColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaTicket() As Date
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.FechaTicketColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FechaTicket' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableTICKETS.FechaTicketColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property HoraTicket() As String
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.HoraTicketColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'HoraTicket' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTICKETS.HoraTicketColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TipoCobro() As String
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.TipoCobroColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TipoCobro' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTICKETS.TipoCobroColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoCliente() As Integer
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.CodigoClienteColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoCliente' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableTICKETS.CodigoClienteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImpresoTicket() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.ImpresoTicketColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImpresoTicket' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableTICKETS.ImpresoTicketColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImporteEfectivo() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.ImporteEfectivoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImporteEfectivo' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.ImporteEfectivoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImporteTalonCheque() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.ImporteTalonChequeColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImporteTalonCheque' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.ImporteTalonChequeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImporteValesProveedor() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.ImporteValesProveedorColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImporteValesProveedor' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.ImporteValesProveedorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImporteValesCobrados() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.ImporteValesCobradosColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImporteValesCobrados' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.ImporteValesCobradosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImporteTarjeta() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.ImporteTarjetaColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImporteTarjeta' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.ImporteTarjetaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImporteEnvases() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.ImporteEnvasesColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImporteEnvases' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.ImporteEnvasesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImportePendienteCobro() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.ImportePendienteCobroColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImportePendienteCobro' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.ImportePendienteCobroColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImporteValesEmitidos() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.ImporteValesEmitidosColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImporteValesEmitidos' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.ImporteValesEmitidosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImporteTotalCambios() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.ImporteTotalCambiosColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImporteTotalCambios' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.ImporteTotalCambiosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImporteCambios() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.ImporteCambiosColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImporteCambios' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.ImporteCambiosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcentajeDescuento() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.PorcentajeDescuentoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PorcentajeDescuento' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.PorcentajeDescuentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImporteDescuento() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.ImporteDescuentoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImporteDescuento' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.ImporteDescuentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumeroLineas() As Integer
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.NumeroLineasColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumeroLineas' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableTICKETS.NumeroLineasColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImporteTotal() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.ImporteTotalColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImporteTotal' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.ImporteTotalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EnEspera() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.EnEsperaColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EnEspera' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableTICKETS.EnEsperaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NombreFiscal() As String
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.NombreFiscalColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreFiscal' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTICKETS.NombreFiscalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RepartoDomicilio() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.RepartoDomicilioColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RepartoDomicilio' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableTICKETS.RepartoDomicilioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DireccionReparto() As String
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.DireccionRepartoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DireccionReparto' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTICKETS.DireccionRepartoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImporteSorteo() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.ImporteSorteoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImporteSorteo' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.ImporteSorteoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumeroAlbaran() As Integer
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.NumeroAlbaranColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumeroAlbaran' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableTICKETS.NumeroAlbaranColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumeroDocumento() As String
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.NumeroDocumentoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumeroDocumento' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTICKETS.NumeroDocumentoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoEmpleado() As String
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.CodigoEmpleadoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoEmpleado' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTICKETS.CodigoEmpleadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TipoFactura() As Integer
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.TipoFacturaColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TipoFactura' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableTICKETS.TipoFacturaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FidelizacionImporte() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.FidelizacionImporteColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FidelizacionImporte' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.FidelizacionImporteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FidelizacionVales() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.FidelizacionValesColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FidelizacionVales' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.FidelizacionValesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FidelizacionPuntos() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.FidelizacionPuntosColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FidelizacionPuntos' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.FidelizacionPuntosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FidelizacionLoteria() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.FidelizacionLoteriaColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FidelizacionLoteria' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.FidelizacionLoteriaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ValesCanjeados() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.ValesCanjeadosColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ValesCanjeados' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.ValesCanjeadosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TotIva() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.TotIvaColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TotIva' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.TotIvaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Base() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS.BaseColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Base' de la tabla 'TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS.BaseColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCodigoTiendaNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.CodigoTiendaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCodigoTiendaNull()
            Me(Me.tableTICKETS.CodigoTiendaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCodigoCajaNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.CodigoCajaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCodigoCajaNull()
            Me(Me.tableTICKETS.CodigoCajaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumeroTicketNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.NumeroTicketColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumeroTicketNull()
            Me(Me.tableTICKETS.NumeroTicketColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFechaTicketNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.FechaTicketColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFechaTicketNull()
            Me(Me.tableTICKETS.FechaTicketColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsHoraTicketNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.HoraTicketColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetHoraTicketNull()
            Me(Me.tableTICKETS.HoraTicketColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTipoCobroNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.TipoCobroColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTipoCobroNull()
            Me(Me.tableTICKETS.TipoCobroColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCodigoClienteNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.CodigoClienteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCodigoClienteNull()
            Me(Me.tableTICKETS.CodigoClienteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImpresoTicketNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.ImpresoTicketColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImpresoTicketNull()
            Me(Me.tableTICKETS.ImpresoTicketColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteEfectivoNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.ImporteEfectivoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteEfectivoNull()
            Me(Me.tableTICKETS.ImporteEfectivoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteTalonChequeNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.ImporteTalonChequeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteTalonChequeNull()
            Me(Me.tableTICKETS.ImporteTalonChequeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteValesProveedorNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.ImporteValesProveedorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteValesProveedorNull()
            Me(Me.tableTICKETS.ImporteValesProveedorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteValesCobradosNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.ImporteValesCobradosColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteValesCobradosNull()
            Me(Me.tableTICKETS.ImporteValesCobradosColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteTarjetaNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.ImporteTarjetaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteTarjetaNull()
            Me(Me.tableTICKETS.ImporteTarjetaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteEnvasesNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.ImporteEnvasesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteEnvasesNull()
            Me(Me.tableTICKETS.ImporteEnvasesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImportePendienteCobroNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.ImportePendienteCobroColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImportePendienteCobroNull()
            Me(Me.tableTICKETS.ImportePendienteCobroColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteValesEmitidosNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.ImporteValesEmitidosColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteValesEmitidosNull()
            Me(Me.tableTICKETS.ImporteValesEmitidosColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteTotalCambiosNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.ImporteTotalCambiosColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteTotalCambiosNull()
            Me(Me.tableTICKETS.ImporteTotalCambiosColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteCambiosNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.ImporteCambiosColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteCambiosNull()
            Me(Me.tableTICKETS.ImporteCambiosColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPorcentajeDescuentoNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.PorcentajeDescuentoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPorcentajeDescuentoNull()
            Me(Me.tableTICKETS.PorcentajeDescuentoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteDescuentoNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.ImporteDescuentoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteDescuentoNull()
            Me(Me.tableTICKETS.ImporteDescuentoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumeroLineasNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.NumeroLineasColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumeroLineasNull()
            Me(Me.tableTICKETS.NumeroLineasColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteTotalNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.ImporteTotalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteTotalNull()
            Me(Me.tableTICKETS.ImporteTotalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEnEsperaNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.EnEsperaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEnEsperaNull()
            Me(Me.tableTICKETS.EnEsperaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNombreFiscalNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.NombreFiscalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNombreFiscalNull()
            Me(Me.tableTICKETS.NombreFiscalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRepartoDomicilioNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.RepartoDomicilioColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRepartoDomicilioNull()
            Me(Me.tableTICKETS.RepartoDomicilioColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDireccionRepartoNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.DireccionRepartoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDireccionRepartoNull()
            Me(Me.tableTICKETS.DireccionRepartoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteSorteoNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.ImporteSorteoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteSorteoNull()
            Me(Me.tableTICKETS.ImporteSorteoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumeroAlbaranNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.NumeroAlbaranColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumeroAlbaranNull()
            Me(Me.tableTICKETS.NumeroAlbaranColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumeroDocumentoNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.NumeroDocumentoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumeroDocumentoNull()
            Me(Me.tableTICKETS.NumeroDocumentoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCodigoEmpleadoNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.CodigoEmpleadoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCodigoEmpleadoNull()
            Me(Me.tableTICKETS.CodigoEmpleadoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTipoFacturaNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.TipoFacturaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTipoFacturaNull()
            Me(Me.tableTICKETS.TipoFacturaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFidelizacionImporteNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.FidelizacionImporteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFidelizacionImporteNull()
            Me(Me.tableTICKETS.FidelizacionImporteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFidelizacionValesNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.FidelizacionValesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFidelizacionValesNull()
            Me(Me.tableTICKETS.FidelizacionValesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFidelizacionPuntosNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.FidelizacionPuntosColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFidelizacionPuntosNull()
            Me(Me.tableTICKETS.FidelizacionPuntosColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFidelizacionLoteriaNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.FidelizacionLoteriaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFidelizacionLoteriaNull()
            Me(Me.tableTICKETS.FidelizacionLoteriaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsValesCanjeadosNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.ValesCanjeadosColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetValesCanjeadosNull()
            Me(Me.tableTICKETS.ValesCanjeadosColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTotIvaNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.TotIvaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTotIvaNull()
            Me(Me.tableTICKETS.TotIvaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBaseNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS.BaseColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBaseNull()
            Me(Me.tableTICKETS.BaseColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetTICKETS_LINEASRows() As TICKETS_LINEASRow()
            If (Me.Table.ChildRelations("TICKETS_TICKETS_LINEAS") Is Nothing) Then
                Return New TICKETS_LINEASRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("TICKETS_TICKETS_LINEAS")), TICKETS_LINEASRow())
            End If
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TICKETS_LINEASRow
        Inherits Global.System.Data.DataRow

        Private tableTICKETS_LINEAS As TICKETS_LINEASDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTICKETS_LINEAS = CType(Me.Table, TICKETS_LINEASDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tableTICKETS_LINEAS.IdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableTICKETS_LINEAS.IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Ticket_Id() As Integer
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.Ticket_IdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Ticket_Id' de la tabla 'TICKETS_LINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableTICKETS_LINEAS.Ticket_IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoArticulo() As String
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.CodigoArticuloColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoArticulo' de la tabla 'TICKETS_LINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTICKETS_LINEAS.CodigoArticuloColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Promocion() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.PromocionColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Promocion' de la tabla 'TICKETS_LINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableTICKETS_LINEAS.PromocionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioManual() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.PrecioManualColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioManual' de la tabla 'TICKETS_LINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableTICKETS_LINEAS.PrecioManualColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoEmleado() As Integer
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.CodigoEmleadoColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoEmleado' de la tabla 'TICKETS_LINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableTICKETS_LINEAS.CodigoEmleadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DescripcionArticulo() As String
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.DescripcionArticuloColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescripcionArticulo' de la tabla 'TICKETS_LINEAS' es DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTICKETS_LINEAS.DescripcionArticuloColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cantidad() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.CantidadColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Cantidad' de la tabla 'TICKETS_LINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS_LINEAS.CantidadColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Precio() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.PrecioColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Precio' de la tabla 'TICKETS_LINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS_LINEAS.PrecioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DescuentoLinea() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.DescuentoLineaColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescuentoLinea' de la tabla 'TICKETS_LINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS_LINEAS.DescuentoLineaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Importe() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.ImporteColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Importe' de la tabla 'TICKETS_LINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS_LINEAS.ImporteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcentajeIVA() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.PorcentajeIVAColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PorcentajeIVA' de la tabla 'TICKETS_LINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS_LINEAS.PorcentajeIVAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumeroTalla() As Integer
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.NumeroTallaColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumeroTalla' de la tabla 'TICKETS_LINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableTICKETS_LINEAS.NumeroTallaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoColor() As Integer
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.CodigoColorColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoColor' de la tabla 'TICKETS_LINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableTICKETS_LINEAS.CodigoColorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoArticuloRegalo() As String
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.CodigoArticuloRegaloColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoArticuloRegalo' de la tabla 'TICKETS_LINEAS' es DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTICKETS_LINEAS.CodigoArticuloRegaloColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UnidadesRegalo() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.UnidadesRegaloColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UnidadesRegalo' de la tabla 'TICKETS_LINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS_LINEAS.UnidadesRegaloColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioRegalo() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.PrecioRegaloColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioRegalo' de la tabla 'TICKETS_LINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS_LINEAS.PrecioRegaloColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoColorPromocion() As Integer
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.CodigoColorPromocionColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoColorPromocion' de la tabla 'TICKETS_LINEAS' es DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableTICKETS_LINEAS.CodigoColorPromocionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumeroTallaPromocion() As Integer
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.NumeroTallaPromocionColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumeroTallaPromocion' de la tabla 'TICKETS_LINEAS' es DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableTICKETS_LINEAS.NumeroTallaPromocionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FraccionSinCargo() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.FraccionSinCargoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FraccionSinCargo' de la tabla 'TICKETS_LINEAS' es DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS_LINEAS.FraccionSinCargoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UnidadesSinCargo() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.UnidadesSinCargoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UnidadesSinCargo' de la tabla 'TICKETS_LINEAS' es DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTICKETS_LINEAS.UnidadesSinCargoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LineaTratada() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableTICKETS_LINEAS.LineaTratadaColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'LineaTratada' de la tabla 'TICKETS_LINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableTICKETS_LINEAS.LineaTratadaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TICKETSRow() As TICKETSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("TICKETS_TICKETS_LINEAS")), TICKETSRow)
            End Get
            Set(value As TICKETSRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("TICKETS_TICKETS_LINEAS"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTicket_IdNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.Ticket_IdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTicket_IdNull()
            Me(Me.tableTICKETS_LINEAS.Ticket_IdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCodigoArticuloNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.CodigoArticuloColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCodigoArticuloNull()
            Me(Me.tableTICKETS_LINEAS.CodigoArticuloColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPromocionNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.PromocionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPromocionNull()
            Me(Me.tableTICKETS_LINEAS.PromocionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioManualNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.PrecioManualColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioManualNull()
            Me(Me.tableTICKETS_LINEAS.PrecioManualColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCodigoEmleadoNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.CodigoEmleadoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCodigoEmleadoNull()
            Me(Me.tableTICKETS_LINEAS.CodigoEmleadoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDescripcionArticuloNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.DescripcionArticuloColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDescripcionArticuloNull()
            Me(Me.tableTICKETS_LINEAS.DescripcionArticuloColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCantidadNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.CantidadColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCantidadNull()
            Me(Me.tableTICKETS_LINEAS.CantidadColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.PrecioColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioNull()
            Me(Me.tableTICKETS_LINEAS.PrecioColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDescuentoLineaNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.DescuentoLineaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDescuentoLineaNull()
            Me(Me.tableTICKETS_LINEAS.DescuentoLineaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.ImporteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteNull()
            Me(Me.tableTICKETS_LINEAS.ImporteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPorcentajeIVANull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.PorcentajeIVAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPorcentajeIVANull()
            Me(Me.tableTICKETS_LINEAS.PorcentajeIVAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumeroTallaNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.NumeroTallaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumeroTallaNull()
            Me(Me.tableTICKETS_LINEAS.NumeroTallaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCodigoColorNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.CodigoColorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCodigoColorNull()
            Me(Me.tableTICKETS_LINEAS.CodigoColorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCodigoArticuloRegaloNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.CodigoArticuloRegaloColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCodigoArticuloRegaloNull()
            Me(Me.tableTICKETS_LINEAS.CodigoArticuloRegaloColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUnidadesRegaloNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.UnidadesRegaloColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUnidadesRegaloNull()
            Me(Me.tableTICKETS_LINEAS.UnidadesRegaloColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioRegaloNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.PrecioRegaloColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioRegaloNull()
            Me(Me.tableTICKETS_LINEAS.PrecioRegaloColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCodigoColorPromocionNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.CodigoColorPromocionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCodigoColorPromocionNull()
            Me(Me.tableTICKETS_LINEAS.CodigoColorPromocionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumeroTallaPromocionNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.NumeroTallaPromocionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumeroTallaPromocionNull()
            Me(Me.tableTICKETS_LINEAS.NumeroTallaPromocionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFraccionSinCargoNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.FraccionSinCargoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFraccionSinCargoNull()
            Me(Me.tableTICKETS_LINEAS.FraccionSinCargoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUnidadesSinCargoNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.UnidadesSinCargoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUnidadesSinCargoNull()
            Me(Me.tableTICKETS_LINEAS.UnidadesSinCargoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLineaTratadaNull() As Boolean
            Return Me.IsNull(Me.tableTICKETS_LINEAS.LineaTratadaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLineaTratadaNull()
            Me(Me.tableTICKETS_LINEAS.LineaTratadaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ESTADISTICASRow
        Inherits Global.System.Data.DataRow

        Private tableESTADISTICAS As ESTADISTICASDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableESTADISTICAS = CType(Me.Table, ESTADISTICASDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoTienda() As Integer
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.CodigoTiendaColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoTienda' de la tabla 'ESTADISTICAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableESTADISTICAS.CodigoTiendaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoCaja() As Integer
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.CodigoCajaColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoCaja' de la tabla 'ESTADISTICAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableESTADISTICAS.CodigoCajaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumeroTicket() As Integer
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.NumeroTicketColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumeroTicket' de la tabla 'ESTADISTICAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableESTADISTICAS.NumeroTicketColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaTicket() As Date
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.FechaTicketColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FechaTicket' de la tabla 'ESTADISTICAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableESTADISTICAS.FechaTicketColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property HoraTicket() As Short
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.HoraTicketColumn), Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'HoraTicket' de la tabla 'ESTADISTICAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Short)
                Me(Me.tableESTADISTICAS.HoraTicketColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CodigoCliente() As Integer
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.CodigoClienteColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoCliente' de la tabla 'ESTADISTICAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableESTADISTICAS.CodigoClienteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NombreCliente() As String
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.NombreClienteColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreCliente' de la tabla 'ESTADISTICAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableESTADISTICAS.NombreClienteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TipoCobro() As String
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.TipoCobroColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TipoCobro' de la tabla 'ESTADISTICAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableESTADISTICAS.TipoCobroColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumeroLineas() As Integer
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.NumeroLineasColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NumeroLineas' de la tabla 'ESTADISTICAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableESTADISTICAS.NumeroLineasColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImporteTotal() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.ImporteTotalColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImporteTotal' de la tabla 'ESTADISTICAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableESTADISTICAS.ImporteTotalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NombreEmpleado() As String
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.NombreEmpleadoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreEmpleado' de la tabla 'ESTADISTICAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableESTADISTICAS.NombreEmpleadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cantidad() As Integer
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.CantidadColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Cantidad' de la tabla 'ESTADISTICAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableESTADISTICAS.CantidadColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Precio() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.PrecioColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Precio' de la tabla 'ESTADISTICAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableESTADISTICAS.PrecioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DescuentoLinea() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.DescuentoLineaColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescuentoLinea' de la tabla 'ESTADISTICAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableESTADISTICAS.DescuentoLineaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Importe() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.ImporteColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Importe' de la tabla 'ESTADISTICAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableESTADISTICAS.ImporteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Articulo_Codigo() As String
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.Articulo_CodigoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Articulo_Codigo' de la tabla 'ESTADISTICAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableESTADISTICAS.Articulo_CodigoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Articulo_Descripcion() As String
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.Articulo_DescripcionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Articulo_Descripcion' de la tabla 'ESTADISTICAS' es DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableESTADISTICAS.Articulo_DescripcionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Articulo_Proveedor() As Integer
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.Articulo_ProveedorColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Articulo_Proveedor' de la tabla 'ESTADISTICAS' es DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableESTADISTICAS.Articulo_ProveedorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Articulo_PrecioCoste() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.Articulo_PrecioCosteColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Articulo_PrecioCoste' de la tabla 'ESTADISTICAS' es DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableESTADISTICAS.Articulo_PrecioCosteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Familias_Codigo() As String
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.Familias_CodigoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Familias_Codigo' de la tabla 'ESTADISTICAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableESTADISTICAS.Familias_CodigoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Familias_Descripcion() As String
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.Familias_DescripcionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Familias_Descripcion' de la tabla 'ESTADISTICAS' es DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableESTADISTICAS.Familias_DescripcionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Subfamilias_Codigo() As String
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.Subfamilias_CodigoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Subfamilias_Codigo' de la tabla 'ESTADISTICAS' es DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableESTADISTICAS.Subfamilias_CodigoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Subfamilias_Descripcion() As String
            Get
                Try
                    Return CType(Me(Me.tableESTADISTICAS.Subfamilias_DescripcionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Subfamilias_Descripcion' de la tabla 'ESTADISTICAS' es DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableESTADISTICAS.Subfamilias_DescripcionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCodigoTiendaNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.CodigoTiendaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCodigoTiendaNull()
            Me(Me.tableESTADISTICAS.CodigoTiendaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCodigoCajaNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.CodigoCajaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCodigoCajaNull()
            Me(Me.tableESTADISTICAS.CodigoCajaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumeroTicketNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.NumeroTicketColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumeroTicketNull()
            Me(Me.tableESTADISTICAS.NumeroTicketColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFechaTicketNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.FechaTicketColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFechaTicketNull()
            Me(Me.tableESTADISTICAS.FechaTicketColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsHoraTicketNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.HoraTicketColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetHoraTicketNull()
            Me(Me.tableESTADISTICAS.HoraTicketColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCodigoClienteNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.CodigoClienteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCodigoClienteNull()
            Me(Me.tableESTADISTICAS.CodigoClienteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNombreClienteNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.NombreClienteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNombreClienteNull()
            Me(Me.tableESTADISTICAS.NombreClienteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTipoCobroNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.TipoCobroColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTipoCobroNull()
            Me(Me.tableESTADISTICAS.TipoCobroColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumeroLineasNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.NumeroLineasColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumeroLineasNull()
            Me(Me.tableESTADISTICAS.NumeroLineasColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteTotalNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.ImporteTotalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteTotalNull()
            Me(Me.tableESTADISTICAS.ImporteTotalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNombreEmpleadoNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.NombreEmpleadoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNombreEmpleadoNull()
            Me(Me.tableESTADISTICAS.NombreEmpleadoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCantidadNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.CantidadColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCantidadNull()
            Me(Me.tableESTADISTICAS.CantidadColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.PrecioColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioNull()
            Me(Me.tableESTADISTICAS.PrecioColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDescuentoLineaNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.DescuentoLineaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDescuentoLineaNull()
            Me(Me.tableESTADISTICAS.DescuentoLineaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.ImporteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteNull()
            Me(Me.tableESTADISTICAS.ImporteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsArticulo_CodigoNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.Articulo_CodigoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetArticulo_CodigoNull()
            Me(Me.tableESTADISTICAS.Articulo_CodigoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsArticulo_DescripcionNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.Articulo_DescripcionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetArticulo_DescripcionNull()
            Me(Me.tableESTADISTICAS.Articulo_DescripcionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsArticulo_ProveedorNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.Articulo_ProveedorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetArticulo_ProveedorNull()
            Me(Me.tableESTADISTICAS.Articulo_ProveedorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsArticulo_PrecioCosteNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.Articulo_PrecioCosteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetArticulo_PrecioCosteNull()
            Me(Me.tableESTADISTICAS.Articulo_PrecioCosteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFamilias_CodigoNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.Familias_CodigoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFamilias_CodigoNull()
            Me(Me.tableESTADISTICAS.Familias_CodigoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFamilias_DescripcionNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.Familias_DescripcionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFamilias_DescripcionNull()
            Me(Me.tableESTADISTICAS.Familias_DescripcionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSubfamilias_CodigoNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.Subfamilias_CodigoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSubfamilias_CodigoNull()
            Me(Me.tableESTADISTICAS.Subfamilias_CodigoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSubfamilias_DescripcionNull() As Boolean
            Return Me.IsNull(Me.tableESTADISTICAS.Subfamilias_DescripcionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSubfamilias_DescripcionNull()
            Me(Me.tableESTADISTICAS.Subfamilias_DescripcionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TOTALESRow
        Inherits Global.System.Data.DataRow

        Private tableTOTALES As TOTALESDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTOTALES = CType(Me.Table, TOTALESDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Descripcion() As String
            Get
                Try
                    Return CType(Me(Me.tableTOTALES.DescripcionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Descripcion' de la tabla 'TOTALES' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTOTALES.DescripcionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Importe() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTOTALES.ImporteColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Importe' de la tabla 'TOTALES' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTOTALES.ImporteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BaseImponible() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTOTALES.BaseImponibleColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BaseImponible' de la tabla 'TOTALES' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTOTALES.BaseImponibleColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PorcentajeIVA() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTOTALES.PorcentajeIVAColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PorcentajeIVA' de la tabla 'TOTALES' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTOTALES.PorcentajeIVAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TotalIVA() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTOTALES.TotalIVAColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TotalIVA' de la tabla 'TOTALES' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTOTALES.TotalIVAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDescripcionNull() As Boolean
            Return Me.IsNull(Me.tableTOTALES.DescripcionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDescripcionNull()
            Me(Me.tableTOTALES.DescripcionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImporteNull() As Boolean
            Return Me.IsNull(Me.tableTOTALES.ImporteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImporteNull()
            Me(Me.tableTOTALES.ImporteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBaseImponibleNull() As Boolean
            Return Me.IsNull(Me.tableTOTALES.BaseImponibleColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBaseImponibleNull()
            Me(Me.tableTOTALES.BaseImponibleColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPorcentajeIVANull() As Boolean
            Return Me.IsNull(Me.tableTOTALES.PorcentajeIVAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPorcentajeIVANull()
            Me(Me.tableTOTALES.PorcentajeIVAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTotalIVANull() As Boolean
            Return Me.IsNull(Me.tableTOTALES.TotalIVAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTotalIVANull()
            Me(Me.tableTOTALES.TotalIVAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ARTICULOS_TICKETSRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ARTICULOS_TICKETSRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ARTICULOS_TICKETSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ARTICULOS_TICKETSRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ARTICULOSRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ARTICULOSRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ARTICULOSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ARTICULOSRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class TICKETSRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As TICKETSRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As TICKETSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As TICKETSRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class TICKETS_LINEASRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As TICKETS_LINEASRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As TICKETS_LINEASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As TICKETS_LINEASRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ESTADISTICASRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ESTADISTICASRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ESTADISTICASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ESTADISTICASRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class TOTALESRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As TOTALESRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As TOTALESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As TOTALESRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsConsultaTicketsTableAdapters

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class ARTICULOS_TICKETSTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ARTICULOS_TICKETS"
            tableMapping.ColumnMappings.Add("CodigoArticulo", "CodigoArticulo")
            tableMapping.ColumnMappings.Add("NumeroTicket", "NumeroTicket")
            tableMapping.ColumnMappings.Add("FechaTicket", "FechaTicket")
            tableMapping.ColumnMappings.Add("NombreFiscal", "NombreFiscal")
            tableMapping.ColumnMappings.Add("Cantidad", "Cantidad")
            tableMapping.ColumnMappings.Add("Precio", "Precio")
            tableMapping.ColumnMappings.Add("Importe", "Importe")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.AydaraTPV.My.Settings.AydaraTPVConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CodigoArticulo, NumeroTicket, FechaTicket, IsNull(NombreFiscal,'') AS Nomb" & _
                "reFiscal, SUM(IsNull(Peso,Cantidad)) AS Cantidad, Round(SUM(Importe) / SUM(IsNul" & _
                "l(Peso,Cantidad)),3) AS Precio, SUM(Importe) AS Importe" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM HISTORICO_TICKETS " & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "INNER JOIN HISTORICO_TICKETS_LINEAS ON HISTORICO_TICKETS.Id = HISTORICO_TICKET" & _
                "S_LINEAS.Ticket_Id" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "LEFT JOIN CLIENTES ON HISTORICO_TICKETS.CodigoCliente = CLIE" & _
                "NTES.Codigo" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "GROUP BY CodigoArticulo, NumeroTicket, FechaTicket, NombreFiscal"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As dsConsultaTickets.ARTICULOS_TICKETSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class ARTICULOSTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ARTICULOS"
            tableMapping.ColumnMappings.Add("CodigoArticulo", "CodigoArticulo")
            tableMapping.ColumnMappings.Add("DescripcionArticulo", "DescripcionArticulo")
            tableMapping.ColumnMappings.Add("Cantidad", "Cantidad")
            tableMapping.ColumnMappings.Add("Importe", "Importe")
            tableMapping.ColumnMappings.Add("DescripcionFamilia", "DescripcionFamilia")
            tableMapping.ColumnMappings.Add("DescripcionSubFamilia", "DescripcionSubFamilia")
            tableMapping.ColumnMappings.Add("ImporteSinIva", "ImporteSinIva")
            tableMapping.ColumnMappings.Add("PrecioCoste", "PrecioCoste")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.AydaraTPV.My.Settings.AydaraTPVConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        HISTORICO_TICKETS_LINEAS.CodigoArticulo, HISTORICO_TICKETS_LINEAS.D" & _
                "escripcionArticulo, SUM(ISNULL(HISTORICO_TICKETS_LINEAS.Peso, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "         HISTORICO_TICKETS_LINEAS.Cantidad)) AS Cantidad, SUM(HISTORICO_TICKETS_" & _
                "LINEAS.Importe) AS Importe, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         FAMILIASARTICULOS.Codigo " & _
                "+ ': ' + FAMILIASARTICULOS.Descripcion AS DescripcionFamilia, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "         SUBFAMILIASARTICULOS.Codigo + ': ' + SUBFAMILIASARTICULOS.Descripcion A" & _
                "S DescripcionSubFamilia, SUM(HISTORICO_TICKETS_LINEAS.Importe) / (1 +" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "         " & _
                "                    (SELECT        CASE ARTICULOS.TIPOIVA WHEN 1 THEN TIPOIVA1 W" & _
                "HEN 2 THEN TIPOIVA2 WHEN 3 THEN TIPOIVA3 ELSE TIPOIVA4 END AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "                    FROM            TIENDAS AS TIENDAS_3) / 100) AS ImporteSinIv" & _
                "a, ISNULL" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             ((SELECT        TOP (1) ALBARANES_COMPRA" & _
                "S_LINEAS.Precio" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                 FROM            ALBARANES_COMP" & _
                "RAS INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                          ALBARA" & _
                "NES_COMPRAS_LINEAS ON ALBARANES_COMPRAS.Id = ALBARANES_COMPRAS_LINEAS.AlbaranCom" & _
                "pra_Id" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                 WHERE        (ALBARANES_COMPRAS_LINEAS." & _
                "CodigoArticulo = HISTORICO_TICKETS_LINEAS.CodigoArticulo) AND " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "                                          (ALBARANES_COMPRAS.Fecha <= @FECHACOMP" & _
                "RA)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                 ORDER BY ALBARANES_COMPRAS.Fecha DESC, ALB" & _
                "ARANES_COMPRAS.Id DESC), ARTICULOS.PrecioCoste) AS PrecioCoste" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            " & _
                "SUBFAMILIASARTICULOS RIGHT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         ARTICULOS ON SUB" & _
                "FAMILIASARTICULOS.Id = ARTICULOS.CodigoSubfamilia AND " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                " SUBFAMILIASARTICULOS.Familia_Id = ARTICULOS.CodigoFamilia LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "                     FAMILIASARTICULOS ON ARTICULOS.CodigoFamilia = FAMILIASARTI" & _
                "CULOS.Id RIGHT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         HISTORICO_TICKETS INNER JOIN" & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         HISTORICO_TICKETS_LINEAS ON HISTORICO_TICKETS.Id = HI" & _
                "STORICO_TICKETS_LINEAS.Ticket_Id ON " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         ARTICULOS.Codigo " & _
                "= HISTORICO_TICKETS_LINEAS.CodigoArticulo LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     " & _
                "    CLIENTES ON HISTORICO_TICKETS.CodigoCliente = CLIENTES.Codigo" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "GROUP BY HIST" & _
                "ORICO_TICKETS_LINEAS.CodigoArticulo, HISTORICO_TICKETS_LINEAS.DescripcionArticul" & _
                "o, FAMILIASARTICULOS.Codigo, FAMILIASARTICULOS.Descripcion, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                  " & _
                "       SUBFAMILIASARTICULOS.Codigo, SUBFAMILIASARTICULOS.Descripcion, ARTICULOS." & _
                "PrecioCoste, ARTICULOS.TipoIva"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHACOMPRA", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As dsConsultaTickets.ARTICULOSDataTable, ByVal FECHACOMPRA As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHACOMPRA.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FECHACOMPRA.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class
End Namespace
