'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsTiendas"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsTiendas
    Inherits Global.System.Data.DataSet
    
    Private tableTIENDAS As TIENDASDataTable
    
    Private tableIDA_TIPOSTIENDA As IDA_TIPOSTIENDADataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("TIENDAS")) Is Nothing) Then
                MyBase.Tables.Add(New TIENDASDataTable(ds.Tables("TIENDAS")))
            End If
            If (Not (ds.Tables("IDA_TIPOSTIENDA")) Is Nothing) Then
                MyBase.Tables.Add(New IDA_TIPOSTIENDADataTable(ds.Tables("IDA_TIPOSTIENDA")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TIENDAS() As TIENDASDataTable
        Get
            Return Me.tableTIENDAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IDA_TIPOSTIENDA() As IDA_TIPOSTIENDADataTable
        Get
            Return Me.tableIDA_TIPOSTIENDA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsTiendas = CType(MyBase.Clone,dsTiendas)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("TIENDAS")) Is Nothing) Then
                MyBase.Tables.Add(New TIENDASDataTable(ds.Tables("TIENDAS")))
            End If
            If (Not (ds.Tables("IDA_TIPOSTIENDA")) Is Nothing) Then
                MyBase.Tables.Add(New IDA_TIPOSTIENDADataTable(ds.Tables("IDA_TIPOSTIENDA")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableTIENDAS = CType(MyBase.Tables("TIENDAS"),TIENDASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTIENDAS) Is Nothing) Then
                Me.tableTIENDAS.InitVars
            End If
        End If
        Me.tableIDA_TIPOSTIENDA = CType(MyBase.Tables("IDA_TIPOSTIENDA"),IDA_TIPOSTIENDADataTable)
        If (initTable = true) Then
            If (Not (Me.tableIDA_TIPOSTIENDA) Is Nothing) Then
                Me.tableIDA_TIPOSTIENDA.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsTiendas"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsTiendas.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableTIENDAS = New TIENDASDataTable()
        MyBase.Tables.Add(Me.tableTIENDAS)
        Me.tableIDA_TIPOSTIENDA = New IDA_TIPOSTIENDADataTable()
        MyBase.Tables.Add(Me.tableIDA_TIPOSTIENDA)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTIENDAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeIDA_TIPOSTIENDA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsTiendas = New dsTiendas()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TIENDASRowChangeEventHandler(ByVal sender As Object, ByVal e As TIENDASRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub IDA_TIPOSTIENDARowChangeEventHandler(ByVal sender As Object, ByVal e As IDA_TIPOSTIENDARowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TIENDASDataTable
        Inherits Global.System.Data.TypedTableBase(Of TIENDASRow)
        
        Private columnCODALM As Global.System.Data.DataColumn
        
        Private columnDESCALM As Global.System.Data.DataColumn
        
        Private columnALBARANCREDITO As Global.System.Data.DataColumn
        
        Private columnCONREPER As Global.System.Data.DataColumn
        
        Private columnCONVENCIM As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnDESGLOSEPEDIDO As Global.System.Data.DataColumn
        
        Private columnENVIARINVENTARIO As Global.System.Data.DataColumn
        
        Private columnFACTURADIARIA As Global.System.Data.DataColumn
        
        Private columnGENERAALBARAN As Global.System.Data.DataColumn
        
        Private columnGENERAFACTURA As Global.System.Data.DataColumn
        
        Private columnPEDIDOMANUAL As Global.System.Data.DataColumn
        
        Private columnRECIBECOMPRAS As Global.System.Data.DataColumn
        
        Private columnRECIBETICKETS As Global.System.Data.DataColumn
        
        Private columnSERIEALBARAN As Global.System.Data.DataColumn
        
        Private columnSERIEALBCREDITO As Global.System.Data.DataColumn
        
        Private columnSERIECOMPRAS As Global.System.Data.DataColumn
        
        Private columnSERIEDESTINO As Global.System.Data.DataColumn
        
        Private columnSERIEFACTURA As Global.System.Data.DataColumn
        
        Private columnSERIEPEDIDO As Global.System.Data.DataColumn
        
        Private columnTIPOCONTALBARAN As Global.System.Data.DataColumn
        
        Private columnTIPOCONTALBCREDITO As Global.System.Data.DataColumn
        
        Private columnTIPOCONTCOMPRAS As Global.System.Data.DataColumn
        
        Private columnTIPOCONTDESTINO As Global.System.Data.DataColumn
        
        Private columnTIPOCONTFACTURA As Global.System.Data.DataColumn
        
        Private columnTIPOCONTPEDIDO As Global.System.Data.DataColumn
        
        Private columnIDA_CODCLI As Global.System.Data.DataColumn
        
        Private columnIDA_DESCDEPOSITO As Global.System.Data.DataColumn
        
        Private columnIDA_TIPOTIENDA As Global.System.Data.DataColumn
        
        Private columnIDA_COMUNICACION As Global.System.Data.DataColumn
        
        Private columnIDA_CTAABONOENVASES As Global.System.Data.DataColumn
        
        Private columnIDA_CTACOBROSCLIENTE As Global.System.Data.DataColumn
        
        Private columnIDA_CTAEFECTIVO As Global.System.Data.DataColumn
        
        Private columnIDA_CTAPAGOSPROVEEDOR As Global.System.Data.DataColumn
        
        Private columnIDA_CTAPENDIENTECOBRO As Global.System.Data.DataColumn
        
        Private columnIDA_CTATALON As Global.System.Data.DataColumn
        
        Private columnIDA_CTATARJETA As Global.System.Data.DataColumn
        
        Private columnIDA_CTAVALESCOBRADOS As Global.System.Data.DataColumn
        
        Private columnIDA_CTAVALESPROPIOS As Global.System.Data.DataColumn
        
        Private columnIDA_CTAVALESPROVEEDOR As Global.System.Data.DataColumn
        
        Private columnIDA_TIPOTERMINAL As Global.System.Data.DataColumn
        
        Private columnIVAINCLUIDO As Global.System.Data.DataColumn
        
        Private columnTARIFA As Global.System.Data.DataColumn
        
        Private columnCENTROCOSTE As Global.System.Data.DataColumn
        
        Private columnINTEXT As Global.System.Data.DataColumn
        
        Private columnTIPODOCUDESTINO As Global.System.Data.DataColumn
        
        Private columnAVISO0 As Global.System.Data.DataColumn
        
        Private columnAVISOMAX As Global.System.Data.DataColumn
        
        Private columnAVISOMIN As Global.System.Data.DataColumn
        
        Private columnAVISOSTOCKPREVISTO0 As Global.System.Data.DataColumn
        
        Private columnAVISOSTOCKPREVISTOMAX As Global.System.Data.DataColumn
        
        Private columnAVISOSTOCKPREVISTOMIN As Global.System.Data.DataColumn
        
        Private columnCIM As Global.System.Data.DataColumn
        
        Private columnCODGRUPOALMACEN As Global.System.Data.DataColumn
        
        Private columnCODPAIS As Global.System.Data.DataColumn
        
        Private columnCODPROVI As Global.System.Data.DataColumn
        
        Private columnDIRALM As Global.System.Data.DataColumn
        
        Private columnDTOALM As Global.System.Data.DataColumn
        
        Private columnE_MAIL As Global.System.Data.DataColumn
        
        Private columnENCARGADO As Global.System.Data.DataColumn
        
        Private columnFAXALM As Global.System.Data.DataColumn
        
        Private columnOBSALM As Global.System.Data.DataColumn
        
        Private columnPOBALM As Global.System.Data.DataColumn
        
        Private columnSTOCKNEG As Global.System.Data.DataColumn
        
        Private columnTEL2ALM As Global.System.Data.DataColumn

        Private columnTELALM As Global.System.Data.DataColumn

        Private columnIDA_CODCLIPED As Global.System.Data.DataColumn

        Private columnARTICULOSDIRECTOS As Global.System.Data.DataColumn

        Private columnCODIGO As Global.System.Data.DataColumn

        Private columnIDA_CTABANCO As Global.System.Data.DataColumn

        Private columnIDA_CTAVALESCLIENTE As Global.System.Data.DataColumn

        Private columnIDA_SERIEFRA1 As Global.System.Data.DataColumn

        Private columnIDA_SERIEFRA2 As Global.System.Data.DataColumn

        Private columnIDA_TIPOCONTFRA1 As Global.System.Data.DataColumn

        Private columnIDA_TIPOCONTFRA2 As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "TIENDAS"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CODALMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODALM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DESCALMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCALM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ALBARANCREDITOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALBARANCREDITO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONREPERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONREPER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONVENCIMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONVENCIM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DESGLOSEPEDIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESGLOSEPEDIDO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ENVIARINVENTARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENVIARINVENTARIO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FACTURADIARIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFACTURADIARIA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GENERAALBARANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGENERAALBARAN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GENERAFACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGENERAFACTURA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PEDIDOMANUALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPEDIDOMANUAL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RECIBECOMPRASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECIBECOMPRAS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RECIBETICKETSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECIBETICKETS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERIEALBARANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIEALBARAN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERIEALBCREDITOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIEALBCREDITO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERIECOMPRASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIECOMPRAS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERIEDESTINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIEDESTINO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERIEFACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIEFACTURA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERIEPEDIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIEPEDIDO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPOCONTALBARANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOCONTALBARAN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPOCONTALBCREDITOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOCONTALBCREDITO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPOCONTCOMPRASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOCONTCOMPRAS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPOCONTDESTINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOCONTDESTINO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPOCONTFACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOCONTFACTURA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPOCONTPEDIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOCONTPEDIDO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_CODCLIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_CODCLI
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_DESCDEPOSITOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_DESCDEPOSITO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_TIPOTIENDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_TIPOTIENDA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_COMUNICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_COMUNICACION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_CTAABONOENVASESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_CTAABONOENVASES
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_CTACOBROSCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_CTACOBROSCLIENTE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_CTAEFECTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_CTAEFECTIVO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_CTAPAGOSPROVEEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_CTAPAGOSPROVEEDOR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_CTAPENDIENTECOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_CTAPENDIENTECOBRO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_CTATALONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_CTATALON
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_CTATARJETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_CTATARJETA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_CTAVALESCOBRADOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_CTAVALESCOBRADOS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_CTAVALESPROPIOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_CTAVALESPROPIOS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_CTAVALESPROVEEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_CTAVALESPROVEEDOR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_TIPOTERMINALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_TIPOTERMINAL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IVAINCLUIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVAINCLUIDO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TARIFAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTARIFA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CENTROCOSTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCENTROCOSTE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property INTEXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTEXT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPODOCUDESTINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPODOCUDESTINO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AVISO0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVISO0
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AVISOMAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVISOMAX
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AVISOMINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVISOMIN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AVISOSTOCKPREVISTO0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVISOSTOCKPREVISTO0
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AVISOSTOCKPREVISTOMAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVISOSTOCKPREVISTOMAX
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AVISOSTOCKPREVISTOMINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVISOSTOCKPREVISTOMIN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CIMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CODGRUPOALMACENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODGRUPOALMACEN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CODPAISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPAIS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CODPROVIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPROVI
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DIRALMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRALM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DTOALMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDTOALM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property E_MAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnE_MAIL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ENCARGADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENCARGADO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FAXALMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAXALM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OBSALMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSALM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property POBALMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOBALM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property STOCKNEGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKNEG
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TEL2ALMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTEL2ALM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TELALMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELALM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_CODCLIPEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_CODCLIPED
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ARTICULOSDIRECTOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnARTICULOSDIRECTOS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_CTABANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_CTABANCO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_CTAVALESCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_CTAVALESCLIENTE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_SERIEFRA1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_SERIEFRA1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_SERIEFRA2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_SERIEFRA2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_TIPOCONTFRA1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_TIPOCONTFRA1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDA_TIPOCONTFRA2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDA_TIPOCONTFRA2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As TIENDASRow
            Get
                Return CType(Me.Rows(index), TIENDASRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TIENDASRowChanging As TIENDASRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TIENDASRowChanged As TIENDASRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TIENDASRowDeleting As TIENDASRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TIENDASRowDeleted As TIENDASRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddTIENDASRow(ByVal row As TIENDASRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddTIENDASRow( _
                    ByVal CODALM As String, _
                    ByVal DESCALM As String, _
                    ByVal ALBARANCREDITO As String, _
                    ByVal CONREPER As String, _
                    ByVal CONVENCIM As String, _
                    ByVal DESCRIPCION As String, _
                    ByVal DESGLOSEPEDIDO As String, _
                    ByVal ENVIARINVENTARIO As String, _
                    ByVal FACTURADIARIA As String, _
                    ByVal GENERAALBARAN As String, _
                    ByVal GENERAFACTURA As String, _
                    ByVal PEDIDOMANUAL As String, _
                    ByVal RECIBECOMPRAS As String, _
                    ByVal RECIBETICKETS As String, _
                    ByVal SERIEALBARAN As String, _
                    ByVal SERIEALBCREDITO As String, _
                    ByVal SERIECOMPRAS As String, _
                    ByVal SERIEDESTINO As String, _
                    ByVal SERIEFACTURA As String, _
                    ByVal SERIEPEDIDO As String, _
                    ByVal TIPOCONTALBARAN As String, _
                    ByVal TIPOCONTALBCREDITO As String, _
                    ByVal TIPOCONTCOMPRAS As String, _
                    ByVal TIPOCONTDESTINO As String, _
                    ByVal TIPOCONTFACTURA As String, _
                    ByVal TIPOCONTPEDIDO As String, _
                    ByVal IDA_CODCLI As String, _
                    ByVal IDA_DESCDEPOSITO As Decimal, _
                    ByVal IDA_TIPOTIENDA As String, _
                    ByVal IDA_COMUNICACION As String, _
                    ByVal IDA_CTAABONOENVASES As String, _
                    ByVal IDA_CTACOBROSCLIENTE As String, _
                    ByVal IDA_CTAEFECTIVO As String, _
                    ByVal IDA_CTAPAGOSPROVEEDOR As String, _
                    ByVal IDA_CTAPENDIENTECOBRO As String, _
                    ByVal IDA_CTATALON As String, _
                    ByVal IDA_CTATARJETA As String, _
                    ByVal IDA_CTAVALESCOBRADOS As String, _
                    ByVal IDA_CTAVALESPROPIOS As String, _
                    ByVal IDA_CTAVALESPROVEEDOR As String, _
                    ByVal IDA_TIPOTERMINAL As String, _
                    ByVal IVAINCLUIDO As String, _
                    ByVal TARIFA As String, _
                    ByVal CENTROCOSTE As String, _
                    ByVal INTEXT As String, _
                    ByVal TIPODOCUDESTINO As String, _
                    ByVal AVISO0 As String, _
                    ByVal AVISOMAX As String, _
                    ByVal AVISOMIN As String, _
                    ByVal AVISOSTOCKPREVISTO0 As String, _
                    ByVal AVISOSTOCKPREVISTOMAX As String, _
                    ByVal AVISOSTOCKPREVISTOMIN As String, _
                    ByVal CIM As String, _
                    ByVal CODGRUPOALMACEN As String, _
                    ByVal CODPAIS As String, _
                    ByVal CODPROVI As String, _
                    ByVal DIRALM As String, _
                    ByVal DTOALM As String, _
                    ByVal E_MAIL As String, _
                    ByVal ENCARGADO As String, _
                    ByVal FAXALM As String, _
                    ByVal OBSALM As String, _
                    ByVal POBALM As String, _
                    ByVal STOCKNEG As String, _
                    ByVal TEL2ALM As String, _
                    ByVal TELALM As String, _
                    ByVal IDA_CODCLIPED As String, _
                    ByVal ARTICULOSDIRECTOS As String, _
                    ByVal CODIGO As String, _
                    ByVal IDA_CTABANCO As String, _
                    ByVal IDA_CTAVALESCLIENTE As String, _
                    ByVal IDA_SERIEFRA1 As String, _
                    ByVal IDA_SERIEFRA2 As String, _
                    ByVal IDA_TIPOCONTFRA1 As String, _
                    ByVal IDA_TIPOCONTFRA2 As String) As TIENDASRow
            Dim rowTIENDASRow As TIENDASRow = CType(Me.NewRow, TIENDASRow)
            Dim columnValuesArray() As Object = New Object() {CODALM, DESCALM, ALBARANCREDITO, CONREPER, CONVENCIM, DESCRIPCION, DESGLOSEPEDIDO, ENVIARINVENTARIO, FACTURADIARIA, GENERAALBARAN, GENERAFACTURA, PEDIDOMANUAL, RECIBECOMPRAS, RECIBETICKETS, SERIEALBARAN, SERIEALBCREDITO, SERIECOMPRAS, SERIEDESTINO, SERIEFACTURA, SERIEPEDIDO, TIPOCONTALBARAN, TIPOCONTALBCREDITO, TIPOCONTCOMPRAS, TIPOCONTDESTINO, TIPOCONTFACTURA, TIPOCONTPEDIDO, IDA_CODCLI, IDA_DESCDEPOSITO, IDA_TIPOTIENDA, IDA_COMUNICACION, IDA_CTAABONOENVASES, IDA_CTACOBROSCLIENTE, IDA_CTAEFECTIVO, IDA_CTAPAGOSPROVEEDOR, IDA_CTAPENDIENTECOBRO, IDA_CTATALON, IDA_CTATARJETA, IDA_CTAVALESCOBRADOS, IDA_CTAVALESPROPIOS, IDA_CTAVALESPROVEEDOR, IDA_TIPOTERMINAL, IVAINCLUIDO, TARIFA, CENTROCOSTE, INTEXT, TIPODOCUDESTINO, AVISO0, AVISOMAX, AVISOMIN, AVISOSTOCKPREVISTO0, AVISOSTOCKPREVISTOMAX, AVISOSTOCKPREVISTOMIN, CIM, CODGRUPOALMACEN, CODPAIS, CODPROVI, DIRALM, DTOALM, E_MAIL, ENCARGADO, FAXALM, OBSALM, POBALM, STOCKNEG, TEL2ALM, TELALM, IDA_CODCLIPED, ARTICULOSDIRECTOS, CODIGO, IDA_CTABANCO, IDA_CTAVALESCLIENTE, IDA_SERIEFRA1, IDA_SERIEFRA2, IDA_TIPOCONTFRA1, IDA_TIPOCONTFRA2}
            rowTIENDASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTIENDASRow)
            Return rowTIENDASRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByCODALM(ByVal CODALM As String) As TIENDASRow
            Return CType(Me.Rows.Find(New Object() {CODALM}), TIENDASRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TIENDASDataTable = CType(MyBase.Clone, TIENDASDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TIENDASDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnCODALM = MyBase.Columns("CODALM")
            Me.columnDESCALM = MyBase.Columns("DESCALM")
            Me.columnALBARANCREDITO = MyBase.Columns("ALBARANCREDITO")
            Me.columnCONREPER = MyBase.Columns("CONREPER")
            Me.columnCONVENCIM = MyBase.Columns("CONVENCIM")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnDESGLOSEPEDIDO = MyBase.Columns("DESGLOSEPEDIDO")
            Me.columnENVIARINVENTARIO = MyBase.Columns("ENVIARINVENTARIO")
            Me.columnFACTURADIARIA = MyBase.Columns("FACTURADIARIA")
            Me.columnGENERAALBARAN = MyBase.Columns("GENERAALBARAN")
            Me.columnGENERAFACTURA = MyBase.Columns("GENERAFACTURA")
            Me.columnPEDIDOMANUAL = MyBase.Columns("PEDIDOMANUAL")
            Me.columnRECIBECOMPRAS = MyBase.Columns("RECIBECOMPRAS")
            Me.columnRECIBETICKETS = MyBase.Columns("RECIBETICKETS")
            Me.columnSERIEALBARAN = MyBase.Columns("SERIEALBARAN")
            Me.columnSERIEALBCREDITO = MyBase.Columns("SERIEALBCREDITO")
            Me.columnSERIECOMPRAS = MyBase.Columns("SERIECOMPRAS")
            Me.columnSERIEDESTINO = MyBase.Columns("SERIEDESTINO")
            Me.columnSERIEFACTURA = MyBase.Columns("SERIEFACTURA")
            Me.columnSERIEPEDIDO = MyBase.Columns("SERIEPEDIDO")
            Me.columnTIPOCONTALBARAN = MyBase.Columns("TIPOCONTALBARAN")
            Me.columnTIPOCONTALBCREDITO = MyBase.Columns("TIPOCONTALBCREDITO")
            Me.columnTIPOCONTCOMPRAS = MyBase.Columns("TIPOCONTCOMPRAS")
            Me.columnTIPOCONTDESTINO = MyBase.Columns("TIPOCONTDESTINO")
            Me.columnTIPOCONTFACTURA = MyBase.Columns("TIPOCONTFACTURA")
            Me.columnTIPOCONTPEDIDO = MyBase.Columns("TIPOCONTPEDIDO")
            Me.columnIDA_CODCLI = MyBase.Columns("IDA_CODCLI")
            Me.columnIDA_DESCDEPOSITO = MyBase.Columns("IDA_DESCDEPOSITO")
            Me.columnIDA_TIPOTIENDA = MyBase.Columns("IDA_TIPOTIENDA")
            Me.columnIDA_COMUNICACION = MyBase.Columns("IDA_COMUNICACION")
            Me.columnIDA_CTAABONOENVASES = MyBase.Columns("IDA_CTAABONOENVASES")
            Me.columnIDA_CTACOBROSCLIENTE = MyBase.Columns("IDA_CTACOBROSCLIENTE")
            Me.columnIDA_CTAEFECTIVO = MyBase.Columns("IDA_CTAEFECTIVO")
            Me.columnIDA_CTAPAGOSPROVEEDOR = MyBase.Columns("IDA_CTAPAGOSPROVEEDOR")
            Me.columnIDA_CTAPENDIENTECOBRO = MyBase.Columns("IDA_CTAPENDIENTECOBRO")
            Me.columnIDA_CTATALON = MyBase.Columns("IDA_CTATALON")
            Me.columnIDA_CTATARJETA = MyBase.Columns("IDA_CTATARJETA")
            Me.columnIDA_CTAVALESCOBRADOS = MyBase.Columns("IDA_CTAVALESCOBRADOS")
            Me.columnIDA_CTAVALESPROPIOS = MyBase.Columns("IDA_CTAVALESPROPIOS")
            Me.columnIDA_CTAVALESPROVEEDOR = MyBase.Columns("IDA_CTAVALESPROVEEDOR")
            Me.columnIDA_TIPOTERMINAL = MyBase.Columns("IDA_TIPOTERMINAL")
            Me.columnIVAINCLUIDO = MyBase.Columns("IVAINCLUIDO")
            Me.columnTARIFA = MyBase.Columns("TARIFA")
            Me.columnCENTROCOSTE = MyBase.Columns("CENTROCOSTE")
            Me.columnINTEXT = MyBase.Columns("INTEXT")
            Me.columnTIPODOCUDESTINO = MyBase.Columns("TIPODOCUDESTINO")
            Me.columnAVISO0 = MyBase.Columns("AVISO0")
            Me.columnAVISOMAX = MyBase.Columns("AVISOMAX")
            Me.columnAVISOMIN = MyBase.Columns("AVISOMIN")
            Me.columnAVISOSTOCKPREVISTO0 = MyBase.Columns("AVISOSTOCKPREVISTO0")
            Me.columnAVISOSTOCKPREVISTOMAX = MyBase.Columns("AVISOSTOCKPREVISTOMAX")
            Me.columnAVISOSTOCKPREVISTOMIN = MyBase.Columns("AVISOSTOCKPREVISTOMIN")
            Me.columnCIM = MyBase.Columns("CIM")
            Me.columnCODGRUPOALMACEN = MyBase.Columns("CODGRUPOALMACEN")
            Me.columnCODPAIS = MyBase.Columns("CODPAIS")
            Me.columnCODPROVI = MyBase.Columns("CODPROVI")
            Me.columnDIRALM = MyBase.Columns("DIRALM")
            Me.columnDTOALM = MyBase.Columns("DTOALM")
            Me.columnE_MAIL = MyBase.Columns("E_MAIL")
            Me.columnENCARGADO = MyBase.Columns("ENCARGADO")
            Me.columnFAXALM = MyBase.Columns("FAXALM")
            Me.columnOBSALM = MyBase.Columns("OBSALM")
            Me.columnPOBALM = MyBase.Columns("POBALM")
            Me.columnSTOCKNEG = MyBase.Columns("STOCKNEG")
            Me.columnTEL2ALM = MyBase.Columns("TEL2ALM")
            Me.columnTELALM = MyBase.Columns("TELALM")
            Me.columnIDA_CODCLIPED = MyBase.Columns("IDA_CODCLIPED")
            Me.columnARTICULOSDIRECTOS = MyBase.Columns("ARTICULOSDIRECTOS")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnIDA_CTABANCO = MyBase.Columns("IDA_CTABANCO")
            Me.columnIDA_CTAVALESCLIENTE = MyBase.Columns("IDA_CTAVALESCLIENTE")
            Me.columnIDA_SERIEFRA1 = MyBase.Columns("IDA_SERIEFRA1")
            Me.columnIDA_SERIEFRA2 = MyBase.Columns("IDA_SERIEFRA2")
            Me.columnIDA_TIPOCONTFRA1 = MyBase.Columns("IDA_TIPOCONTFRA1")
            Me.columnIDA_TIPOCONTFRA2 = MyBase.Columns("IDA_TIPOCONTFRA2")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnCODALM = New Global.System.Data.DataColumn("CODALM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODALM)
            Me.columnDESCALM = New Global.System.Data.DataColumn("DESCALM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCALM)
            Me.columnALBARANCREDITO = New Global.System.Data.DataColumn("ALBARANCREDITO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALBARANCREDITO)
            Me.columnCONREPER = New Global.System.Data.DataColumn("CONREPER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONREPER)
            Me.columnCONVENCIM = New Global.System.Data.DataColumn("CONVENCIM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONVENCIM)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnDESGLOSEPEDIDO = New Global.System.Data.DataColumn("DESGLOSEPEDIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESGLOSEPEDIDO)
            Me.columnENVIARINVENTARIO = New Global.System.Data.DataColumn("ENVIARINVENTARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENVIARINVENTARIO)
            Me.columnFACTURADIARIA = New Global.System.Data.DataColumn("FACTURADIARIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFACTURADIARIA)
            Me.columnGENERAALBARAN = New Global.System.Data.DataColumn("GENERAALBARAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGENERAALBARAN)
            Me.columnGENERAFACTURA = New Global.System.Data.DataColumn("GENERAFACTURA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGENERAFACTURA)
            Me.columnPEDIDOMANUAL = New Global.System.Data.DataColumn("PEDIDOMANUAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPEDIDOMANUAL)
            Me.columnRECIBECOMPRAS = New Global.System.Data.DataColumn("RECIBECOMPRAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECIBECOMPRAS)
            Me.columnRECIBETICKETS = New Global.System.Data.DataColumn("RECIBETICKETS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECIBETICKETS)
            Me.columnSERIEALBARAN = New Global.System.Data.DataColumn("SERIEALBARAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIEALBARAN)
            Me.columnSERIEALBCREDITO = New Global.System.Data.DataColumn("SERIEALBCREDITO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIEALBCREDITO)
            Me.columnSERIECOMPRAS = New Global.System.Data.DataColumn("SERIECOMPRAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIECOMPRAS)
            Me.columnSERIEDESTINO = New Global.System.Data.DataColumn("SERIEDESTINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIEDESTINO)
            Me.columnSERIEFACTURA = New Global.System.Data.DataColumn("SERIEFACTURA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIEFACTURA)
            Me.columnSERIEPEDIDO = New Global.System.Data.DataColumn("SERIEPEDIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIEPEDIDO)
            Me.columnTIPOCONTALBARAN = New Global.System.Data.DataColumn("TIPOCONTALBARAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOCONTALBARAN)
            Me.columnTIPOCONTALBCREDITO = New Global.System.Data.DataColumn("TIPOCONTALBCREDITO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOCONTALBCREDITO)
            Me.columnTIPOCONTCOMPRAS = New Global.System.Data.DataColumn("TIPOCONTCOMPRAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOCONTCOMPRAS)
            Me.columnTIPOCONTDESTINO = New Global.System.Data.DataColumn("TIPOCONTDESTINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOCONTDESTINO)
            Me.columnTIPOCONTFACTURA = New Global.System.Data.DataColumn("TIPOCONTFACTURA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOCONTFACTURA)
            Me.columnTIPOCONTPEDIDO = New Global.System.Data.DataColumn("TIPOCONTPEDIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOCONTPEDIDO)
            Me.columnIDA_CODCLI = New Global.System.Data.DataColumn("IDA_CODCLI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_CODCLI)
            Me.columnIDA_DESCDEPOSITO = New Global.System.Data.DataColumn("IDA_DESCDEPOSITO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_DESCDEPOSITO)
            Me.columnIDA_TIPOTIENDA = New Global.System.Data.DataColumn("IDA_TIPOTIENDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_TIPOTIENDA)
            Me.columnIDA_COMUNICACION = New Global.System.Data.DataColumn("IDA_COMUNICACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_COMUNICACION)
            Me.columnIDA_CTAABONOENVASES = New Global.System.Data.DataColumn("IDA_CTAABONOENVASES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_CTAABONOENVASES)
            Me.columnIDA_CTACOBROSCLIENTE = New Global.System.Data.DataColumn("IDA_CTACOBROSCLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_CTACOBROSCLIENTE)
            Me.columnIDA_CTAEFECTIVO = New Global.System.Data.DataColumn("IDA_CTAEFECTIVO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_CTAEFECTIVO)
            Me.columnIDA_CTAPAGOSPROVEEDOR = New Global.System.Data.DataColumn("IDA_CTAPAGOSPROVEEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_CTAPAGOSPROVEEDOR)
            Me.columnIDA_CTAPENDIENTECOBRO = New Global.System.Data.DataColumn("IDA_CTAPENDIENTECOBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_CTAPENDIENTECOBRO)
            Me.columnIDA_CTATALON = New Global.System.Data.DataColumn("IDA_CTATALON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_CTATALON)
            Me.columnIDA_CTATARJETA = New Global.System.Data.DataColumn("IDA_CTATARJETA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_CTATARJETA)
            Me.columnIDA_CTAVALESCOBRADOS = New Global.System.Data.DataColumn("IDA_CTAVALESCOBRADOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_CTAVALESCOBRADOS)
            Me.columnIDA_CTAVALESPROPIOS = New Global.System.Data.DataColumn("IDA_CTAVALESPROPIOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_CTAVALESPROPIOS)
            Me.columnIDA_CTAVALESPROVEEDOR = New Global.System.Data.DataColumn("IDA_CTAVALESPROVEEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_CTAVALESPROVEEDOR)
            Me.columnIDA_TIPOTERMINAL = New Global.System.Data.DataColumn("IDA_TIPOTERMINAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_TIPOTERMINAL)
            Me.columnIVAINCLUIDO = New Global.System.Data.DataColumn("IVAINCLUIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVAINCLUIDO)
            Me.columnTARIFA = New Global.System.Data.DataColumn("TARIFA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTARIFA)
            Me.columnCENTROCOSTE = New Global.System.Data.DataColumn("CENTROCOSTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCENTROCOSTE)
            Me.columnINTEXT = New Global.System.Data.DataColumn("INTEXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTEXT)
            Me.columnTIPODOCUDESTINO = New Global.System.Data.DataColumn("TIPODOCUDESTINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPODOCUDESTINO)
            Me.columnAVISO0 = New Global.System.Data.DataColumn("AVISO0", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVISO0)
            Me.columnAVISOMAX = New Global.System.Data.DataColumn("AVISOMAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVISOMAX)
            Me.columnAVISOMIN = New Global.System.Data.DataColumn("AVISOMIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVISOMIN)
            Me.columnAVISOSTOCKPREVISTO0 = New Global.System.Data.DataColumn("AVISOSTOCKPREVISTO0", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVISOSTOCKPREVISTO0)
            Me.columnAVISOSTOCKPREVISTOMAX = New Global.System.Data.DataColumn("AVISOSTOCKPREVISTOMAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVISOSTOCKPREVISTOMAX)
            Me.columnAVISOSTOCKPREVISTOMIN = New Global.System.Data.DataColumn("AVISOSTOCKPREVISTOMIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVISOSTOCKPREVISTOMIN)
            Me.columnCIM = New Global.System.Data.DataColumn("CIM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIM)
            Me.columnCODGRUPOALMACEN = New Global.System.Data.DataColumn("CODGRUPOALMACEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODGRUPOALMACEN)
            Me.columnCODPAIS = New Global.System.Data.DataColumn("CODPAIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPAIS)
            Me.columnCODPROVI = New Global.System.Data.DataColumn("CODPROVI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPROVI)
            Me.columnDIRALM = New Global.System.Data.DataColumn("DIRALM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRALM)
            Me.columnDTOALM = New Global.System.Data.DataColumn("DTOALM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDTOALM)
            Me.columnE_MAIL = New Global.System.Data.DataColumn("E_MAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnE_MAIL)
            Me.columnENCARGADO = New Global.System.Data.DataColumn("ENCARGADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENCARGADO)
            Me.columnFAXALM = New Global.System.Data.DataColumn("FAXALM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAXALM)
            Me.columnOBSALM = New Global.System.Data.DataColumn("OBSALM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSALM)
            Me.columnPOBALM = New Global.System.Data.DataColumn("POBALM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOBALM)
            Me.columnSTOCKNEG = New Global.System.Data.DataColumn("STOCKNEG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKNEG)
            Me.columnTEL2ALM = New Global.System.Data.DataColumn("TEL2ALM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTEL2ALM)
            Me.columnTELALM = New Global.System.Data.DataColumn("TELALM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELALM)
            Me.columnIDA_CODCLIPED = New Global.System.Data.DataColumn("IDA_CODCLIPED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_CODCLIPED)
            Me.columnARTICULOSDIRECTOS = New Global.System.Data.DataColumn("ARTICULOSDIRECTOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnARTICULOSDIRECTOS)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnIDA_CTABANCO = New Global.System.Data.DataColumn("IDA_CTABANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_CTABANCO)
            Me.columnIDA_CTAVALESCLIENTE = New Global.System.Data.DataColumn("IDA_CTAVALESCLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_CTAVALESCLIENTE)
            Me.columnIDA_SERIEFRA1 = New Global.System.Data.DataColumn("IDA_SERIEFRA1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_SERIEFRA1)
            Me.columnIDA_SERIEFRA2 = New Global.System.Data.DataColumn("IDA_SERIEFRA2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_SERIEFRA2)
            Me.columnIDA_TIPOCONTFRA1 = New Global.System.Data.DataColumn("IDA_TIPOCONTFRA1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_TIPOCONTFRA1)
            Me.columnIDA_TIPOCONTFRA2 = New Global.System.Data.DataColumn("IDA_TIPOCONTFRA2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDA_TIPOCONTFRA2)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODALM}, True))
            Me.columnCODALM.AllowDBNull = False
            Me.columnCODALM.Unique = True
            Me.columnCODALM.MaxLength = 8
            Me.columnDESCALM.MaxLength = 50
            Me.columnALBARANCREDITO.MaxLength = 1
            Me.columnCONREPER.MaxLength = 1
            Me.columnCONVENCIM.MaxLength = 1
            Me.columnDESCRIPCION.MaxLength = 50
            Me.columnDESGLOSEPEDIDO.MaxLength = 1
            Me.columnENVIARINVENTARIO.MaxLength = 1
            Me.columnFACTURADIARIA.MaxLength = 1
            Me.columnGENERAALBARAN.MaxLength = 1
            Me.columnGENERAFACTURA.MaxLength = 1
            Me.columnPEDIDOMANUAL.MaxLength = 1
            Me.columnRECIBECOMPRAS.MaxLength = 1
            Me.columnRECIBETICKETS.MaxLength = 1
            Me.columnSERIEALBARAN.MaxLength = 8
            Me.columnSERIEALBCREDITO.MaxLength = 8
            Me.columnSERIECOMPRAS.MaxLength = 8
            Me.columnSERIEDESTINO.MaxLength = 8
            Me.columnSERIEFACTURA.MaxLength = 8
            Me.columnSERIEPEDIDO.MaxLength = 8
            Me.columnTIPOCONTALBARAN.MaxLength = 3
            Me.columnTIPOCONTALBCREDITO.MaxLength = 3
            Me.columnTIPOCONTCOMPRAS.MaxLength = 3
            Me.columnTIPOCONTDESTINO.MaxLength = 3
            Me.columnTIPOCONTFACTURA.MaxLength = 3
            Me.columnTIPOCONTPEDIDO.MaxLength = 3
            Me.columnIDA_CODCLI.MaxLength = 8
            Me.columnIDA_TIPOTIENDA.MaxLength = 8
            Me.columnIDA_COMUNICACION.MaxLength = 10
            Me.columnIDA_CTAABONOENVASES.MaxLength = 12
            Me.columnIDA_CTACOBROSCLIENTE.MaxLength = 12
            Me.columnIDA_CTAEFECTIVO.MaxLength = 12
            Me.columnIDA_CTAPAGOSPROVEEDOR.MaxLength = 12
            Me.columnIDA_CTAPENDIENTECOBRO.MaxLength = 12
            Me.columnIDA_CTATALON.MaxLength = 12
            Me.columnIDA_CTATARJETA.MaxLength = 12
            Me.columnIDA_CTAVALESCOBRADOS.MaxLength = 12
            Me.columnIDA_CTAVALESPROPIOS.MaxLength = 12
            Me.columnIDA_CTAVALESPROVEEDOR.MaxLength = 12
            Me.columnIDA_TIPOTERMINAL.MaxLength = 10
            Me.columnIVAINCLUIDO.MaxLength = 1
            Me.columnINTEXT.MaxLength = 1
            Me.columnTIPODOCUDESTINO.MaxLength = 8
            Me.columnAVISO0.MaxLength = 1
            Me.columnAVISOMAX.MaxLength = 1
            Me.columnAVISOMIN.MaxLength = 1
            Me.columnAVISOSTOCKPREVISTO0.MaxLength = 1
            Me.columnAVISOSTOCKPREVISTOMAX.MaxLength = 1
            Me.columnAVISOSTOCKPREVISTOMIN.MaxLength = 1
            Me.columnCIM.MaxLength = 10
            Me.columnCODGRUPOALMACEN.MaxLength = 8
            Me.columnCODPAIS.MaxLength = 4
            Me.columnCODPROVI.MaxLength = 4
            Me.columnDIRALM.MaxLength = 60
            Me.columnDTOALM.MaxLength = 10
            Me.columnE_MAIL.MaxLength = 60
            Me.columnENCARGADO.MaxLength = 30
            Me.columnFAXALM.MaxLength = 15
            Me.columnOBSALM.MaxLength = 2147483647
            Me.columnPOBALM.MaxLength = 30
            Me.columnSTOCKNEG.MaxLength = 1
            Me.columnTEL2ALM.MaxLength = 15
            Me.columnTELALM.MaxLength = 15
            Me.columnIDA_CODCLIPED.MaxLength = 8
            Me.columnARTICULOSDIRECTOS.MaxLength = 1
            Me.columnCODIGO.AllowDBNull = False
            Me.columnCODIGO.MaxLength = 8
            Me.columnIDA_CTABANCO.MaxLength = 12
            Me.columnIDA_CTAVALESCLIENTE.MaxLength = 12
            Me.columnIDA_SERIEFRA1.MaxLength = 8
            Me.columnIDA_SERIEFRA2.MaxLength = 8
            Me.columnIDA_TIPOCONTFRA1.MaxLength = 3
            Me.columnIDA_TIPOCONTFRA2.MaxLength = 3
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewTIENDASRow() As TIENDASRow
            Return CType(Me.NewRow, TIENDASRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TIENDASRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TIENDASRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TIENDASRowChangedEvent) Is Nothing) Then
                RaiseEvent TIENDASRowChanged(Me, New TIENDASRowChangeEvent(CType(e.Row, TIENDASRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TIENDASRowChangingEvent) Is Nothing) Then
                RaiseEvent TIENDASRowChanging(Me, New TIENDASRowChangeEvent(CType(e.Row, TIENDASRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TIENDASRowDeletedEvent) Is Nothing) Then
                RaiseEvent TIENDASRowDeleted(Me, New TIENDASRowChangeEvent(CType(e.Row, TIENDASRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TIENDASRowDeletingEvent) Is Nothing) Then
                RaiseEvent TIENDASRowDeleting(Me, New TIENDASRowChangeEvent(CType(e.Row, TIENDASRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveTIENDASRow(ByVal row As TIENDASRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTiendas = New dsTiendas()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TIENDASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class IDA_TIPOSTIENDADataTable
        Inherits Global.System.Data.TypedTableBase(Of IDA_TIPOSTIENDARow)

        Private columnALBARANCREDITO As Global.System.Data.DataColumn

        Private columnARTICULOSDIRECTOS As Global.System.Data.DataColumn

        Private columnCODIGO As Global.System.Data.DataColumn

        Private columnCONREPER As Global.System.Data.DataColumn

        Private columnCONVENCIM As Global.System.Data.DataColumn

        Private columnDESCRIPCION As Global.System.Data.DataColumn

        Private columnDESGLOSEPEDIDO As Global.System.Data.DataColumn

        Private columnENVIARINVENTARIO As Global.System.Data.DataColumn

        Private columnFACTURADIARIA As Global.System.Data.DataColumn

        Private columnGENERAALBARAN As Global.System.Data.DataColumn

        Private columnGENERAFACTURA As Global.System.Data.DataColumn

        Private columnIVAINCLUIDO As Global.System.Data.DataColumn

        Private columnPEDIDOMANUAL As Global.System.Data.DataColumn

        Private columnRECIBECOMPRAS As Global.System.Data.DataColumn

        Private columnRECIBETICKETS As Global.System.Data.DataColumn

        Private columnSERIEALBARAN As Global.System.Data.DataColumn

        Private columnSERIEALBCREDITO As Global.System.Data.DataColumn

        Private columnSERIECOMPRAS As Global.System.Data.DataColumn

        Private columnSERIEDESTINO As Global.System.Data.DataColumn

        Private columnSERIEFACTURA As Global.System.Data.DataColumn

        Private columnSERIEPEDIDO As Global.System.Data.DataColumn

        Private columnTIPOCONTALBARAN As Global.System.Data.DataColumn

        Private columnTIPOCONTALBCREDITO As Global.System.Data.DataColumn

        Private columnTIPOCONTCOMPRAS As Global.System.Data.DataColumn

        Private columnTIPOCONTDESTINO As Global.System.Data.DataColumn

        Private columnTIPOCONTFACTURA As Global.System.Data.DataColumn

        Private columnTIPOCONTPEDIDO As Global.System.Data.DataColumn

        Private columnTIPODOCUDESTINO As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "IDA_TIPOSTIENDA"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ALBARANCREDITOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALBARANCREDITO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ARTICULOSDIRECTOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnARTICULOSDIRECTOS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONREPERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONREPER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONVENCIMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONVENCIM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DESGLOSEPEDIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESGLOSEPEDIDO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ENVIARINVENTARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENVIARINVENTARIO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FACTURADIARIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFACTURADIARIA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GENERAALBARANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGENERAALBARAN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GENERAFACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGENERAFACTURA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IVAINCLUIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVAINCLUIDO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PEDIDOMANUALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPEDIDOMANUAL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RECIBECOMPRASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECIBECOMPRAS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RECIBETICKETSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECIBETICKETS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERIEALBARANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIEALBARAN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERIEALBCREDITOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIEALBCREDITO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERIECOMPRASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIECOMPRAS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERIEDESTINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIEDESTINO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERIEFACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIEFACTURA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SERIEPEDIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERIEPEDIDO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPOCONTALBARANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOCONTALBARAN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPOCONTALBCREDITOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOCONTALBCREDITO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPOCONTCOMPRASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOCONTCOMPRAS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPOCONTDESTINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOCONTDESTINO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPOCONTFACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOCONTFACTURA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPOCONTPEDIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOCONTPEDIDO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPODOCUDESTINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPODOCUDESTINO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As IDA_TIPOSTIENDARow
            Get
                Return CType(Me.Rows(index), IDA_TIPOSTIENDARow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IDA_TIPOSTIENDARowChanging As IDA_TIPOSTIENDARowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IDA_TIPOSTIENDARowChanged As IDA_TIPOSTIENDARowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IDA_TIPOSTIENDARowDeleting As IDA_TIPOSTIENDARowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event IDA_TIPOSTIENDARowDeleted As IDA_TIPOSTIENDARowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddIDA_TIPOSTIENDARow(ByVal row As IDA_TIPOSTIENDARow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddIDA_TIPOSTIENDARow( _
                    ByVal ALBARANCREDITO As String, _
                    ByVal ARTICULOSDIRECTOS As String, _
                    ByVal CODIGO As String, _
                    ByVal CONREPER As String, _
                    ByVal CONVENCIM As String, _
                    ByVal DESCRIPCION As String, _
                    ByVal DESGLOSEPEDIDO As String, _
                    ByVal ENVIARINVENTARIO As String, _
                    ByVal FACTURADIARIA As String, _
                    ByVal GENERAALBARAN As String, _
                    ByVal GENERAFACTURA As String, _
                    ByVal IVAINCLUIDO As String, _
                    ByVal PEDIDOMANUAL As String, _
                    ByVal RECIBECOMPRAS As String, _
                    ByVal RECIBETICKETS As String, _
                    ByVal SERIEALBARAN As String, _
                    ByVal SERIEALBCREDITO As String, _
                    ByVal SERIECOMPRAS As String, _
                    ByVal SERIEDESTINO As String, _
                    ByVal SERIEFACTURA As String, _
                    ByVal SERIEPEDIDO As String, _
                    ByVal TIPOCONTALBARAN As String, _
                    ByVal TIPOCONTALBCREDITO As String, _
                    ByVal TIPOCONTCOMPRAS As String, _
                    ByVal TIPOCONTDESTINO As String, _
                    ByVal TIPOCONTFACTURA As String, _
                    ByVal TIPOCONTPEDIDO As String, _
                    ByVal TIPODOCUDESTINO As String) As IDA_TIPOSTIENDARow
            Dim rowIDA_TIPOSTIENDARow As IDA_TIPOSTIENDARow = CType(Me.NewRow, IDA_TIPOSTIENDARow)
            Dim columnValuesArray() As Object = New Object() {ALBARANCREDITO, ARTICULOSDIRECTOS, CODIGO, CONREPER, CONVENCIM, DESCRIPCION, DESGLOSEPEDIDO, ENVIARINVENTARIO, FACTURADIARIA, GENERAALBARAN, GENERAFACTURA, IVAINCLUIDO, PEDIDOMANUAL, RECIBECOMPRAS, RECIBETICKETS, SERIEALBARAN, SERIEALBCREDITO, SERIECOMPRAS, SERIEDESTINO, SERIEFACTURA, SERIEPEDIDO, TIPOCONTALBARAN, TIPOCONTALBCREDITO, TIPOCONTCOMPRAS, TIPOCONTDESTINO, TIPOCONTFACTURA, TIPOCONTPEDIDO, TIPODOCUDESTINO}
            rowIDA_TIPOSTIENDARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIDA_TIPOSTIENDARow)
            Return rowIDA_TIPOSTIENDARow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByCODIGO(ByVal CODIGO As String) As IDA_TIPOSTIENDARow
            Return CType(Me.Rows.Find(New Object() {CODIGO}), IDA_TIPOSTIENDARow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IDA_TIPOSTIENDADataTable = CType(MyBase.Clone, IDA_TIPOSTIENDADataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IDA_TIPOSTIENDADataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnALBARANCREDITO = MyBase.Columns("ALBARANCREDITO")
            Me.columnARTICULOSDIRECTOS = MyBase.Columns("ARTICULOSDIRECTOS")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnCONREPER = MyBase.Columns("CONREPER")
            Me.columnCONVENCIM = MyBase.Columns("CONVENCIM")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnDESGLOSEPEDIDO = MyBase.Columns("DESGLOSEPEDIDO")
            Me.columnENVIARINVENTARIO = MyBase.Columns("ENVIARINVENTARIO")
            Me.columnFACTURADIARIA = MyBase.Columns("FACTURADIARIA")
            Me.columnGENERAALBARAN = MyBase.Columns("GENERAALBARAN")
            Me.columnGENERAFACTURA = MyBase.Columns("GENERAFACTURA")
            Me.columnIVAINCLUIDO = MyBase.Columns("IVAINCLUIDO")
            Me.columnPEDIDOMANUAL = MyBase.Columns("PEDIDOMANUAL")
            Me.columnRECIBECOMPRAS = MyBase.Columns("RECIBECOMPRAS")
            Me.columnRECIBETICKETS = MyBase.Columns("RECIBETICKETS")
            Me.columnSERIEALBARAN = MyBase.Columns("SERIEALBARAN")
            Me.columnSERIEALBCREDITO = MyBase.Columns("SERIEALBCREDITO")
            Me.columnSERIECOMPRAS = MyBase.Columns("SERIECOMPRAS")
            Me.columnSERIEDESTINO = MyBase.Columns("SERIEDESTINO")
            Me.columnSERIEFACTURA = MyBase.Columns("SERIEFACTURA")
            Me.columnSERIEPEDIDO = MyBase.Columns("SERIEPEDIDO")
            Me.columnTIPOCONTALBARAN = MyBase.Columns("TIPOCONTALBARAN")
            Me.columnTIPOCONTALBCREDITO = MyBase.Columns("TIPOCONTALBCREDITO")
            Me.columnTIPOCONTCOMPRAS = MyBase.Columns("TIPOCONTCOMPRAS")
            Me.columnTIPOCONTDESTINO = MyBase.Columns("TIPOCONTDESTINO")
            Me.columnTIPOCONTFACTURA = MyBase.Columns("TIPOCONTFACTURA")
            Me.columnTIPOCONTPEDIDO = MyBase.Columns("TIPOCONTPEDIDO")
            Me.columnTIPODOCUDESTINO = MyBase.Columns("TIPODOCUDESTINO")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnALBARANCREDITO = New Global.System.Data.DataColumn("ALBARANCREDITO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALBARANCREDITO)
            Me.columnARTICULOSDIRECTOS = New Global.System.Data.DataColumn("ARTICULOSDIRECTOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnARTICULOSDIRECTOS)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnCONREPER = New Global.System.Data.DataColumn("CONREPER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONREPER)
            Me.columnCONVENCIM = New Global.System.Data.DataColumn("CONVENCIM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONVENCIM)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnDESGLOSEPEDIDO = New Global.System.Data.DataColumn("DESGLOSEPEDIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESGLOSEPEDIDO)
            Me.columnENVIARINVENTARIO = New Global.System.Data.DataColumn("ENVIARINVENTARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENVIARINVENTARIO)
            Me.columnFACTURADIARIA = New Global.System.Data.DataColumn("FACTURADIARIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFACTURADIARIA)
            Me.columnGENERAALBARAN = New Global.System.Data.DataColumn("GENERAALBARAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGENERAALBARAN)
            Me.columnGENERAFACTURA = New Global.System.Data.DataColumn("GENERAFACTURA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGENERAFACTURA)
            Me.columnIVAINCLUIDO = New Global.System.Data.DataColumn("IVAINCLUIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVAINCLUIDO)
            Me.columnPEDIDOMANUAL = New Global.System.Data.DataColumn("PEDIDOMANUAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPEDIDOMANUAL)
            Me.columnRECIBECOMPRAS = New Global.System.Data.DataColumn("RECIBECOMPRAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECIBECOMPRAS)
            Me.columnRECIBETICKETS = New Global.System.Data.DataColumn("RECIBETICKETS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECIBETICKETS)
            Me.columnSERIEALBARAN = New Global.System.Data.DataColumn("SERIEALBARAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIEALBARAN)
            Me.columnSERIEALBCREDITO = New Global.System.Data.DataColumn("SERIEALBCREDITO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIEALBCREDITO)
            Me.columnSERIECOMPRAS = New Global.System.Data.DataColumn("SERIECOMPRAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIECOMPRAS)
            Me.columnSERIEDESTINO = New Global.System.Data.DataColumn("SERIEDESTINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIEDESTINO)
            Me.columnSERIEFACTURA = New Global.System.Data.DataColumn("SERIEFACTURA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIEFACTURA)
            Me.columnSERIEPEDIDO = New Global.System.Data.DataColumn("SERIEPEDIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERIEPEDIDO)
            Me.columnTIPOCONTALBARAN = New Global.System.Data.DataColumn("TIPOCONTALBARAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOCONTALBARAN)
            Me.columnTIPOCONTALBCREDITO = New Global.System.Data.DataColumn("TIPOCONTALBCREDITO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOCONTALBCREDITO)
            Me.columnTIPOCONTCOMPRAS = New Global.System.Data.DataColumn("TIPOCONTCOMPRAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOCONTCOMPRAS)
            Me.columnTIPOCONTDESTINO = New Global.System.Data.DataColumn("TIPOCONTDESTINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOCONTDESTINO)
            Me.columnTIPOCONTFACTURA = New Global.System.Data.DataColumn("TIPOCONTFACTURA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOCONTFACTURA)
            Me.columnTIPOCONTPEDIDO = New Global.System.Data.DataColumn("TIPOCONTPEDIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOCONTPEDIDO)
            Me.columnTIPODOCUDESTINO = New Global.System.Data.DataColumn("TIPODOCUDESTINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPODOCUDESTINO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODIGO}, True))
            Me.columnALBARANCREDITO.MaxLength = 1
            Me.columnARTICULOSDIRECTOS.MaxLength = 1
            Me.columnCODIGO.AllowDBNull = False
            Me.columnCODIGO.Unique = True
            Me.columnCODIGO.MaxLength = 8
            Me.columnCONREPER.MaxLength = 1
            Me.columnCONVENCIM.MaxLength = 1
            Me.columnDESCRIPCION.MaxLength = 50
            Me.columnDESGLOSEPEDIDO.MaxLength = 1
            Me.columnENVIARINVENTARIO.MaxLength = 1
            Me.columnFACTURADIARIA.MaxLength = 1
            Me.columnGENERAALBARAN.MaxLength = 1
            Me.columnGENERAFACTURA.MaxLength = 1
            Me.columnIVAINCLUIDO.MaxLength = 1
            Me.columnPEDIDOMANUAL.MaxLength = 1
            Me.columnRECIBECOMPRAS.MaxLength = 1
            Me.columnRECIBETICKETS.MaxLength = 1
            Me.columnSERIEALBARAN.MaxLength = 8
            Me.columnSERIEALBCREDITO.MaxLength = 8
            Me.columnSERIECOMPRAS.MaxLength = 8
            Me.columnSERIEDESTINO.MaxLength = 8
            Me.columnSERIEFACTURA.MaxLength = 8
            Me.columnSERIEPEDIDO.MaxLength = 8
            Me.columnTIPOCONTALBARAN.MaxLength = 3
            Me.columnTIPOCONTALBCREDITO.MaxLength = 3
            Me.columnTIPOCONTCOMPRAS.MaxLength = 3
            Me.columnTIPOCONTDESTINO.MaxLength = 3
            Me.columnTIPOCONTFACTURA.MaxLength = 3
            Me.columnTIPOCONTPEDIDO.MaxLength = 3
            Me.columnTIPODOCUDESTINO.MaxLength = 8
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewIDA_TIPOSTIENDARow() As IDA_TIPOSTIENDARow
            Return CType(Me.NewRow, IDA_TIPOSTIENDARow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IDA_TIPOSTIENDARow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IDA_TIPOSTIENDARow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IDA_TIPOSTIENDARowChangedEvent) Is Nothing) Then
                RaiseEvent IDA_TIPOSTIENDARowChanged(Me, New IDA_TIPOSTIENDARowChangeEvent(CType(e.Row, IDA_TIPOSTIENDARow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IDA_TIPOSTIENDARowChangingEvent) Is Nothing) Then
                RaiseEvent IDA_TIPOSTIENDARowChanging(Me, New IDA_TIPOSTIENDARowChangeEvent(CType(e.Row, IDA_TIPOSTIENDARow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IDA_TIPOSTIENDARowDeletedEvent) Is Nothing) Then
                RaiseEvent IDA_TIPOSTIENDARowDeleted(Me, New IDA_TIPOSTIENDARowChangeEvent(CType(e.Row, IDA_TIPOSTIENDARow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IDA_TIPOSTIENDARowDeletingEvent) Is Nothing) Then
                RaiseEvent IDA_TIPOSTIENDARowDeleting(Me, New IDA_TIPOSTIENDARowChangeEvent(CType(e.Row, IDA_TIPOSTIENDARow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveIDA_TIPOSTIENDARow(ByVal row As IDA_TIPOSTIENDARow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTiendas = New dsTiendas()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IDA_TIPOSTIENDADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TIENDASRow
        Inherits Global.System.Data.DataRow

        Private tableTIENDAS As TIENDASDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTIENDAS = CType(Me.Table, TIENDASDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODALM() As String
            Get
                Return CType(Me(Me.tableTIENDAS.CODALMColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.CODALMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESCALM() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.DESCALMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESCALM' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.DESCALMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ALBARANCREDITO() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.ALBARANCREDITOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALBARANCREDITO' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.ALBARANCREDITOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONREPER() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.CONREPERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONREPER' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.CONREPERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONVENCIM() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.CONVENCIMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONVENCIM' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.CONVENCIMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESCRIPCION() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.DESCRIPCIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESCRIPCION' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.DESCRIPCIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESGLOSEPEDIDO() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.DESGLOSEPEDIDOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESGLOSEPEDIDO' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.DESGLOSEPEDIDOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ENVIARINVENTARIO() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.ENVIARINVENTARIOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENVIARINVENTARIO' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.ENVIARINVENTARIOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FACTURADIARIA() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.FACTURADIARIAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FACTURADIARIA' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.FACTURADIARIAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GENERAALBARAN() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.GENERAALBARANColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'GENERAALBARAN' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.GENERAALBARANColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GENERAFACTURA() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.GENERAFACTURAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'GENERAFACTURA' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.GENERAFACTURAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PEDIDOMANUAL() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.PEDIDOMANUALColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PEDIDOMANUAL' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.PEDIDOMANUALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RECIBECOMPRAS() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.RECIBECOMPRASColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RECIBECOMPRAS' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.RECIBECOMPRASColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RECIBETICKETS() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.RECIBETICKETSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RECIBETICKETS' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.RECIBETICKETSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERIEALBARAN() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.SERIEALBARANColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SERIEALBARAN' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.SERIEALBARANColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERIEALBCREDITO() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.SERIEALBCREDITOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SERIEALBCREDITO' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.SERIEALBCREDITOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERIECOMPRAS() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.SERIECOMPRASColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SERIECOMPRAS' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.SERIECOMPRASColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERIEDESTINO() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.SERIEDESTINOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SERIEDESTINO' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.SERIEDESTINOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERIEFACTURA() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.SERIEFACTURAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SERIEFACTURA' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.SERIEFACTURAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERIEPEDIDO() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.SERIEPEDIDOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SERIEPEDIDO' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.SERIEPEDIDOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPOCONTALBARAN() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.TIPOCONTALBARANColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOCONTALBARAN' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.TIPOCONTALBARANColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPOCONTALBCREDITO() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.TIPOCONTALBCREDITOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOCONTALBCREDITO' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.TIPOCONTALBCREDITOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPOCONTCOMPRAS() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.TIPOCONTCOMPRASColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOCONTCOMPRAS' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.TIPOCONTCOMPRASColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPOCONTDESTINO() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.TIPOCONTDESTINOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOCONTDESTINO' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.TIPOCONTDESTINOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPOCONTFACTURA() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.TIPOCONTFACTURAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOCONTFACTURA' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.TIPOCONTFACTURAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPOCONTPEDIDO() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.TIPOCONTPEDIDOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOCONTPEDIDO' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.TIPOCONTPEDIDOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_CODCLI() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_CODCLIColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_CODCLI' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_CODCLIColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_DESCDEPOSITO() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_DESCDEPOSITOColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_DESCDEPOSITO' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableTIENDAS.IDA_DESCDEPOSITOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_TIPOTIENDA() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_TIPOTIENDAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_TIPOTIENDA' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_TIPOTIENDAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_COMUNICACION() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_COMUNICACIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_COMUNICACION' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_COMUNICACIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_CTAABONOENVASES() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_CTAABONOENVASESColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_CTAABONOENVASES' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_CTAABONOENVASESColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_CTACOBROSCLIENTE() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_CTACOBROSCLIENTEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_CTACOBROSCLIENTE' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_CTACOBROSCLIENTEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_CTAEFECTIVO() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_CTAEFECTIVOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_CTAEFECTIVO' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_CTAEFECTIVOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_CTAPAGOSPROVEEDOR() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_CTAPAGOSPROVEEDORColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_CTAPAGOSPROVEEDOR' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_CTAPAGOSPROVEEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_CTAPENDIENTECOBRO() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_CTAPENDIENTECOBROColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_CTAPENDIENTECOBRO' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_CTAPENDIENTECOBROColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_CTATALON() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_CTATALONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_CTATALON' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_CTATALONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_CTATARJETA() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_CTATARJETAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_CTATARJETA' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_CTATARJETAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_CTAVALESCOBRADOS() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_CTAVALESCOBRADOSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_CTAVALESCOBRADOS' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_CTAVALESCOBRADOSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_CTAVALESPROPIOS() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_CTAVALESPROPIOSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_CTAVALESPROPIOS' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_CTAVALESPROPIOSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_CTAVALESPROVEEDOR() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_CTAVALESPROVEEDORColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_CTAVALESPROVEEDOR' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_CTAVALESPROVEEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_TIPOTERMINAL() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_TIPOTERMINALColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_TIPOTERMINAL' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_TIPOTERMINALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IVAINCLUIDO() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IVAINCLUIDOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IVAINCLUIDO' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IVAINCLUIDOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TARIFA() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.TARIFAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TARIFA' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.TARIFAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CENTROCOSTE() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.CENTROCOSTEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CENTROCOSTE' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.CENTROCOSTEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INTEXT() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.INTEXTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INTEXT' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.INTEXTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPODOCUDESTINO() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.TIPODOCUDESTINOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPODOCUDESTINO' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.TIPODOCUDESTINOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AVISO0() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.AVISO0Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AVISO0' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.AVISO0Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AVISOMAX() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.AVISOMAXColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AVISOMAX' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.AVISOMAXColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AVISOMIN() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.AVISOMINColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AVISOMIN' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.AVISOMINColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AVISOSTOCKPREVISTO0() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.AVISOSTOCKPREVISTO0Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AVISOSTOCKPREVISTO0' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.AVISOSTOCKPREVISTO0Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AVISOSTOCKPREVISTOMAX() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.AVISOSTOCKPREVISTOMAXColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AVISOSTOCKPREVISTOMAX' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.AVISOSTOCKPREVISTOMAXColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AVISOSTOCKPREVISTOMIN() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.AVISOSTOCKPREVISTOMINColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AVISOSTOCKPREVISTOMIN' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.AVISOSTOCKPREVISTOMINColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CIM() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.CIMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CIM' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.CIMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODGRUPOALMACEN() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.CODGRUPOALMACENColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODGRUPOALMACEN' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.CODGRUPOALMACENColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODPAIS() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.CODPAISColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODPAIS' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.CODPAISColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODPROVI() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.CODPROVIColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODPROVI' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.CODPROVIColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DIRALM() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.DIRALMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DIRALM' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.DIRALMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DTOALM() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.DTOALMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DTOALM' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.DTOALMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property E_MAIL() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.E_MAILColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'E_MAIL' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.E_MAILColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ENCARGADO() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.ENCARGADOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENCARGADO' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.ENCARGADOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FAXALM() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.FAXALMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FAXALM' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.FAXALMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OBSALM() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.OBSALMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OBSALM' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.OBSALMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property POBALM() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.POBALMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'POBALM' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.POBALMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STOCKNEG() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.STOCKNEGColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'STOCKNEG' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.STOCKNEGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TEL2ALM() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.TEL2ALMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TEL2ALM' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.TEL2ALMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TELALM() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.TELALMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELALM' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.TELALMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_CODCLIPED() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_CODCLIPEDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_CODCLIPED' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_CODCLIPEDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ARTICULOSDIRECTOS() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.ARTICULOSDIRECTOSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ARTICULOSDIRECTOS' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.ARTICULOSDIRECTOSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODIGO() As String
            Get
                Return CType(Me(Me.tableTIENDAS.CODIGOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.CODIGOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_CTABANCO() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_CTABANCOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_CTABANCO' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_CTABANCOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_CTAVALESCLIENTE() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_CTAVALESCLIENTEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_CTAVALESCLIENTE' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_CTAVALESCLIENTEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_SERIEFRA1() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_SERIEFRA1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_SERIEFRA1' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_SERIEFRA1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_SERIEFRA2() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_SERIEFRA2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_SERIEFRA2' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_SERIEFRA2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_TIPOCONTFRA1() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_TIPOCONTFRA1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_TIPOCONTFRA1' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_TIPOCONTFRA1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_TIPOCONTFRA2() As String
            Get
                Try
                    Return CType(Me(Me.tableTIENDAS.IDA_TIPOCONTFRA2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDA_TIPOCONTFRA2' de la tabla 'TIENDAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTIENDAS.IDA_TIPOCONTFRA2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESCALMNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.DESCALMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESCALMNull()
            Me(Me.tableTIENDAS.DESCALMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsALBARANCREDITONull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.ALBARANCREDITOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetALBARANCREDITONull()
            Me(Me.tableTIENDAS.ALBARANCREDITOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONREPERNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.CONREPERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONREPERNull()
            Me(Me.tableTIENDAS.CONREPERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONVENCIMNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.CONVENCIMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONVENCIMNull()
            Me(Me.tableTIENDAS.CONVENCIMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESCRIPCIONNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.DESCRIPCIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESCRIPCIONNull()
            Me(Me.tableTIENDAS.DESCRIPCIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESGLOSEPEDIDONull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.DESGLOSEPEDIDOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESGLOSEPEDIDONull()
            Me(Me.tableTIENDAS.DESGLOSEPEDIDOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsENVIARINVENTARIONull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.ENVIARINVENTARIOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetENVIARINVENTARIONull()
            Me(Me.tableTIENDAS.ENVIARINVENTARIOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFACTURADIARIANull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.FACTURADIARIAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFACTURADIARIANull()
            Me(Me.tableTIENDAS.FACTURADIARIAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGENERAALBARANNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.GENERAALBARANColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGENERAALBARANNull()
            Me(Me.tableTIENDAS.GENERAALBARANColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGENERAFACTURANull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.GENERAFACTURAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGENERAFACTURANull()
            Me(Me.tableTIENDAS.GENERAFACTURAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPEDIDOMANUALNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.PEDIDOMANUALColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPEDIDOMANUALNull()
            Me(Me.tableTIENDAS.PEDIDOMANUALColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRECIBECOMPRASNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.RECIBECOMPRASColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRECIBECOMPRASNull()
            Me(Me.tableTIENDAS.RECIBECOMPRASColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRECIBETICKETSNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.RECIBETICKETSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRECIBETICKETSNull()
            Me(Me.tableTIENDAS.RECIBETICKETSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSERIEALBARANNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.SERIEALBARANColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSERIEALBARANNull()
            Me(Me.tableTIENDAS.SERIEALBARANColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSERIEALBCREDITONull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.SERIEALBCREDITOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSERIEALBCREDITONull()
            Me(Me.tableTIENDAS.SERIEALBCREDITOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSERIECOMPRASNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.SERIECOMPRASColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSERIECOMPRASNull()
            Me(Me.tableTIENDAS.SERIECOMPRASColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSERIEDESTINONull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.SERIEDESTINOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSERIEDESTINONull()
            Me(Me.tableTIENDAS.SERIEDESTINOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSERIEFACTURANull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.SERIEFACTURAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSERIEFACTURANull()
            Me(Me.tableTIENDAS.SERIEFACTURAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSERIEPEDIDONull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.SERIEPEDIDOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSERIEPEDIDONull()
            Me(Me.tableTIENDAS.SERIEPEDIDOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPOCONTALBARANNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.TIPOCONTALBARANColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPOCONTALBARANNull()
            Me(Me.tableTIENDAS.TIPOCONTALBARANColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPOCONTALBCREDITONull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.TIPOCONTALBCREDITOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPOCONTALBCREDITONull()
            Me(Me.tableTIENDAS.TIPOCONTALBCREDITOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPOCONTCOMPRASNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.TIPOCONTCOMPRASColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPOCONTCOMPRASNull()
            Me(Me.tableTIENDAS.TIPOCONTCOMPRASColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPOCONTDESTINONull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.TIPOCONTDESTINOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPOCONTDESTINONull()
            Me(Me.tableTIENDAS.TIPOCONTDESTINOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPOCONTFACTURANull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.TIPOCONTFACTURAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPOCONTFACTURANull()
            Me(Me.tableTIENDAS.TIPOCONTFACTURAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPOCONTPEDIDONull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.TIPOCONTPEDIDOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPOCONTPEDIDONull()
            Me(Me.tableTIENDAS.TIPOCONTPEDIDOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_CODCLINull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_CODCLIColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_CODCLINull()
            Me(Me.tableTIENDAS.IDA_CODCLIColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_DESCDEPOSITONull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_DESCDEPOSITOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_DESCDEPOSITONull()
            Me(Me.tableTIENDAS.IDA_DESCDEPOSITOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_TIPOTIENDANull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_TIPOTIENDAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_TIPOTIENDANull()
            Me(Me.tableTIENDAS.IDA_TIPOTIENDAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_COMUNICACIONNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_COMUNICACIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_COMUNICACIONNull()
            Me(Me.tableTIENDAS.IDA_COMUNICACIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_CTAABONOENVASESNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_CTAABONOENVASESColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_CTAABONOENVASESNull()
            Me(Me.tableTIENDAS.IDA_CTAABONOENVASESColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_CTACOBROSCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_CTACOBROSCLIENTEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_CTACOBROSCLIENTENull()
            Me(Me.tableTIENDAS.IDA_CTACOBROSCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_CTAEFECTIVONull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_CTAEFECTIVOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_CTAEFECTIVONull()
            Me(Me.tableTIENDAS.IDA_CTAEFECTIVOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_CTAPAGOSPROVEEDORNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_CTAPAGOSPROVEEDORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_CTAPAGOSPROVEEDORNull()
            Me(Me.tableTIENDAS.IDA_CTAPAGOSPROVEEDORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_CTAPENDIENTECOBRONull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_CTAPENDIENTECOBROColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_CTAPENDIENTECOBRONull()
            Me(Me.tableTIENDAS.IDA_CTAPENDIENTECOBROColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_CTATALONNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_CTATALONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_CTATALONNull()
            Me(Me.tableTIENDAS.IDA_CTATALONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_CTATARJETANull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_CTATARJETAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_CTATARJETANull()
            Me(Me.tableTIENDAS.IDA_CTATARJETAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_CTAVALESCOBRADOSNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_CTAVALESCOBRADOSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_CTAVALESCOBRADOSNull()
            Me(Me.tableTIENDAS.IDA_CTAVALESCOBRADOSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_CTAVALESPROPIOSNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_CTAVALESPROPIOSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_CTAVALESPROPIOSNull()
            Me(Me.tableTIENDAS.IDA_CTAVALESPROPIOSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_CTAVALESPROVEEDORNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_CTAVALESPROVEEDORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_CTAVALESPROVEEDORNull()
            Me(Me.tableTIENDAS.IDA_CTAVALESPROVEEDORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_TIPOTERMINALNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_TIPOTERMINALColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_TIPOTERMINALNull()
            Me(Me.tableTIENDAS.IDA_TIPOTERMINALColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIVAINCLUIDONull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IVAINCLUIDOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIVAINCLUIDONull()
            Me(Me.tableTIENDAS.IVAINCLUIDOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTARIFANull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.TARIFAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTARIFANull()
            Me(Me.tableTIENDAS.TARIFAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCENTROCOSTENull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.CENTROCOSTEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCENTROCOSTENull()
            Me(Me.tableTIENDAS.CENTROCOSTEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsINTEXTNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.INTEXTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetINTEXTNull()
            Me(Me.tableTIENDAS.INTEXTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPODOCUDESTINONull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.TIPODOCUDESTINOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPODOCUDESTINONull()
            Me(Me.tableTIENDAS.TIPODOCUDESTINOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAVISO0Null() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.AVISO0Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAVISO0Null()
            Me(Me.tableTIENDAS.AVISO0Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAVISOMAXNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.AVISOMAXColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAVISOMAXNull()
            Me(Me.tableTIENDAS.AVISOMAXColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAVISOMINNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.AVISOMINColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAVISOMINNull()
            Me(Me.tableTIENDAS.AVISOMINColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAVISOSTOCKPREVISTO0Null() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.AVISOSTOCKPREVISTO0Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAVISOSTOCKPREVISTO0Null()
            Me(Me.tableTIENDAS.AVISOSTOCKPREVISTO0Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAVISOSTOCKPREVISTOMAXNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.AVISOSTOCKPREVISTOMAXColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAVISOSTOCKPREVISTOMAXNull()
            Me(Me.tableTIENDAS.AVISOSTOCKPREVISTOMAXColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAVISOSTOCKPREVISTOMINNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.AVISOSTOCKPREVISTOMINColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAVISOSTOCKPREVISTOMINNull()
            Me(Me.tableTIENDAS.AVISOSTOCKPREVISTOMINColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCIMNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.CIMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCIMNull()
            Me(Me.tableTIENDAS.CIMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCODGRUPOALMACENNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.CODGRUPOALMACENColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCODGRUPOALMACENNull()
            Me(Me.tableTIENDAS.CODGRUPOALMACENColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCODPAISNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.CODPAISColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCODPAISNull()
            Me(Me.tableTIENDAS.CODPAISColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCODPROVINull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.CODPROVIColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCODPROVINull()
            Me(Me.tableTIENDAS.CODPROVIColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDIRALMNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.DIRALMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDIRALMNull()
            Me(Me.tableTIENDAS.DIRALMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDTOALMNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.DTOALMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDTOALMNull()
            Me(Me.tableTIENDAS.DTOALMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsE_MAILNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.E_MAILColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetE_MAILNull()
            Me(Me.tableTIENDAS.E_MAILColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsENCARGADONull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.ENCARGADOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetENCARGADONull()
            Me(Me.tableTIENDAS.ENCARGADOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFAXALMNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.FAXALMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFAXALMNull()
            Me(Me.tableTIENDAS.FAXALMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOBSALMNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.OBSALMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOBSALMNull()
            Me(Me.tableTIENDAS.OBSALMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPOBALMNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.POBALMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPOBALMNull()
            Me(Me.tableTIENDAS.POBALMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTOCKNEGNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.STOCKNEGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTOCKNEGNull()
            Me(Me.tableTIENDAS.STOCKNEGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTEL2ALMNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.TEL2ALMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTEL2ALMNull()
            Me(Me.tableTIENDAS.TEL2ALMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTELALMNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.TELALMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTELALMNull()
            Me(Me.tableTIENDAS.TELALMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_CODCLIPEDNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_CODCLIPEDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_CODCLIPEDNull()
            Me(Me.tableTIENDAS.IDA_CODCLIPEDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsARTICULOSDIRECTOSNull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.ARTICULOSDIRECTOSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetARTICULOSDIRECTOSNull()
            Me(Me.tableTIENDAS.ARTICULOSDIRECTOSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_CTABANCONull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_CTABANCOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_CTABANCONull()
            Me(Me.tableTIENDAS.IDA_CTABANCOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_CTAVALESCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_CTAVALESCLIENTEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_CTAVALESCLIENTENull()
            Me(Me.tableTIENDAS.IDA_CTAVALESCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_SERIEFRA1Null() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_SERIEFRA1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_SERIEFRA1Null()
            Me(Me.tableTIENDAS.IDA_SERIEFRA1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_SERIEFRA2Null() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_SERIEFRA2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_SERIEFRA2Null()
            Me(Me.tableTIENDAS.IDA_SERIEFRA2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_TIPOCONTFRA1Null() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_TIPOCONTFRA1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_TIPOCONTFRA1Null()
            Me(Me.tableTIENDAS.IDA_TIPOCONTFRA1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDA_TIPOCONTFRA2Null() As Boolean
            Return Me.IsNull(Me.tableTIENDAS.IDA_TIPOCONTFRA2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDA_TIPOCONTFRA2Null()
            Me(Me.tableTIENDAS.IDA_TIPOCONTFRA2Column) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IDA_TIPOSTIENDARow
        Inherits Global.System.Data.DataRow

        Private tableIDA_TIPOSTIENDA As IDA_TIPOSTIENDADataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIDA_TIPOSTIENDA = CType(Me.Table, IDA_TIPOSTIENDADataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ALBARANCREDITO() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.ALBARANCREDITOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALBARANCREDITO' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.ALBARANCREDITOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ARTICULOSDIRECTOS() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.ARTICULOSDIRECTOSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ARTICULOSDIRECTOS' de la tabla 'IDA_TIPOSTIENDA' es DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.ARTICULOSDIRECTOSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODIGO() As String
            Get
                Return CType(Me(Me.tableIDA_TIPOSTIENDA.CODIGOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.CODIGOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONREPER() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.CONREPERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONREPER' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.CONREPERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONVENCIM() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.CONVENCIMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONVENCIM' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.CONVENCIMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESCRIPCION() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.DESCRIPCIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESCRIPCION' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.DESCRIPCIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESGLOSEPEDIDO() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.DESGLOSEPEDIDOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESGLOSEPEDIDO' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.DESGLOSEPEDIDOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ENVIARINVENTARIO() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.ENVIARINVENTARIOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENVIARINVENTARIO' de la tabla 'IDA_TIPOSTIENDA' es DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.ENVIARINVENTARIOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FACTURADIARIA() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.FACTURADIARIAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FACTURADIARIA' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.FACTURADIARIAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GENERAALBARAN() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.GENERAALBARANColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'GENERAALBARAN' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.GENERAALBARANColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GENERAFACTURA() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.GENERAFACTURAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'GENERAFACTURA' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.GENERAFACTURAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IVAINCLUIDO() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.IVAINCLUIDOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IVAINCLUIDO' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.IVAINCLUIDOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PEDIDOMANUAL() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.PEDIDOMANUALColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PEDIDOMANUAL' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.PEDIDOMANUALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RECIBECOMPRAS() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.RECIBECOMPRASColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RECIBECOMPRAS' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.RECIBECOMPRASColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RECIBETICKETS() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.RECIBETICKETSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RECIBETICKETS' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.RECIBETICKETSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERIEALBARAN() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.SERIEALBARANColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SERIEALBARAN' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.SERIEALBARANColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERIEALBCREDITO() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.SERIEALBCREDITOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SERIEALBCREDITO' de la tabla 'IDA_TIPOSTIENDA' es DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.SERIEALBCREDITOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERIECOMPRAS() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.SERIECOMPRASColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SERIECOMPRAS' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.SERIECOMPRASColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERIEDESTINO() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.SERIEDESTINOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SERIEDESTINO' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.SERIEDESTINOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERIEFACTURA() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.SERIEFACTURAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SERIEFACTURA' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.SERIEFACTURAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SERIEPEDIDO() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.SERIEPEDIDOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SERIEPEDIDO' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.SERIEPEDIDOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPOCONTALBARAN() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTALBARANColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOCONTALBARAN' de la tabla 'IDA_TIPOSTIENDA' es DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTALBARANColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPOCONTALBCREDITO() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTALBCREDITOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOCONTALBCREDITO' de la tabla 'IDA_TIPOSTIENDA' es DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTALBCREDITOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPOCONTCOMPRAS() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTCOMPRASColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOCONTCOMPRAS' de la tabla 'IDA_TIPOSTIENDA' es DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTCOMPRASColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPOCONTDESTINO() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTDESTINOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOCONTDESTINO' de la tabla 'IDA_TIPOSTIENDA' es DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTDESTINOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPOCONTFACTURA() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTFACTURAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOCONTFACTURA' de la tabla 'IDA_TIPOSTIENDA' es DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTFACTURAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPOCONTPEDIDO() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTPEDIDOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOCONTPEDIDO' de la tabla 'IDA_TIPOSTIENDA' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTPEDIDOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPODOCUDESTINO() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TIPOSTIENDA.TIPODOCUDESTINOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPODOCUDESTINO' de la tabla 'IDA_TIPOSTIENDA' es DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TIPOSTIENDA.TIPODOCUDESTINOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsALBARANCREDITONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.ALBARANCREDITOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetALBARANCREDITONull()
            Me(Me.tableIDA_TIPOSTIENDA.ALBARANCREDITOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsARTICULOSDIRECTOSNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.ARTICULOSDIRECTOSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetARTICULOSDIRECTOSNull()
            Me(Me.tableIDA_TIPOSTIENDA.ARTICULOSDIRECTOSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONREPERNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.CONREPERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONREPERNull()
            Me(Me.tableIDA_TIPOSTIENDA.CONREPERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONVENCIMNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.CONVENCIMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONVENCIMNull()
            Me(Me.tableIDA_TIPOSTIENDA.CONVENCIMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESCRIPCIONNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.DESCRIPCIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESCRIPCIONNull()
            Me(Me.tableIDA_TIPOSTIENDA.DESCRIPCIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESGLOSEPEDIDONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.DESGLOSEPEDIDOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESGLOSEPEDIDONull()
            Me(Me.tableIDA_TIPOSTIENDA.DESGLOSEPEDIDOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsENVIARINVENTARIONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.ENVIARINVENTARIOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetENVIARINVENTARIONull()
            Me(Me.tableIDA_TIPOSTIENDA.ENVIARINVENTARIOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFACTURADIARIANull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.FACTURADIARIAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFACTURADIARIANull()
            Me(Me.tableIDA_TIPOSTIENDA.FACTURADIARIAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGENERAALBARANNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.GENERAALBARANColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGENERAALBARANNull()
            Me(Me.tableIDA_TIPOSTIENDA.GENERAALBARANColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGENERAFACTURANull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.GENERAFACTURAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGENERAFACTURANull()
            Me(Me.tableIDA_TIPOSTIENDA.GENERAFACTURAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIVAINCLUIDONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.IVAINCLUIDOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIVAINCLUIDONull()
            Me(Me.tableIDA_TIPOSTIENDA.IVAINCLUIDOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPEDIDOMANUALNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.PEDIDOMANUALColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPEDIDOMANUALNull()
            Me(Me.tableIDA_TIPOSTIENDA.PEDIDOMANUALColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRECIBECOMPRASNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.RECIBECOMPRASColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRECIBECOMPRASNull()
            Me(Me.tableIDA_TIPOSTIENDA.RECIBECOMPRASColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRECIBETICKETSNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.RECIBETICKETSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRECIBETICKETSNull()
            Me(Me.tableIDA_TIPOSTIENDA.RECIBETICKETSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSERIEALBARANNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.SERIEALBARANColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSERIEALBARANNull()
            Me(Me.tableIDA_TIPOSTIENDA.SERIEALBARANColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSERIEALBCREDITONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.SERIEALBCREDITOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSERIEALBCREDITONull()
            Me(Me.tableIDA_TIPOSTIENDA.SERIEALBCREDITOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSERIECOMPRASNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.SERIECOMPRASColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSERIECOMPRASNull()
            Me(Me.tableIDA_TIPOSTIENDA.SERIECOMPRASColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSERIEDESTINONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.SERIEDESTINOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSERIEDESTINONull()
            Me(Me.tableIDA_TIPOSTIENDA.SERIEDESTINOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSERIEFACTURANull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.SERIEFACTURAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSERIEFACTURANull()
            Me(Me.tableIDA_TIPOSTIENDA.SERIEFACTURAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSERIEPEDIDONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.SERIEPEDIDOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSERIEPEDIDONull()
            Me(Me.tableIDA_TIPOSTIENDA.SERIEPEDIDOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPOCONTALBARANNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.TIPOCONTALBARANColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPOCONTALBARANNull()
            Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTALBARANColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPOCONTALBCREDITONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.TIPOCONTALBCREDITOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPOCONTALBCREDITONull()
            Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTALBCREDITOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPOCONTCOMPRASNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.TIPOCONTCOMPRASColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPOCONTCOMPRASNull()
            Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTCOMPRASColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPOCONTDESTINONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.TIPOCONTDESTINOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPOCONTDESTINONull()
            Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTDESTINOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPOCONTFACTURANull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.TIPOCONTFACTURAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPOCONTFACTURANull()
            Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTFACTURAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPOCONTPEDIDONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.TIPOCONTPEDIDOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPOCONTPEDIDONull()
            Me(Me.tableIDA_TIPOSTIENDA.TIPOCONTPEDIDOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPODOCUDESTINONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TIPOSTIENDA.TIPODOCUDESTINOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPODOCUDESTINONull()
            Me(Me.tableIDA_TIPOSTIENDA.TIPODOCUDESTINOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class TIENDASRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As TIENDASRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As TIENDASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As TIENDASRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class IDA_TIPOSTIENDARowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As IDA_TIPOSTIENDARow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As IDA_TIPOSTIENDARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As IDA_TIPOSTIENDARow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsTiendasTableAdapters

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class TIENDASTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TIENDAS"
            tableMapping.ColumnMappings.Add("CODALM", "CODALM")
            tableMapping.ColumnMappings.Add("DESCALM", "DESCALM")
            tableMapping.ColumnMappings.Add("ALBARANCREDITO", "ALBARANCREDITO")
            tableMapping.ColumnMappings.Add("CONREPER", "CONREPER")
            tableMapping.ColumnMappings.Add("CONVENCIM", "CONVENCIM")
            tableMapping.ColumnMappings.Add("DESCRIPCION", "DESCRIPCION")
            tableMapping.ColumnMappings.Add("DESGLOSEPEDIDO", "DESGLOSEPEDIDO")
            tableMapping.ColumnMappings.Add("ENVIARINVENTARIO", "ENVIARINVENTARIO")
            tableMapping.ColumnMappings.Add("FACTURADIARIA", "FACTURADIARIA")
            tableMapping.ColumnMappings.Add("GENERAALBARAN", "GENERAALBARAN")
            tableMapping.ColumnMappings.Add("GENERAFACTURA", "GENERAFACTURA")
            tableMapping.ColumnMappings.Add("PEDIDOMANUAL", "PEDIDOMANUAL")
            tableMapping.ColumnMappings.Add("RECIBECOMPRAS", "RECIBECOMPRAS")
            tableMapping.ColumnMappings.Add("RECIBETICKETS", "RECIBETICKETS")
            tableMapping.ColumnMappings.Add("SERIEALBARAN", "SERIEALBARAN")
            tableMapping.ColumnMappings.Add("SERIEALBCREDITO", "SERIEALBCREDITO")
            tableMapping.ColumnMappings.Add("SERIECOMPRAS", "SERIECOMPRAS")
            tableMapping.ColumnMappings.Add("SERIEDESTINO", "SERIEDESTINO")
            tableMapping.ColumnMappings.Add("SERIEFACTURA", "SERIEFACTURA")
            tableMapping.ColumnMappings.Add("SERIEPEDIDO", "SERIEPEDIDO")
            tableMapping.ColumnMappings.Add("TIPOCONTALBARAN", "TIPOCONTALBARAN")
            tableMapping.ColumnMappings.Add("TIPOCONTALBCREDITO", "TIPOCONTALBCREDITO")
            tableMapping.ColumnMappings.Add("TIPOCONTCOMPRAS", "TIPOCONTCOMPRAS")
            tableMapping.ColumnMappings.Add("TIPOCONTDESTINO", "TIPOCONTDESTINO")
            tableMapping.ColumnMappings.Add("TIPOCONTFACTURA", "TIPOCONTFACTURA")
            tableMapping.ColumnMappings.Add("TIPOCONTPEDIDO", "TIPOCONTPEDIDO")
            tableMapping.ColumnMappings.Add("IDA_CODCLI", "IDA_CODCLI")
            tableMapping.ColumnMappings.Add("IDA_DESCDEPOSITO", "IDA_DESCDEPOSITO")
            tableMapping.ColumnMappings.Add("IDA_TIPOTIENDA", "IDA_TIPOTIENDA")
            tableMapping.ColumnMappings.Add("IDA_COMUNICACION", "IDA_COMUNICACION")
            tableMapping.ColumnMappings.Add("IDA_CTAABONOENVASES", "IDA_CTAABONOENVASES")
            tableMapping.ColumnMappings.Add("IDA_CTACOBROSCLIENTE", "IDA_CTACOBROSCLIENTE")
            tableMapping.ColumnMappings.Add("IDA_CTAEFECTIVO", "IDA_CTAEFECTIVO")
            tableMapping.ColumnMappings.Add("IDA_CTAPAGOSPROVEEDOR", "IDA_CTAPAGOSPROVEEDOR")
            tableMapping.ColumnMappings.Add("IDA_CTAPENDIENTECOBRO", "IDA_CTAPENDIENTECOBRO")
            tableMapping.ColumnMappings.Add("IDA_CTATALON", "IDA_CTATALON")
            tableMapping.ColumnMappings.Add("IDA_CTATARJETA", "IDA_CTATARJETA")
            tableMapping.ColumnMappings.Add("IDA_CTAVALESCOBRADOS", "IDA_CTAVALESCOBRADOS")
            tableMapping.ColumnMappings.Add("IDA_CTAVALESPROPIOS", "IDA_CTAVALESPROPIOS")
            tableMapping.ColumnMappings.Add("IDA_CTAVALESPROVEEDOR", "IDA_CTAVALESPROVEEDOR")
            tableMapping.ColumnMappings.Add("IDA_TIPOTERMINAL", "IDA_TIPOTERMINAL")
            tableMapping.ColumnMappings.Add("IVAINCLUIDO", "IVAINCLUIDO")
            tableMapping.ColumnMappings.Add("INTEXT", "INTEXT")
            tableMapping.ColumnMappings.Add("TIPODOCUDESTINO", "TIPODOCUDESTINO")
            tableMapping.ColumnMappings.Add("AVISO0", "AVISO0")
            tableMapping.ColumnMappings.Add("AVISOMAX", "AVISOMAX")
            tableMapping.ColumnMappings.Add("AVISOMIN", "AVISOMIN")
            tableMapping.ColumnMappings.Add("AVISOSTOCKPREVISTO0", "AVISOSTOCKPREVISTO0")
            tableMapping.ColumnMappings.Add("AVISOSTOCKPREVISTOMAX", "AVISOSTOCKPREVISTOMAX")
            tableMapping.ColumnMappings.Add("AVISOSTOCKPREVISTOMIN", "AVISOSTOCKPREVISTOMIN")
            tableMapping.ColumnMappings.Add("CIM", "CIM")
            tableMapping.ColumnMappings.Add("CODGRUPOALMACEN", "CODGRUPOALMACEN")
            tableMapping.ColumnMappings.Add("CODPAIS", "CODPAIS")
            tableMapping.ColumnMappings.Add("CODPROVI", "CODPROVI")
            tableMapping.ColumnMappings.Add("DIRALM", "DIRALM")
            tableMapping.ColumnMappings.Add("DTOALM", "DTOALM")
            tableMapping.ColumnMappings.Add("E_MAIL", "E_MAIL")
            tableMapping.ColumnMappings.Add("ENCARGADO", "ENCARGADO")
            tableMapping.ColumnMappings.Add("FAXALM", "FAXALM")
            tableMapping.ColumnMappings.Add("OBSALM", "OBSALM")
            tableMapping.ColumnMappings.Add("POBALM", "POBALM")
            tableMapping.ColumnMappings.Add("STOCKNEG", "STOCKNEG")
            tableMapping.ColumnMappings.Add("TEL2ALM", "TEL2ALM")
            tableMapping.ColumnMappings.Add("TELALM", "TELALM")
            tableMapping.ColumnMappings.Add("IDA_CODCLIPED", "IDA_CODCLIPED")
            tableMapping.ColumnMappings.Add("ARTICULOSDIRECTOS", "ARTICULOSDIRECTOS")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("IDA_CTABANCO", "IDA_CTABANCO")
            tableMapping.ColumnMappings.Add("IDA_CTAVALESCLIENTE", "IDA_CTAVALESCLIENTE")
            tableMapping.ColumnMappings.Add("IDA_SERIEFRA1", "IDA_SERIEFRA1")
            tableMapping.ColumnMappings.Add("IDA_SERIEFRA2", "IDA_SERIEFRA2")
            tableMapping.ColumnMappings.Add("IDA_TIPOCONTFRA1", "IDA_TIPOCONTFRA1")
            tableMapping.ColumnMappings.Add("IDA_TIPOCONTFRA2", "IDA_TIPOCONTFRA2")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.a3ERP_AydaraTPV.Settings.Default.SqlConection
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        AVISO0, AVISOMAX, AVISOMIN, AVISOSTOCKPREVISTO0, AVISOSTOCKPREVISTO" & _
                "MAX, AVISOSTOCKPREVISTOMIN, CIM, CODALM, CODGRUPOALMACEN, CODPAIS, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "              CODPROVI, DESCALM, DIRALM, DTOALM, E_MAIL, ENCARGADO, FAXALM, INTE" & _
                "XT, OBSALM, POBALM, STOCKNEG, TEL2ALM, TELALM, IDA_CODCLI, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   " & _
                "      IDA_DESCDEPOSITO, IDA_TIPOTIENDA, IDA_COMUNICACION, IDA_CTAABONOENVASES, I" & _
                "DA_CTACOBROSCLIENTE, IDA_CTAEFECTIVO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         IDA_CTAPAGOSPRO" & _
                "VEEDOR, IDA_CTAPENDIENTECOBRO, IDA_CTATALON, IDA_CTATARJETA, IDA_CTAVALESCOBRADO" & _
                "S, IDA_CTAVALESPROPIOS, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         IDA_CTAVALESPROVEEDOR, IDA_TI" & _
                "POTERMINAL, IDA_CODCLIPED, ALBARANCREDITO, ARTICULOSDIRECTOS, CODIGO, CONREPER, " & _
                "CONVENCIM, DESCRIPCION, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         DESGLOSEPEDIDO, ENVIARINVENTA" & _
                "RIO, FACTURADIARIA, GENERAALBARAN, GENERAFACTURA, IVAINCLUIDO, PEDIDOMANUAL, REC" & _
                "IBECOMPRAS, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         RECIBETICKETS, SERIEALBARAN, SERIEALBCRED" & _
                "ITO, SERIECOMPRAS, SERIEDESTINO, SERIEFACTURA, SERIEPEDIDO, TIPOCONTALBARAN, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " " & _
                "                        TIPOCONTALBCREDITO, TIPOCONTCOMPRAS, TIPOCONTDESTINO, TI" & _
                "POCONTFACTURA, TIPOCONTPEDIDO, TIPODOCUDESTINO, IDA_CTABANCO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "         IDA_CTAVALESCLIENTE, IDA_SERIEFRA1, IDA_SERIEFRA2, IDA_TIPOCONTFRA1, ID" & _
                "A_TIPOCONTFRA2" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            IDA_TIENDAS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        ALBARANCREDITO, ARTICULOSDIRECTOS, AVISO0, AVISOMAX, AVISOMIN, AVIS" & _
                "OSTOCKPREVISTO0, AVISOSTOCKPREVISTOMAX, AVISOSTOCKPREVISTOMIN, CIM, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "               CODALM, CODGRUPOALMACEN, CODIGO, CODPAIS, CODPROVI, CONREPER, CON" & _
                "VENCIM, DESCALM, DESCRIPCION, DESGLOSEPEDIDO, DIRALM, DTOALM, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "         ENCARGADO, ENVIARINVENTARIO, E_MAIL, FACTURADIARIA, FAXALM, GENERAALBAR" & _
                "AN, GENERAFACTURA, IDA_CODCLI, IDA_COMUNICACION, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         IDA_" & _
                "CTAABONOENVASES, IDA_CTABANCO, IDA_CTACOBROSCLIENTE, IDA_CTAEFECTIVO, IDA_CTAPAG" & _
                "OSPROVEEDOR, IDA_CTAPENDIENTECOBRO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         IDA_CTATALON, IDA" & _
                "_CTATARJETA, IDA_CTAVALESCLIENTE, IDA_CTAVALESCOBRADOS, IDA_CTAVALESPROPIOS, IDA" & _
                "_CTAVALESPROVEEDOR, IDA_DESCDEPOSITO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         IDA_TIPOTERMINA" & _
                "L, IDA_TIPOTIENDA, INTEXT, IVAINCLUIDO, OBSALM, PEDIDOMANUAL, POBALM, RECIBECOMP" & _
                "RAS, RECIBETICKETS, SERIEALBARAN, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         SERIEALBCREDITO, SE" & _
                "RIECOMPRAS, SERIEDESTINO, SERIEFACTURA, SERIEPEDIDO, STOCKNEG, TEL2ALM, TELALM, " & _
                "TIPOCONTALBARAN, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         TIPOCONTALBCREDITO, TIPOCONTCOMPRAS," & _
                " TIPOCONTDESTINO, TIPOCONTFACTURA, TIPOCONTPEDIDO, TIPODOCUDESTINO, ISNULL(IDA_C" & _
                "ODCLIPED, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         IDA_CODCLI) AS IDA_CODCLIPED, IDA_SERIEFRA1" & _
                ", IDA_SERIEFRA2, IDA_TIPOCONTFRA1, IDA_TIPOCONTFRA2" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            IDA_TIENDAS" & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (CODALM = @CODALM)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODALM", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CODALM", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As dsTiendas.TIENDASDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillBy(ByVal dataTable As dsTiendas.TIENDASDataTable, ByVal CODALM As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (CODALM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODALM")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CODALM, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class IDA_TIPOSTIENDATableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "IDA_TIPOSTIENDA"
            tableMapping.ColumnMappings.Add("ALBARANCREDITO", "ALBARANCREDITO")
            tableMapping.ColumnMappings.Add("ARTICULOSDIRECTOS", "ARTICULOSDIRECTOS")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("CONREPER", "CONREPER")
            tableMapping.ColumnMappings.Add("CONVENCIM", "CONVENCIM")
            tableMapping.ColumnMappings.Add("DESCRIPCION", "DESCRIPCION")
            tableMapping.ColumnMappings.Add("DESGLOSEPEDIDO", "DESGLOSEPEDIDO")
            tableMapping.ColumnMappings.Add("ENVIARINVENTARIO", "ENVIARINVENTARIO")
            tableMapping.ColumnMappings.Add("FACTURADIARIA", "FACTURADIARIA")
            tableMapping.ColumnMappings.Add("GENERAALBARAN", "GENERAALBARAN")
            tableMapping.ColumnMappings.Add("GENERAFACTURA", "GENERAFACTURA")
            tableMapping.ColumnMappings.Add("IVAINCLUIDO", "IVAINCLUIDO")
            tableMapping.ColumnMappings.Add("PEDIDOMANUAL", "PEDIDOMANUAL")
            tableMapping.ColumnMappings.Add("RECIBECOMPRAS", "RECIBECOMPRAS")
            tableMapping.ColumnMappings.Add("RECIBETICKETS", "RECIBETICKETS")
            tableMapping.ColumnMappings.Add("SERIEALBARAN", "SERIEALBARAN")
            tableMapping.ColumnMappings.Add("SERIEALBCREDITO", "SERIEALBCREDITO")
            tableMapping.ColumnMappings.Add("SERIECOMPRAS", "SERIECOMPRAS")
            tableMapping.ColumnMappings.Add("SERIEDESTINO", "SERIEDESTINO")
            tableMapping.ColumnMappings.Add("SERIEFACTURA", "SERIEFACTURA")
            tableMapping.ColumnMappings.Add("SERIEPEDIDO", "SERIEPEDIDO")
            tableMapping.ColumnMappings.Add("TIPOCONTALBARAN", "TIPOCONTALBARAN")
            tableMapping.ColumnMappings.Add("TIPOCONTALBCREDITO", "TIPOCONTALBCREDITO")
            tableMapping.ColumnMappings.Add("TIPOCONTCOMPRAS", "TIPOCONTCOMPRAS")
            tableMapping.ColumnMappings.Add("TIPOCONTDESTINO", "TIPOCONTDESTINO")
            tableMapping.ColumnMappings.Add("TIPOCONTFACTURA", "TIPOCONTFACTURA")
            tableMapping.ColumnMappings.Add("TIPOCONTPEDIDO", "TIPOCONTPEDIDO")
            tableMapping.ColumnMappings.Add("TIPODOCUDESTINO", "TIPODOCUDESTINO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [IDA_TIPOSTIENDA] WHERE (((@IsNull_ALBARANCREDITO = 1 AND [ALBARANCRE" & _
                "DITO] IS NULL) OR ([ALBARANCREDITO] = @Original_ALBARANCREDITO)) AND ((@IsNull_A" & _
                "RTICULOSDIRECTOS = 1 AND [ARTICULOSDIRECTOS] IS NULL) OR ([ARTICULOSDIRECTOS] = " & _
                "@Original_ARTICULOSDIRECTOS)) AND ([CODIGO] = @Original_CODIGO) AND ((@IsNull_CO" & _
                "NREPER = 1 AND [CONREPER] IS NULL) OR ([CONREPER] = @Original_CONREPER)) AND ((@" & _
                "IsNull_CONVENCIM = 1 AND [CONVENCIM] IS NULL) OR ([CONVENCIM] = @Original_CONVEN" & _
                "CIM)) AND ((@IsNull_DESCRIPCION = 1 AND [DESCRIPCION] IS NULL) OR ([DESCRIPCION]" & _
                " = @Original_DESCRIPCION)) AND ((@IsNull_DESGLOSEPEDIDO = 1 AND [DESGLOSEPEDIDO]" & _
                " IS NULL) OR ([DESGLOSEPEDIDO] = @Original_DESGLOSEPEDIDO)) AND ((@IsNull_ENVIAR" & _
                "INVENTARIO = 1 AND [ENVIARINVENTARIO] IS NULL) OR ([ENVIARINVENTARIO] = @Origina" & _
                "l_ENVIARINVENTARIO)) AND ((@IsNull_FACTURADIARIA = 1 AND [FACTURADIARIA] IS NULL" & _
                ") OR ([FACTURADIARIA] = @Original_FACTURADIARIA)) AND ((@IsNull_GENERAALBARAN = " & _
                "1 AND [GENERAALBARAN] IS NULL) OR ([GENERAALBARAN] = @Original_GENERAALBARAN)) A" & _
                "ND ((@IsNull_GENERAFACTURA = 1 AND [GENERAFACTURA] IS NULL) OR ([GENERAFACTURA] " & _
                "= @Original_GENERAFACTURA)) AND ((@IsNull_IVAINCLUIDO = 1 AND [IVAINCLUIDO] IS N" & _
                "ULL) OR ([IVAINCLUIDO] = @Original_IVAINCLUIDO)) AND ((@IsNull_PEDIDOMANUAL = 1 " & _
                "AND [PEDIDOMANUAL] IS NULL) OR ([PEDIDOMANUAL] = @Original_PEDIDOMANUAL)) AND ((" & _
                "@IsNull_RECIBECOMPRAS = 1 AND [RECIBECOMPRAS] IS NULL) OR ([RECIBECOMPRAS] = @Or" & _
                "iginal_RECIBECOMPRAS)) AND ((@IsNull_RECIBETICKETS = 1 AND [RECIBETICKETS] IS NU" & _
                "LL) OR ([RECIBETICKETS] = @Original_RECIBETICKETS)) AND ((@IsNull_SERIEALBARAN =" & _
                " 1 AND [SERIEALBARAN] IS NULL) OR ([SERIEALBARAN] = @Original_SERIEALBARAN)) AND" & _
                " ((@IsNull_SERIEALBCREDITO = 1 AND [SERIEALBCREDITO] IS NULL) OR ([SERIEALBCREDI" & _
                "TO] = @Original_SERIEALBCREDITO)) AND ((@IsNull_SERIECOMPRAS = 1 AND [SERIECOMPR" & _
                "AS] IS NULL) OR ([SERIECOMPRAS] = @Original_SERIECOMPRAS)) AND ((@IsNull_SERIEDE" & _
                "STINO = 1 AND [SERIEDESTINO] IS NULL) OR ([SERIEDESTINO] = @Original_SERIEDESTIN" & _
                "O)) AND ((@IsNull_SERIEFACTURA = 1 AND [SERIEFACTURA] IS NULL) OR ([SERIEFACTURA" & _
                "] = @Original_SERIEFACTURA)) AND ((@IsNull_SERIEPEDIDO = 1 AND [SERIEPEDIDO] IS " & _
                "NULL) OR ([SERIEPEDIDO] = @Original_SERIEPEDIDO)) AND ((@IsNull_TIPOCONTALBARAN " & _
                "= 1 AND [TIPOCONTALBARAN] IS NULL) OR ([TIPOCONTALBARAN] = @Original_TIPOCONTALB" & _
                "ARAN)) AND ((@IsNull_TIPOCONTALBCREDITO = 1 AND [TIPOCONTALBCREDITO] IS NULL) OR" & _
                " ([TIPOCONTALBCREDITO] = @Original_TIPOCONTALBCREDITO)) AND ((@IsNull_TIPOCONTCO" & _
                "MPRAS = 1 AND [TIPOCONTCOMPRAS] IS NULL) OR ([TIPOCONTCOMPRAS] = @Original_TIPOC" & _
                "ONTCOMPRAS)) AND ((@IsNull_TIPOCONTDESTINO = 1 AND [TIPOCONTDESTINO] IS NULL) OR" & _
                " ([TIPOCONTDESTINO] = @Original_TIPOCONTDESTINO)) AND ((@IsNull_TIPOCONTFACTURA " & _
                "= 1 AND [TIPOCONTFACTURA] IS NULL) OR ([TIPOCONTFACTURA] = @Original_TIPOCONTFAC" & _
                "TURA)) AND ((@IsNull_TIPOCONTPEDIDO = 1 AND [TIPOCONTPEDIDO] IS NULL) OR ([TIPOC" & _
                "ONTPEDIDO] = @Original_TIPOCONTPEDIDO)) AND ((@IsNull_TIPODOCUDESTINO = 1 AND [T" & _
                "IPODOCUDESTINO] IS NULL) OR ([TIPODOCUDESTINO] = @Original_TIPODOCUDESTINO)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ALBARANCREDITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALBARANCREDITO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ALBARANCREDITO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALBARANCREDITO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ARTICULOSDIRECTOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARTICULOSDIRECTOS", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ARTICULOSDIRECTOS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARTICULOSDIRECTOS", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONREPER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONREPER", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONREPER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONREPER", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONVENCIM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONVENCIM", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONVENCIM", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONVENCIM", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPCION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPCION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESGLOSEPEDIDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESGLOSEPEDIDO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESGLOSEPEDIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESGLOSEPEDIDO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENVIARINVENTARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENVIARINVENTARIO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENVIARINVENTARIO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENVIARINVENTARIO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FACTURADIARIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FACTURADIARIA", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FACTURADIARIA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FACTURADIARIA", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GENERAALBARAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GENERAALBARAN", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GENERAALBARAN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GENERAALBARAN", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GENERAFACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GENERAFACTURA", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GENERAFACTURA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GENERAFACTURA", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IVAINCLUIDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IVAINCLUIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PEDIDOMANUAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PEDIDOMANUAL", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PEDIDOMANUAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PEDIDOMANUAL", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECIBECOMPRAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECIBECOMPRAS", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECIBECOMPRAS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECIBECOMPRAS", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECIBETICKETS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECIBETICKETS", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECIBETICKETS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECIBETICKETS", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SERIEALBARAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEALBARAN", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SERIEALBARAN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEALBARAN", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SERIEALBCREDITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEALBCREDITO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SERIEALBCREDITO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEALBCREDITO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SERIECOMPRAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIECOMPRAS", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SERIECOMPRAS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIECOMPRAS", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SERIEDESTINO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEDESTINO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SERIEDESTINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEDESTINO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SERIEFACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEFACTURA", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SERIEFACTURA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEFACTURA", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SERIEPEDIDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEPEDIDO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SERIEPEDIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEPEDIDO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOCONTALBARAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTALBARAN", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOCONTALBARAN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTALBARAN", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOCONTALBCREDITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTALBCREDITO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOCONTALBCREDITO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTALBCREDITO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOCONTCOMPRAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTCOMPRAS", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOCONTCOMPRAS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTCOMPRAS", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOCONTDESTINO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTDESTINO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOCONTDESTINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTDESTINO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOCONTFACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTFACTURA", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOCONTFACTURA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTFACTURA", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOCONTPEDIDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTPEDIDO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOCONTPEDIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTPEDIDO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPODOCUDESTINO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPODOCUDESTINO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPODOCUDESTINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPODOCUDESTINO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [IDA_TIPOSTIENDA] ([ALBARANCREDITO], [ARTICULOSDIRECTOS], [CODIGO], [" & _
                "CONREPER], [CONVENCIM], [DESCRIPCION], [DESGLOSEPEDIDO], [ENVIARINVENTARIO], [FA" & _
                "CTURADIARIA], [GENERAALBARAN], [GENERAFACTURA], [IVAINCLUIDO], [PEDIDOMANUAL], [" & _
                "RECIBECOMPRAS], [RECIBETICKETS], [SERIEALBARAN], [SERIEALBCREDITO], [SERIECOMPRA" & _
                "S], [SERIEDESTINO], [SERIEFACTURA], [SERIEPEDIDO], [TIPOCONTALBARAN], [TIPOCONTA" & _
                "LBCREDITO], [TIPOCONTCOMPRAS], [TIPOCONTDESTINO], [TIPOCONTFACTURA], [TIPOCONTPE" & _
                "DIDO], [TIPODOCUDESTINO]) VALUES (@ALBARANCREDITO, @ARTICULOSDIRECTOS, @CODIGO, " & _
                "@CONREPER, @CONVENCIM, @DESCRIPCION, @DESGLOSEPEDIDO, @ENVIARINVENTARIO, @FACTUR" & _
                "ADIARIA, @GENERAALBARAN, @GENERAFACTURA, @IVAINCLUIDO, @PEDIDOMANUAL, @RECIBECOM" & _
                "PRAS, @RECIBETICKETS, @SERIEALBARAN, @SERIEALBCREDITO, @SERIECOMPRAS, @SERIEDEST" & _
                "INO, @SERIEFACTURA, @SERIEPEDIDO, @TIPOCONTALBARAN, @TIPOCONTALBCREDITO, @TIPOCO" & _
                "NTCOMPRAS, @TIPOCONTDESTINO, @TIPOCONTFACTURA, @TIPOCONTPEDIDO, @TIPODOCUDESTINO" & _
                ");" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT ALBARANCREDITO, ARTICULOSDIRECTOS, CODIGO, CONREPER, CONVENCIM, DESCR" & _
                "IPCION, DESGLOSEPEDIDO, ENVIARINVENTARIO, FACTURADIARIA, GENERAALBARAN, GENERAFA" & _
                "CTURA, IVAINCLUIDO, PEDIDOMANUAL, RECIBECOMPRAS, RECIBETICKETS, SERIEALBARAN, SE" & _
                "RIEALBCREDITO, SERIECOMPRAS, SERIEDESTINO, SERIEFACTURA, SERIEPEDIDO, TIPOCONTAL" & _
                "BARAN, TIPOCONTALBCREDITO, TIPOCONTCOMPRAS, TIPOCONTDESTINO, TIPOCONTFACTURA, TI" & _
                "POCONTPEDIDO, TIPODOCUDESTINO FROM IDA_TIPOSTIENDA WHERE (CODIGO = @CODIGO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ALBARANCREDITO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALBARANCREDITO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ARTICULOSDIRECTOS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARTICULOSDIRECTOS", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONREPER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONREPER", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONVENCIM", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONVENCIM", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPCION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPCION", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESGLOSEPEDIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESGLOSEPEDIDO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENVIARINVENTARIO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENVIARINVENTARIO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FACTURADIARIA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FACTURADIARIA", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GENERAALBARAN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GENERAALBARAN", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GENERAFACTURA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GENERAFACTURA", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IVAINCLUIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PEDIDOMANUAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PEDIDOMANUAL", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECIBECOMPRAS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECIBECOMPRAS", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECIBETICKETS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECIBETICKETS", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIEALBARAN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEALBARAN", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIEALBCREDITO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEALBCREDITO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIECOMPRAS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIECOMPRAS", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIEDESTINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEDESTINO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIEFACTURA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEFACTURA", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIEPEDIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEPEDIDO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOCONTALBARAN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTALBARAN", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOCONTALBCREDITO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTALBCREDITO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOCONTCOMPRAS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTCOMPRAS", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOCONTDESTINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTDESTINO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOCONTFACTURA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTFACTURA", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOCONTPEDIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTPEDIDO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPODOCUDESTINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPODOCUDESTINO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [IDA_TIPOSTIENDA] SET [ALBARANCREDITO] = @ALBARANCREDITO, [ARTICULOSDIRECT" & _
                "OS] = @ARTICULOSDIRECTOS, [CODIGO] = @CODIGO, [CONREPER] = @CONREPER, [CONVENCIM" & _
                "] = @CONVENCIM, [DESCRIPCION] = @DESCRIPCION, [DESGLOSEPEDIDO] = @DESGLOSEPEDIDO" & _
                ", [ENVIARINVENTARIO] = @ENVIARINVENTARIO, [FACTURADIARIA] = @FACTURADIARIA, [GEN" & _
                "ERAALBARAN] = @GENERAALBARAN, [GENERAFACTURA] = @GENERAFACTURA, [IVAINCLUIDO] = " & _
                "@IVAINCLUIDO, [PEDIDOMANUAL] = @PEDIDOMANUAL, [RECIBECOMPRAS] = @RECIBECOMPRAS, " & _
                "[RECIBETICKETS] = @RECIBETICKETS, [SERIEALBARAN] = @SERIEALBARAN, [SERIEALBCREDI" & _
                "TO] = @SERIEALBCREDITO, [SERIECOMPRAS] = @SERIECOMPRAS, [SERIEDESTINO] = @SERIED" & _
                "ESTINO, [SERIEFACTURA] = @SERIEFACTURA, [SERIEPEDIDO] = @SERIEPEDIDO, [TIPOCONTA" & _
                "LBARAN] = @TIPOCONTALBARAN, [TIPOCONTALBCREDITO] = @TIPOCONTALBCREDITO, [TIPOCON" & _
                "TCOMPRAS] = @TIPOCONTCOMPRAS, [TIPOCONTDESTINO] = @TIPOCONTDESTINO, [TIPOCONTFAC" & _
                "TURA] = @TIPOCONTFACTURA, [TIPOCONTPEDIDO] = @TIPOCONTPEDIDO, [TIPODOCUDESTINO] " & _
                "= @TIPODOCUDESTINO WHERE (((@IsNull_ALBARANCREDITO = 1 AND [ALBARANCREDITO] IS N" & _
                "ULL) OR ([ALBARANCREDITO] = @Original_ALBARANCREDITO)) AND ((@IsNull_ARTICULOSDI" & _
                "RECTOS = 1 AND [ARTICULOSDIRECTOS] IS NULL) OR ([ARTICULOSDIRECTOS] = @Original_" & _
                "ARTICULOSDIRECTOS)) AND ([CODIGO] = @Original_CODIGO) AND ((@IsNull_CONREPER = 1" & _
                " AND [CONREPER] IS NULL) OR ([CONREPER] = @Original_CONREPER)) AND ((@IsNull_CON" & _
                "VENCIM = 1 AND [CONVENCIM] IS NULL) OR ([CONVENCIM] = @Original_CONVENCIM)) AND " & _
                "((@IsNull_DESCRIPCION = 1 AND [DESCRIPCION] IS NULL) OR ([DESCRIPCION] = @Origin" & _
                "al_DESCRIPCION)) AND ((@IsNull_DESGLOSEPEDIDO = 1 AND [DESGLOSEPEDIDO] IS NULL) " & _
                "OR ([DESGLOSEPEDIDO] = @Original_DESGLOSEPEDIDO)) AND ((@IsNull_ENVIARINVENTARIO" & _
                " = 1 AND [ENVIARINVENTARIO] IS NULL) OR ([ENVIARINVENTARIO] = @Original_ENVIARIN" & _
                "VENTARIO)) AND ((@IsNull_FACTURADIARIA = 1 AND [FACTURADIARIA] IS NULL) OR ([FAC" & _
                "TURADIARIA] = @Original_FACTURADIARIA)) AND ((@IsNull_GENERAALBARAN = 1 AND [GEN" & _
                "ERAALBARAN] IS NULL) OR ([GENERAALBARAN] = @Original_GENERAALBARAN)) AND ((@IsNu" & _
                "ll_GENERAFACTURA = 1 AND [GENERAFACTURA] IS NULL) OR ([GENERAFACTURA] = @Origina" & _
                "l_GENERAFACTURA)) AND ((@IsNull_IVAINCLUIDO = 1 AND [IVAINCLUIDO] IS NULL) OR ([" & _
                "IVAINCLUIDO] = @Original_IVAINCLUIDO)) AND ((@IsNull_PEDIDOMANUAL = 1 AND [PEDID" & _
                "OMANUAL] IS NULL) OR ([PEDIDOMANUAL] = @Original_PEDIDOMANUAL)) AND ((@IsNull_RE" & _
                "CIBECOMPRAS = 1 AND [RECIBECOMPRAS] IS NULL) OR ([RECIBECOMPRAS] = @Original_REC" & _
                "IBECOMPRAS)) AND ((@IsNull_RECIBETICKETS = 1 AND [RECIBETICKETS] IS NULL) OR ([R" & _
                "ECIBETICKETS] = @Original_RECIBETICKETS)) AND ((@IsNull_SERIEALBARAN = 1 AND [SE" & _
                "RIEALBARAN] IS NULL) OR ([SERIEALBARAN] = @Original_SERIEALBARAN)) AND ((@IsNull" & _
                "_SERIEALBCREDITO = 1 AND [SERIEALBCREDITO] IS NULL) OR ([SERIEALBCREDITO] = @Ori" & _
                "ginal_SERIEALBCREDITO)) AND ((@IsNull_SERIECOMPRAS = 1 AND [SERIECOMPRAS] IS NUL" & _
                "L) OR ([SERIECOMPRAS] = @Original_SERIECOMPRAS)) AND ((@IsNull_SERIEDESTINO = 1 " & _
                "AND [SERIEDESTINO] IS NULL) OR ([SERIEDESTINO] = @Original_SERIEDESTINO)) AND ((" & _
                "@IsNull_SERIEFACTURA = 1 AND [SERIEFACTURA] IS NULL) OR ([SERIEFACTURA] = @Origi" & _
                "nal_SERIEFACTURA)) AND ((@IsNull_SERIEPEDIDO = 1 AND [SERIEPEDIDO] IS NULL) OR (" & _
                "[SERIEPEDIDO] = @Original_SERIEPEDIDO)) AND ((@IsNull_TIPOCONTALBARAN = 1 AND [T" & _
                "IPOCONTALBARAN] IS NULL) OR ([TIPOCONTALBARAN] = @Original_TIPOCONTALBARAN)) AND" & _
                " ((@IsNull_TIPOCONTALBCREDITO = 1 AND [TIPOCONTALBCREDITO] IS NULL) OR ([TIPOCON" & _
                "TALBCREDITO] = @Original_TIPOCONTALBCREDITO)) AND ((@IsNull_TIPOCONTCOMPRAS = 1 " & _
                "AND [TIPOCONTCOMPRAS] IS NULL) OR ([TIPOCONTCOMPRAS] = @Original_TIPOCONTCOMPRAS" & _
                ")) AND ((@IsNull_TIPOCONTDESTINO = 1 AND [TIPOCONTDESTINO] IS NULL) OR ([TIPOCON" & _
                "TDESTINO] = @Original_TIPOCONTDESTINO)) AND ((@IsNull_TIPOCONTFACTURA = 1 AND [T" & _
                "IPOCONTFACTURA] IS NULL) OR ([TIPOCONTFACTURA] = @Original_TIPOCONTFACTURA)) AND" & _
                " ((@IsNull_TIPOCONTPEDIDO = 1 AND [TIPOCONTPEDIDO] IS NULL) OR ([TIPOCONTPEDIDO]" & _
                " = @Original_TIPOCONTPEDIDO)) AND ((@IsNull_TIPODOCUDESTINO = 1 AND [TIPODOCUDES" & _
                "TINO] IS NULL) OR ([TIPODOCUDESTINO] = @Original_TIPODOCUDESTINO)));" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT ALB" & _
                "ARANCREDITO, ARTICULOSDIRECTOS, CODIGO, CONREPER, CONVENCIM, DESCRIPCION, DESGLO" & _
                "SEPEDIDO, ENVIARINVENTARIO, FACTURADIARIA, GENERAALBARAN, GENERAFACTURA, IVAINCL" & _
                "UIDO, PEDIDOMANUAL, RECIBECOMPRAS, RECIBETICKETS, SERIEALBARAN, SERIEALBCREDITO," & _
                " SERIECOMPRAS, SERIEDESTINO, SERIEFACTURA, SERIEPEDIDO, TIPOCONTALBARAN, TIPOCON" & _
                "TALBCREDITO, TIPOCONTCOMPRAS, TIPOCONTDESTINO, TIPOCONTFACTURA, TIPOCONTPEDIDO, " & _
                "TIPODOCUDESTINO FROM IDA_TIPOSTIENDA WHERE (CODIGO = @CODIGO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ALBARANCREDITO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALBARANCREDITO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ARTICULOSDIRECTOS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARTICULOSDIRECTOS", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONREPER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONREPER", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONVENCIM", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONVENCIM", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPCION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPCION", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESGLOSEPEDIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESGLOSEPEDIDO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENVIARINVENTARIO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENVIARINVENTARIO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FACTURADIARIA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FACTURADIARIA", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GENERAALBARAN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GENERAALBARAN", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GENERAFACTURA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GENERAFACTURA", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IVAINCLUIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PEDIDOMANUAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PEDIDOMANUAL", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECIBECOMPRAS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECIBECOMPRAS", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECIBETICKETS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECIBETICKETS", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIEALBARAN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEALBARAN", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIEALBCREDITO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEALBCREDITO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIECOMPRAS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIECOMPRAS", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIEDESTINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEDESTINO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIEFACTURA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEFACTURA", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERIEPEDIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEPEDIDO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOCONTALBARAN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTALBARAN", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOCONTALBCREDITO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTALBCREDITO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOCONTCOMPRAS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTCOMPRAS", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOCONTDESTINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTDESTINO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOCONTFACTURA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTFACTURA", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOCONTPEDIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTPEDIDO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPODOCUDESTINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPODOCUDESTINO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ALBARANCREDITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALBARANCREDITO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ALBARANCREDITO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALBARANCREDITO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ARTICULOSDIRECTOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARTICULOSDIRECTOS", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ARTICULOSDIRECTOS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARTICULOSDIRECTOS", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONREPER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONREPER", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONREPER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONREPER", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONVENCIM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONVENCIM", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONVENCIM", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONVENCIM", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPCION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPCION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPCION", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESGLOSEPEDIDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESGLOSEPEDIDO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESGLOSEPEDIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESGLOSEPEDIDO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENVIARINVENTARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENVIARINVENTARIO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENVIARINVENTARIO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENVIARINVENTARIO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FACTURADIARIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FACTURADIARIA", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FACTURADIARIA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FACTURADIARIA", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GENERAALBARAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GENERAALBARAN", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GENERAALBARAN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GENERAALBARAN", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GENERAFACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GENERAFACTURA", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GENERAFACTURA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GENERAFACTURA", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IVAINCLUIDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IVAINCLUIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PEDIDOMANUAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PEDIDOMANUAL", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PEDIDOMANUAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PEDIDOMANUAL", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECIBECOMPRAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECIBECOMPRAS", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECIBECOMPRAS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECIBECOMPRAS", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECIBETICKETS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECIBETICKETS", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECIBETICKETS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECIBETICKETS", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SERIEALBARAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEALBARAN", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SERIEALBARAN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEALBARAN", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SERIEALBCREDITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEALBCREDITO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SERIEALBCREDITO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEALBCREDITO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SERIECOMPRAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIECOMPRAS", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SERIECOMPRAS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIECOMPRAS", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SERIEDESTINO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEDESTINO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SERIEDESTINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEDESTINO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SERIEFACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEFACTURA", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SERIEFACTURA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEFACTURA", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SERIEPEDIDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEPEDIDO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SERIEPEDIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERIEPEDIDO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOCONTALBARAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTALBARAN", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOCONTALBARAN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTALBARAN", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOCONTALBCREDITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTALBCREDITO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOCONTALBCREDITO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTALBCREDITO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOCONTCOMPRAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTCOMPRAS", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOCONTCOMPRAS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTCOMPRAS", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOCONTDESTINO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTDESTINO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOCONTDESTINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTDESTINO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOCONTFACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTFACTURA", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOCONTFACTURA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTFACTURA", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOCONTPEDIDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTPEDIDO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOCONTPEDIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCONTPEDIDO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPODOCUDESTINO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPODOCUDESTINO", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPODOCUDESTINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPODOCUDESTINO", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.a3ERP_AydaraTPV.Settings.Default.SqlConection
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        IDA_TIPOSTIENDA.*" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            IDA_TIPOSTIENDA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As dsTiendas.IDA_TIPOSTIENDADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As dsTiendas.IDA_TIPOSTIENDADataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As dsTiendas) As Integer
            Return Me.Adapter.Update(dataSet, "IDA_TIPOSTIENDA")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, True)> _
        Public Overridable Overloads Function Delete( _
                    ByVal Original_ALBARANCREDITO As String, _
                    ByVal Original_ARTICULOSDIRECTOS As String, _
                    ByVal Original_CODIGO As String, _
                    ByVal Original_CONREPER As String, _
                    ByVal Original_CONVENCIM As String, _
                    ByVal Original_DESCRIPCION As String, _
                    ByVal Original_DESGLOSEPEDIDO As String, _
                    ByVal Original_ENVIARINVENTARIO As String, _
                    ByVal Original_FACTURADIARIA As String, _
                    ByVal Original_GENERAALBARAN As String, _
                    ByVal Original_GENERAFACTURA As String, _
                    ByVal Original_IVAINCLUIDO As String, _
                    ByVal Original_PEDIDOMANUAL As String, _
                    ByVal Original_RECIBECOMPRAS As String, _
                    ByVal Original_RECIBETICKETS As String, _
                    ByVal Original_SERIEALBARAN As String, _
                    ByVal Original_SERIEALBCREDITO As String, _
                    ByVal Original_SERIECOMPRAS As String, _
                    ByVal Original_SERIEDESTINO As String, _
                    ByVal Original_SERIEFACTURA As String, _
                    ByVal Original_SERIEPEDIDO As String, _
                    ByVal Original_TIPOCONTALBARAN As String, _
                    ByVal Original_TIPOCONTALBCREDITO As String, _
                    ByVal Original_TIPOCONTCOMPRAS As String, _
                    ByVal Original_TIPOCONTDESTINO As String, _
                    ByVal Original_TIPOCONTFACTURA As String, _
                    ByVal Original_TIPOCONTPEDIDO As String, _
                    ByVal Original_TIPODOCUDESTINO As String) As Integer
            If (Original_ALBARANCREDITO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ALBARANCREDITO, String)
            End If
            If (Original_ARTICULOSDIRECTOS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ARTICULOSDIRECTOS, String)
            End If
            If (Original_CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CODIGO")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODIGO, String)
            End If
            If (Original_CONREPER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CONREPER, String)
            End If
            If (Original_CONVENCIM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CONVENCIM, String)
            End If
            If (Original_DESCRIPCION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_DESCRIPCION, String)
            End If
            If (Original_DESGLOSEPEDIDO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_DESGLOSEPEDIDO, String)
            End If
            If (Original_ENVIARINVENTARIO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_ENVIARINVENTARIO, String)
            End If
            If (Original_FACTURADIARIA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_FACTURADIARIA, String)
            End If
            If (Original_GENERAALBARAN Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_GENERAALBARAN, String)
            End If
            If (Original_GENERAFACTURA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_GENERAFACTURA, String)
            End If
            If (Original_IVAINCLUIDO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_IVAINCLUIDO, String)
            End If
            If (Original_PEDIDOMANUAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_PEDIDOMANUAL, String)
            End If
            If (Original_RECIBECOMPRAS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_RECIBECOMPRAS, String)
            End If
            If (Original_RECIBETICKETS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_RECIBETICKETS, String)
            End If
            If (Original_SERIEALBARAN Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_SERIEALBARAN, String)
            End If
            If (Original_SERIEALBCREDITO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_SERIEALBCREDITO, String)
            End If
            If (Original_SERIECOMPRAS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_SERIECOMPRAS, String)
            End If
            If (Original_SERIEDESTINO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_SERIEDESTINO, String)
            End If
            If (Original_SERIEFACTURA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_SERIEFACTURA, String)
            End If
            If (Original_SERIEPEDIDO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_SERIEPEDIDO, String)
            End If
            If (Original_TIPOCONTALBARAN Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_TIPOCONTALBARAN, String)
            End If
            If (Original_TIPOCONTALBCREDITO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_TIPOCONTALBCREDITO, String)
            End If
            If (Original_TIPOCONTCOMPRAS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_TIPOCONTCOMPRAS, String)
            End If
            If (Original_TIPOCONTDESTINO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_TIPOCONTDESTINO, String)
            End If
            If (Original_TIPOCONTFACTURA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_TIPOCONTFACTURA, String)
            End If
            If (Original_TIPOCONTPEDIDO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_TIPOCONTPEDIDO, String)
            End If
            If (Original_TIPODOCUDESTINO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_TIPODOCUDESTINO, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert( _
                    ByVal ALBARANCREDITO As String, _
                    ByVal ARTICULOSDIRECTOS As String, _
                    ByVal CODIGO As String, _
                    ByVal CONREPER As String, _
                    ByVal CONVENCIM As String, _
                    ByVal DESCRIPCION As String, _
                    ByVal DESGLOSEPEDIDO As String, _
                    ByVal ENVIARINVENTARIO As String, _
                    ByVal FACTURADIARIA As String, _
                    ByVal GENERAALBARAN As String, _
                    ByVal GENERAFACTURA As String, _
                    ByVal IVAINCLUIDO As String, _
                    ByVal PEDIDOMANUAL As String, _
                    ByVal RECIBECOMPRAS As String, _
                    ByVal RECIBETICKETS As String, _
                    ByVal SERIEALBARAN As String, _
                    ByVal SERIEALBCREDITO As String, _
                    ByVal SERIECOMPRAS As String, _
                    ByVal SERIEDESTINO As String, _
                    ByVal SERIEFACTURA As String, _
                    ByVal SERIEPEDIDO As String, _
                    ByVal TIPOCONTALBARAN As String, _
                    ByVal TIPOCONTALBCREDITO As String, _
                    ByVal TIPOCONTCOMPRAS As String, _
                    ByVal TIPOCONTDESTINO As String, _
                    ByVal TIPOCONTFACTURA As String, _
                    ByVal TIPOCONTPEDIDO As String, _
                    ByVal TIPODOCUDESTINO As String) As Integer
            If (ALBARANCREDITO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ALBARANCREDITO, String)
            End If
            If (ARTICULOSDIRECTOS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ARTICULOSDIRECTOS, String)
            End If
            If (CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODIGO, String)
            End If
            If (CONREPER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CONREPER, String)
            End If
            If (CONVENCIM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CONVENCIM, String)
            End If
            If (DESCRIPCION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DESCRIPCION, String)
            End If
            If (DESGLOSEPEDIDO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(DESGLOSEPEDIDO, String)
            End If
            If (ENVIARINVENTARIO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(ENVIARINVENTARIO, String)
            End If
            If (FACTURADIARIA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(FACTURADIARIA, String)
            End If
            If (GENERAALBARAN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(GENERAALBARAN, String)
            End If
            If (GENERAFACTURA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(GENERAFACTURA, String)
            End If
            If (IVAINCLUIDO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(IVAINCLUIDO, String)
            End If
            If (PEDIDOMANUAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(PEDIDOMANUAL, String)
            End If
            If (RECIBECOMPRAS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(RECIBECOMPRAS, String)
            End If
            If (RECIBETICKETS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(RECIBETICKETS, String)
            End If
            If (SERIEALBARAN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(SERIEALBARAN, String)
            End If
            If (SERIEALBCREDITO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(SERIEALBCREDITO, String)
            End If
            If (SERIECOMPRAS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(SERIECOMPRAS, String)
            End If
            If (SERIEDESTINO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(SERIEDESTINO, String)
            End If
            If (SERIEFACTURA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(SERIEFACTURA, String)
            End If
            If (SERIEPEDIDO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(SERIEPEDIDO, String)
            End If
            If (TIPOCONTALBARAN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(TIPOCONTALBARAN, String)
            End If
            If (TIPOCONTALBCREDITO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(TIPOCONTALBCREDITO, String)
            End If
            If (TIPOCONTCOMPRAS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(TIPOCONTCOMPRAS, String)
            End If
            If (TIPOCONTDESTINO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(TIPOCONTDESTINO, String)
            End If
            If (TIPOCONTFACTURA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(TIPOCONTFACTURA, String)
            End If
            If (TIPOCONTPEDIDO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(TIPOCONTPEDIDO, String)
            End If
            If (TIPODOCUDESTINO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(TIPODOCUDESTINO, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update( _
                    ByVal ALBARANCREDITO As String, _
                    ByVal ARTICULOSDIRECTOS As String, _
                    ByVal CODIGO As String, _
                    ByVal CONREPER As String, _
                    ByVal CONVENCIM As String, _
                    ByVal DESCRIPCION As String, _
                    ByVal DESGLOSEPEDIDO As String, _
                    ByVal ENVIARINVENTARIO As String, _
                    ByVal FACTURADIARIA As String, _
                    ByVal GENERAALBARAN As String, _
                    ByVal GENERAFACTURA As String, _
                    ByVal IVAINCLUIDO As String, _
                    ByVal PEDIDOMANUAL As String, _
                    ByVal RECIBECOMPRAS As String, _
                    ByVal RECIBETICKETS As String, _
                    ByVal SERIEALBARAN As String, _
                    ByVal SERIEALBCREDITO As String, _
                    ByVal SERIECOMPRAS As String, _
                    ByVal SERIEDESTINO As String, _
                    ByVal SERIEFACTURA As String, _
                    ByVal SERIEPEDIDO As String, _
                    ByVal TIPOCONTALBARAN As String, _
                    ByVal TIPOCONTALBCREDITO As String, _
                    ByVal TIPOCONTCOMPRAS As String, _
                    ByVal TIPOCONTDESTINO As String, _
                    ByVal TIPOCONTFACTURA As String, _
                    ByVal TIPOCONTPEDIDO As String, _
                    ByVal TIPODOCUDESTINO As String, _
                    ByVal Original_ALBARANCREDITO As String, _
                    ByVal Original_ARTICULOSDIRECTOS As String, _
                    ByVal Original_CODIGO As String, _
                    ByVal Original_CONREPER As String, _
                    ByVal Original_CONVENCIM As String, _
                    ByVal Original_DESCRIPCION As String, _
                    ByVal Original_DESGLOSEPEDIDO As String, _
                    ByVal Original_ENVIARINVENTARIO As String, _
                    ByVal Original_FACTURADIARIA As String, _
                    ByVal Original_GENERAALBARAN As String, _
                    ByVal Original_GENERAFACTURA As String, _
                    ByVal Original_IVAINCLUIDO As String, _
                    ByVal Original_PEDIDOMANUAL As String, _
                    ByVal Original_RECIBECOMPRAS As String, _
                    ByVal Original_RECIBETICKETS As String, _
                    ByVal Original_SERIEALBARAN As String, _
                    ByVal Original_SERIEALBCREDITO As String, _
                    ByVal Original_SERIECOMPRAS As String, _
                    ByVal Original_SERIEDESTINO As String, _
                    ByVal Original_SERIEFACTURA As String, _
                    ByVal Original_SERIEPEDIDO As String, _
                    ByVal Original_TIPOCONTALBARAN As String, _
                    ByVal Original_TIPOCONTALBCREDITO As String, _
                    ByVal Original_TIPOCONTCOMPRAS As String, _
                    ByVal Original_TIPOCONTDESTINO As String, _
                    ByVal Original_TIPOCONTFACTURA As String, _
                    ByVal Original_TIPOCONTPEDIDO As String, _
                    ByVal Original_TIPODOCUDESTINO As String) As Integer
            If (ALBARANCREDITO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ALBARANCREDITO, String)
            End If
            If (ARTICULOSDIRECTOS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ARTICULOSDIRECTOS, String)
            End If
            If (CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODIGO, String)
            End If
            If (CONREPER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CONREPER, String)
            End If
            If (CONVENCIM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CONVENCIM, String)
            End If
            If (DESCRIPCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(DESCRIPCION, String)
            End If
            If (DESGLOSEPEDIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(DESGLOSEPEDIDO, String)
            End If
            If (ENVIARINVENTARIO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ENVIARINVENTARIO, String)
            End If
            If (FACTURADIARIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(FACTURADIARIA, String)
            End If
            If (GENERAALBARAN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(GENERAALBARAN, String)
            End If
            If (GENERAFACTURA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(GENERAFACTURA, String)
            End If
            If (IVAINCLUIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(IVAINCLUIDO, String)
            End If
            If (PEDIDOMANUAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(PEDIDOMANUAL, String)
            End If
            If (RECIBECOMPRAS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(RECIBECOMPRAS, String)
            End If
            If (RECIBETICKETS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(RECIBETICKETS, String)
            End If
            If (SERIEALBARAN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(SERIEALBARAN, String)
            End If
            If (SERIEALBCREDITO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(SERIEALBCREDITO, String)
            End If
            If (SERIECOMPRAS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(SERIECOMPRAS, String)
            End If
            If (SERIEDESTINO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(SERIEDESTINO, String)
            End If
            If (SERIEFACTURA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(SERIEFACTURA, String)
            End If
            If (SERIEPEDIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(SERIEPEDIDO, String)
            End If
            If (TIPOCONTALBARAN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(TIPOCONTALBARAN, String)
            End If
            If (TIPOCONTALBCREDITO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(TIPOCONTALBCREDITO, String)
            End If
            If (TIPOCONTCOMPRAS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(TIPOCONTCOMPRAS, String)
            End If
            If (TIPOCONTDESTINO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(TIPOCONTDESTINO, String)
            End If
            If (TIPOCONTFACTURA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(TIPOCONTFACTURA, String)
            End If
            If (TIPOCONTPEDIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(TIPOCONTPEDIDO, String)
            End If
            If (TIPODOCUDESTINO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(TIPODOCUDESTINO, String)
            End If
            If (Original_ALBARANCREDITO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_ALBARANCREDITO, String)
            End If
            If (Original_ARTICULOSDIRECTOS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_ARTICULOSDIRECTOS, String)
            End If
            If (Original_CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CODIGO")
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_CODIGO, String)
            End If
            If (Original_CONREPER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_CONREPER, String)
            End If
            If (Original_CONVENCIM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_CONVENCIM, String)
            End If
            If (Original_DESCRIPCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_DESCRIPCION, String)
            End If
            If (Original_DESGLOSEPEDIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_DESGLOSEPEDIDO, String)
            End If
            If (Original_ENVIARINVENTARIO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_ENVIARINVENTARIO, String)
            End If
            If (Original_FACTURADIARIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_FACTURADIARIA, String)
            End If
            If (Original_GENERAALBARAN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_GENERAALBARAN, String)
            End If
            If (Original_GENERAFACTURA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_GENERAFACTURA, String)
            End If
            If (Original_IVAINCLUIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_IVAINCLUIDO, String)
            End If
            If (Original_PEDIDOMANUAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_PEDIDOMANUAL, String)
            End If
            If (Original_RECIBECOMPRAS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_RECIBECOMPRAS, String)
            End If
            If (Original_RECIBETICKETS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_RECIBETICKETS, String)
            End If
            If (Original_SERIEALBARAN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_SERIEALBARAN, String)
            End If
            If (Original_SERIEALBCREDITO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_SERIEALBCREDITO, String)
            End If
            If (Original_SERIECOMPRAS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_SERIECOMPRAS, String)
            End If
            If (Original_SERIEDESTINO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_SERIEDESTINO, String)
            End If
            If (Original_SERIEFACTURA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_SERIEFACTURA, String)
            End If
            If (Original_SERIEPEDIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_SERIEPEDIDO, String)
            End If
            If (Original_TIPOCONTALBARAN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_TIPOCONTALBARAN, String)
            End If
            If (Original_TIPOCONTALBCREDITO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_TIPOCONTALBCREDITO, String)
            End If
            If (Original_TIPOCONTCOMPRAS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_TIPOCONTCOMPRAS, String)
            End If
            If (Original_TIPOCONTDESTINO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_TIPOCONTDESTINO, String)
            End If
            If (Original_TIPOCONTFACTURA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_TIPOCONTFACTURA, String)
            End If
            If (Original_TIPOCONTPEDIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_TIPOCONTPEDIDO, String)
            End If
            If (Original_TIPODOCUDESTINO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_TIPODOCUDESTINO, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update( _
                    ByVal ALBARANCREDITO As String, _
                    ByVal ARTICULOSDIRECTOS As String, _
                    ByVal CONREPER As String, _
                    ByVal CONVENCIM As String, _
                    ByVal DESCRIPCION As String, _
                    ByVal DESGLOSEPEDIDO As String, _
                    ByVal ENVIARINVENTARIO As String, _
                    ByVal FACTURADIARIA As String, _
                    ByVal GENERAALBARAN As String, _
                    ByVal GENERAFACTURA As String, _
                    ByVal IVAINCLUIDO As String, _
                    ByVal PEDIDOMANUAL As String, _
                    ByVal RECIBECOMPRAS As String, _
                    ByVal RECIBETICKETS As String, _
                    ByVal SERIEALBARAN As String, _
                    ByVal SERIEALBCREDITO As String, _
                    ByVal SERIECOMPRAS As String, _
                    ByVal SERIEDESTINO As String, _
                    ByVal SERIEFACTURA As String, _
                    ByVal SERIEPEDIDO As String, _
                    ByVal TIPOCONTALBARAN As String, _
                    ByVal TIPOCONTALBCREDITO As String, _
                    ByVal TIPOCONTCOMPRAS As String, _
                    ByVal TIPOCONTDESTINO As String, _
                    ByVal TIPOCONTFACTURA As String, _
                    ByVal TIPOCONTPEDIDO As String, _
                    ByVal TIPODOCUDESTINO As String, _
                    ByVal Original_ALBARANCREDITO As String, _
                    ByVal Original_ARTICULOSDIRECTOS As String, _
                    ByVal Original_CODIGO As String, _
                    ByVal Original_CONREPER As String, _
                    ByVal Original_CONVENCIM As String, _
                    ByVal Original_DESCRIPCION As String, _
                    ByVal Original_DESGLOSEPEDIDO As String, _
                    ByVal Original_ENVIARINVENTARIO As String, _
                    ByVal Original_FACTURADIARIA As String, _
                    ByVal Original_GENERAALBARAN As String, _
                    ByVal Original_GENERAFACTURA As String, _
                    ByVal Original_IVAINCLUIDO As String, _
                    ByVal Original_PEDIDOMANUAL As String, _
                    ByVal Original_RECIBECOMPRAS As String, _
                    ByVal Original_RECIBETICKETS As String, _
                    ByVal Original_SERIEALBARAN As String, _
                    ByVal Original_SERIEALBCREDITO As String, _
                    ByVal Original_SERIECOMPRAS As String, _
                    ByVal Original_SERIEDESTINO As String, _
                    ByVal Original_SERIEFACTURA As String, _
                    ByVal Original_SERIEPEDIDO As String, _
                    ByVal Original_TIPOCONTALBARAN As String, _
                    ByVal Original_TIPOCONTALBCREDITO As String, _
                    ByVal Original_TIPOCONTCOMPRAS As String, _
                    ByVal Original_TIPOCONTDESTINO As String, _
                    ByVal Original_TIPOCONTFACTURA As String, _
                    ByVal Original_TIPOCONTPEDIDO As String, _
                    ByVal Original_TIPODOCUDESTINO As String) As Integer
            Return Me.Update(ALBARANCREDITO, ARTICULOSDIRECTOS, Original_CODIGO, CONREPER, CONVENCIM, DESCRIPCION, DESGLOSEPEDIDO, ENVIARINVENTARIO, FACTURADIARIA, GENERAALBARAN, GENERAFACTURA, IVAINCLUIDO, PEDIDOMANUAL, RECIBECOMPRAS, RECIBETICKETS, SERIEALBARAN, SERIEALBCREDITO, SERIECOMPRAS, SERIEDESTINO, SERIEFACTURA, SERIEPEDIDO, TIPOCONTALBARAN, TIPOCONTALBCREDITO, TIPOCONTCOMPRAS, TIPOCONTDESTINO, TIPOCONTFACTURA, TIPOCONTPEDIDO, TIPODOCUDESTINO, Original_ALBARANCREDITO, Original_ARTICULOSDIRECTOS, Original_CODIGO, Original_CONREPER, Original_CONVENCIM, Original_DESCRIPCION, Original_DESGLOSEPEDIDO, Original_ENVIARINVENTARIO, Original_FACTURADIARIA, Original_GENERAALBARAN, Original_GENERAFACTURA, Original_IVAINCLUIDO, Original_PEDIDOMANUAL, Original_RECIBECOMPRAS, Original_RECIBETICKETS, Original_SERIEALBARAN, Original_SERIEALBCREDITO, Original_SERIECOMPRAS, Original_SERIEDESTINO, Original_SERIEFACTURA, Original_SERIEPEDIDO, Original_TIPOCONTALBARAN, Original_TIPOCONTALBCREDITO, Original_TIPOCONTCOMPRAS, Original_TIPOCONTDESTINO, Original_TIPOCONTFACTURA, Original_TIPOCONTPEDIDO, Original_TIPODOCUDESTINO)
        End Function
    End Class

    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" & _
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")> _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component

        Private _updateOrder As UpdateOrderOption

        Private _iDA_TIPOSTIENDATableAdapter As IDA_TIPOSTIENDATableAdapter

        Private _backupDataSetBeforeUpdate As Boolean

        Private _connection As Global.System.Data.IDbConnection

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set(value As UpdateOrderOption)
                Me._updateOrder = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" & _
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" & _
            "a", "System.Drawing.Design.UITypeEditor")> _
        Public Property IDA_TIPOSTIENDATableAdapter() As IDA_TIPOSTIENDATableAdapter
            Get
                Return Me._iDA_TIPOSTIENDATableAdapter
            End Get
            Set(value As IDA_TIPOSTIENDATableAdapter)
                Me._iDA_TIPOSTIENDATableAdapter = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set(value As Boolean)
                Me._backupDataSetBeforeUpdate = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._iDA_TIPOSTIENDATableAdapter) Is Nothing) _
                            AndAlso (Not (Me._iDA_TIPOSTIENDATableAdapter.Connection) Is Nothing)) Then
                    Return Me._iDA_TIPOSTIENDATableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set(value As Global.System.Data.IDbConnection)
                Me._connection = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._iDA_TIPOSTIENDATableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property

        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsTiendas, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._iDA_TIPOSTIENDATableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.IDA_TIPOSTIENDA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing) _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._iDA_TIPOSTIENDATableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function

        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateInsertedRows(ByVal dataSet As dsTiendas, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._iDA_TIPOSTIENDATableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.IDA_TIPOSTIENDA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing) _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._iDA_TIPOSTIENDATableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function

        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateDeletedRows(ByVal dataSet As dsTiendas, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._iDA_TIPOSTIENDATableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.IDA_TIPOSTIENDA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing) _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._iDA_TIPOSTIENDATableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function

        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing) _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing) _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = False) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function

        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function UpdateAll(ByVal dataSet As dsTiendas) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = False) Then
                Return 0
            End If
            If ((Not (Me._iDA_TIPOSTIENDATableAdapter) Is Nothing) _
                        AndAlso (Me.MatchTableAdapterConnection(Me._iDA_TIPOSTIENDATableAdapter.Connection) = False)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" & _
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda" & _
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = False
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken) _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close()
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open()
                workConnOpened = True
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co" & _
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try
                '---- Prepare for update -----------
                '
                If (Not (Me._iDA_TIPOSTIENDATableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._iDA_TIPOSTIENDATableAdapter, Me._iDA_TIPOSTIENDATableAdapter.Connection)
                    Me._iDA_TIPOSTIENDATableAdapter.Connection = CType(workConnection, Global.System.Data.SqlClient.SqlConnection)
                    Me._iDA_TIPOSTIENDATableAdapter.Transaction = CType(workTransaction, Global.System.Data.SqlClient.SqlTransaction)
                    If Me._iDA_TIPOSTIENDATableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._iDA_TIPOSTIENDATableAdapter.Adapter.AcceptChangesDuringUpdate = False
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._iDA_TIPOSTIENDATableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit()
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges()
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges()
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback()
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear()
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges()
                            row.SetAdded()
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close()
                End If
                If (Not (Me._iDA_TIPOSTIENDATableAdapter) Is Nothing) Then
                    Me._iDA_TIPOSTIENDATableAdapter.Connection = CType(revertConnections(Me._iDA_TIPOSTIENDATableAdapter), Global.System.Data.SqlClient.SqlConnection)
                    Me._iDA_TIPOSTIENDATableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = True
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return True
            End If
            If ((Me.Connection Is Nothing) _
                        OrElse (inputConnection Is Nothing)) Then
                Return True
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return True
            End If
            Return False
        End Function

        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Enum UpdateOrderOption

            InsertUpdateDelete = 0

            UpdateInsertDelete = 1
        End Enum

        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)

            Private _relation As Global.System.Data.DataRelation

            Private _childFirst As Integer

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New()
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing) _
                            AndAlso (traversedRows.ContainsKey(parent) = False))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear()
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing) _
                                AndAlso (traversedRows.ContainsKey(parent) = False))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing) _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
