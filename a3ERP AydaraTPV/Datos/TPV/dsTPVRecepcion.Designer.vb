'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsTPVRecepcion"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsTPVRecepcion
    Inherits Global.System.Data.DataSet
    
    Private tableIDA_TICKETS As IDA_TICKETSDataTable
    
    Private tableIDA_TICKETSLINEAS As IDA_TICKETSLINEASDataTable
    
    Private tableIDA_CAJAS As IDA_CAJASDataTable
    
    Private tableRECEPCION As RECEPCIONDataTable
    
    Private tableCABETRAS As CABETRASDataTable
    
    Private tableLINETRAS As LINETRASDataTable
    
    Private tableCABEPEDV As CABEPEDVDataTable
    
    Private tableLINEPEDI As LINEPEDIDataTable
    
    Private tableCABEREGU As CABEREGUDataTable
    
    Private tableLINEREGU As LINEREGUDataTable
    
    Private relationFK_IDA_TICKETSLINEAS_IDA_TICKETS_IDTICKET As Global.System.Data.DataRelation
    
    Private relationCABETRAS_LINETRAS As Global.System.Data.DataRelation
    
    Private relationCABETRAS_LINETRAS1 As Global.System.Data.DataRelation
    
    Private relationCABEREGU_LINEREGU As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("IDA_TICKETS")) Is Nothing) Then
                MyBase.Tables.Add(New IDA_TICKETSDataTable(ds.Tables("IDA_TICKETS")))
            End If
            If (Not (ds.Tables("IDA_TICKETSLINEAS")) Is Nothing) Then
                MyBase.Tables.Add(New IDA_TICKETSLINEASDataTable(ds.Tables("IDA_TICKETSLINEAS")))
            End If
            If (Not (ds.Tables("IDA_CAJAS")) Is Nothing) Then
                MyBase.Tables.Add(New IDA_CAJASDataTable(ds.Tables("IDA_CAJAS")))
            End If
            If (Not (ds.Tables("RECEPCION")) Is Nothing) Then
                MyBase.Tables.Add(New RECEPCIONDataTable(ds.Tables("RECEPCION")))
            End If
            If (Not (ds.Tables("CABETRAS")) Is Nothing) Then
                MyBase.Tables.Add(New CABETRASDataTable(ds.Tables("CABETRAS")))
            End If
            If (Not (ds.Tables("LINETRAS")) Is Nothing) Then
                MyBase.Tables.Add(New LINETRASDataTable(ds.Tables("LINETRAS")))
            End If
            If (Not (ds.Tables("CABEPEDV")) Is Nothing) Then
                MyBase.Tables.Add(New CABEPEDVDataTable(ds.Tables("CABEPEDV")))
            End If
            If (Not (ds.Tables("LINEPEDI")) Is Nothing) Then
                MyBase.Tables.Add(New LINEPEDIDataTable(ds.Tables("LINEPEDI")))
            End If
            If (Not (ds.Tables("CABEREGU")) Is Nothing) Then
                MyBase.Tables.Add(New CABEREGUDataTable(ds.Tables("CABEREGU")))
            End If
            If (Not (ds.Tables("LINEREGU")) Is Nothing) Then
                MyBase.Tables.Add(New LINEREGUDataTable(ds.Tables("LINEREGU")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IDA_TICKETS() As IDA_TICKETSDataTable
        Get
            Return Me.tableIDA_TICKETS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IDA_TICKETSLINEAS() As IDA_TICKETSLINEASDataTable
        Get
            Return Me.tableIDA_TICKETSLINEAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IDA_CAJAS() As IDA_CAJASDataTable
        Get
            Return Me.tableIDA_CAJAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RECEPCION() As RECEPCIONDataTable
        Get
            Return Me.tableRECEPCION
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CABETRAS() As CABETRASDataTable
        Get
            Return Me.tableCABETRAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property LINETRAS() As LINETRASDataTable
        Get
            Return Me.tableLINETRAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CABEPEDV() As CABEPEDVDataTable
        Get
            Return Me.tableCABEPEDV
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property LINEPEDI() As LINEPEDIDataTable
        Get
            Return Me.tableLINEPEDI
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CABEREGU() As CABEREGUDataTable
        Get
            Return Me.tableCABEREGU
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property LINEREGU() As LINEREGUDataTable
        Get
            Return Me.tableLINEREGU
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsTPVRecepcion = CType(MyBase.Clone,dsTPVRecepcion)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("IDA_TICKETS")) Is Nothing) Then
                MyBase.Tables.Add(New IDA_TICKETSDataTable(ds.Tables("IDA_TICKETS")))
            End If
            If (Not (ds.Tables("IDA_TICKETSLINEAS")) Is Nothing) Then
                MyBase.Tables.Add(New IDA_TICKETSLINEASDataTable(ds.Tables("IDA_TICKETSLINEAS")))
            End If
            If (Not (ds.Tables("IDA_CAJAS")) Is Nothing) Then
                MyBase.Tables.Add(New IDA_CAJASDataTable(ds.Tables("IDA_CAJAS")))
            End If
            If (Not (ds.Tables("RECEPCION")) Is Nothing) Then
                MyBase.Tables.Add(New RECEPCIONDataTable(ds.Tables("RECEPCION")))
            End If
            If (Not (ds.Tables("CABETRAS")) Is Nothing) Then
                MyBase.Tables.Add(New CABETRASDataTable(ds.Tables("CABETRAS")))
            End If
            If (Not (ds.Tables("LINETRAS")) Is Nothing) Then
                MyBase.Tables.Add(New LINETRASDataTable(ds.Tables("LINETRAS")))
            End If
            If (Not (ds.Tables("CABEPEDV")) Is Nothing) Then
                MyBase.Tables.Add(New CABEPEDVDataTable(ds.Tables("CABEPEDV")))
            End If
            If (Not (ds.Tables("LINEPEDI")) Is Nothing) Then
                MyBase.Tables.Add(New LINEPEDIDataTable(ds.Tables("LINEPEDI")))
            End If
            If (Not (ds.Tables("CABEREGU")) Is Nothing) Then
                MyBase.Tables.Add(New CABEREGUDataTable(ds.Tables("CABEREGU")))
            End If
            If (Not (ds.Tables("LINEREGU")) Is Nothing) Then
                MyBase.Tables.Add(New LINEREGUDataTable(ds.Tables("LINEREGU")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableIDA_TICKETS = CType(MyBase.Tables("IDA_TICKETS"),IDA_TICKETSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableIDA_TICKETS) Is Nothing) Then
                Me.tableIDA_TICKETS.InitVars
            End If
        End If
        Me.tableIDA_TICKETSLINEAS = CType(MyBase.Tables("IDA_TICKETSLINEAS"),IDA_TICKETSLINEASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableIDA_TICKETSLINEAS) Is Nothing) Then
                Me.tableIDA_TICKETSLINEAS.InitVars
            End If
        End If
        Me.tableIDA_CAJAS = CType(MyBase.Tables("IDA_CAJAS"),IDA_CAJASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableIDA_CAJAS) Is Nothing) Then
                Me.tableIDA_CAJAS.InitVars
            End If
        End If
        Me.tableRECEPCION = CType(MyBase.Tables("RECEPCION"),RECEPCIONDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRECEPCION) Is Nothing) Then
                Me.tableRECEPCION.InitVars
            End If
        End If
        Me.tableCABETRAS = CType(MyBase.Tables("CABETRAS"),CABETRASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCABETRAS) Is Nothing) Then
                Me.tableCABETRAS.InitVars
            End If
        End If
        Me.tableLINETRAS = CType(MyBase.Tables("LINETRAS"),LINETRASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableLINETRAS) Is Nothing) Then
                Me.tableLINETRAS.InitVars
            End If
        End If
        Me.tableCABEPEDV = CType(MyBase.Tables("CABEPEDV"),CABEPEDVDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCABEPEDV) Is Nothing) Then
                Me.tableCABEPEDV.InitVars
            End If
        End If
        Me.tableLINEPEDI = CType(MyBase.Tables("LINEPEDI"),LINEPEDIDataTable)
        If (initTable = true) Then
            If (Not (Me.tableLINEPEDI) Is Nothing) Then
                Me.tableLINEPEDI.InitVars
            End If
        End If
        Me.tableCABEREGU = CType(MyBase.Tables("CABEREGU"),CABEREGUDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCABEREGU) Is Nothing) Then
                Me.tableCABEREGU.InitVars
            End If
        End If
        Me.tableLINEREGU = CType(MyBase.Tables("LINEREGU"),LINEREGUDataTable)
        If (initTable = true) Then
            If (Not (Me.tableLINEREGU) Is Nothing) Then
                Me.tableLINEREGU.InitVars
            End If
        End If
        Me.relationFK_IDA_TICKETSLINEAS_IDA_TICKETS_IDTICKET = Me.Relations("FK_IDA_TICKETSLINEAS_IDA_TICKETS_IDTICKET")
        Me.relationCABETRAS_LINETRAS = Me.Relations("CABETRAS_LINETRAS")
        Me.relationCABETRAS_LINETRAS1 = Me.Relations("CABETRAS_LINETRAS1")
        Me.relationCABEREGU_LINEREGU = Me.Relations("CABEREGU_LINEREGU")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsTPVRecepcion"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsTPVRecepcion.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableIDA_TICKETS = New IDA_TICKETSDataTable()
        MyBase.Tables.Add(Me.tableIDA_TICKETS)
        Me.tableIDA_TICKETSLINEAS = New IDA_TICKETSLINEASDataTable()
        MyBase.Tables.Add(Me.tableIDA_TICKETSLINEAS)
        Me.tableIDA_CAJAS = New IDA_CAJASDataTable()
        MyBase.Tables.Add(Me.tableIDA_CAJAS)
        Me.tableRECEPCION = New RECEPCIONDataTable()
        MyBase.Tables.Add(Me.tableRECEPCION)
        Me.tableCABETRAS = New CABETRASDataTable()
        MyBase.Tables.Add(Me.tableCABETRAS)
        Me.tableLINETRAS = New LINETRASDataTable()
        MyBase.Tables.Add(Me.tableLINETRAS)
        Me.tableCABEPEDV = New CABEPEDVDataTable()
        MyBase.Tables.Add(Me.tableCABEPEDV)
        Me.tableLINEPEDI = New LINEPEDIDataTable()
        MyBase.Tables.Add(Me.tableLINEPEDI)
        Me.tableCABEREGU = New CABEREGUDataTable()
        MyBase.Tables.Add(Me.tableCABEREGU)
        Me.tableLINEREGU = New LINEREGUDataTable()
        MyBase.Tables.Add(Me.tableLINEREGU)
        Dim fkc As Global.System.Data.ForeignKeyConstraint
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_IDA_TICKETSLINEAS_IDA_TICKETS_IDTICKET", New Global.System.Data.DataColumn() {Me.tableIDA_TICKETS.IDTICKETColumn}, New Global.System.Data.DataColumn() {Me.tableIDA_TICKETSLINEAS.IDTICKETColumn})
        Me.tableIDA_TICKETSLINEAS.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        Me.relationFK_IDA_TICKETSLINEAS_IDA_TICKETS_IDTICKET = New Global.System.Data.DataRelation("FK_IDA_TICKETSLINEAS_IDA_TICKETS_IDTICKET", New Global.System.Data.DataColumn() {Me.tableIDA_TICKETS.IDTICKETColumn}, New Global.System.Data.DataColumn() {Me.tableIDA_TICKETSLINEAS.IDTICKETColumn}, false)
        Me.Relations.Add(Me.relationFK_IDA_TICKETSLINEAS_IDA_TICKETS_IDTICKET)
        Me.relationCABETRAS_LINETRAS = New Global.System.Data.DataRelation("CABETRAS_LINETRAS", New Global.System.Data.DataColumn() {Me.tableCABETRAS.NUMLINColumn}, New Global.System.Data.DataColumn() {Me.tableLINETRAS.NUMLINColumn}, false)
        Me.Relations.Add(Me.relationCABETRAS_LINETRAS)
        Me.relationCABETRAS_LINETRAS1 = New Global.System.Data.DataRelation("CABETRAS_LINETRAS1", New Global.System.Data.DataColumn() {Me.tableCABEPEDV.NUMLINColumn}, New Global.System.Data.DataColumn() {Me.tableLINEPEDI.NUMLINColumn}, false)
        Me.Relations.Add(Me.relationCABETRAS_LINETRAS1)
        Me.relationCABEREGU_LINEREGU = New Global.System.Data.DataRelation("CABEREGU_LINEREGU", New Global.System.Data.DataColumn() {Me.tableCABEREGU.NUMLINColumn}, New Global.System.Data.DataColumn() {Me.tableLINEREGU.NUMLINColumn}, false)
        Me.Relations.Add(Me.relationCABEREGU_LINEREGU)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeIDA_TICKETS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeIDA_TICKETSLINEAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeIDA_CAJAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRECEPCION() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCABETRAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeLINETRAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCABEPEDV() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeLINEPEDI() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCABEREGU() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeLINEREGU() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsTPVRecepcion = New dsTPVRecepcion()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub IDA_TICKETSRowChangeEventHandler(ByVal sender As Object, ByVal e As IDA_TICKETSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub IDA_TICKETSLINEASRowChangeEventHandler(ByVal sender As Object, ByVal e As IDA_TICKETSLINEASRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub IDA_CAJASRowChangeEventHandler(ByVal sender As Object, ByVal e As IDA_CAJASRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RECEPCIONRowChangeEventHandler(ByVal sender As Object, ByVal e As RECEPCIONRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CABETRASRowChangeEventHandler(ByVal sender As Object, ByVal e As CABETRASRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub LINETRASRowChangeEventHandler(ByVal sender As Object, ByVal e As LINETRASRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CABEPEDVRowChangeEventHandler(ByVal sender As Object, ByVal e As CABEPEDVRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub LINEPEDIRowChangeEventHandler(ByVal sender As Object, ByVal e As LINEPEDIRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CABEREGURowChangeEventHandler(ByVal sender As Object, ByVal e As CABEREGURowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub LINEREGURowChangeEventHandler(ByVal sender As Object, ByVal e As LINEREGURowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IDA_TICKETSDataTable
        Inherits Global.System.Data.TypedTableBase(Of IDA_TICKETSRow)
        
        Private columnCAJA As Global.System.Data.DataColumn
        
        Private columnCODALM As Global.System.Data.DataColumn
        
        Private columnCODPER As Global.System.Data.DataColumn
        
        Private columnCREDITO As Global.System.Data.DataColumn
        
        Private columnFECCIERRE As Global.System.Data.DataColumn
        
        Private columnFECHA As Global.System.Data.DataColumn
        
        Private columnIDFACV As Global.System.Data.DataColumn
        
        Private columnIDTICKET As Global.System.Data.DataColumn
        
        Private columnIMPRESO As Global.System.Data.DataColumn
        
        Private columnNUMDOC As Global.System.Data.DataColumn
        
        Private columnNUMLINEAS As Global.System.Data.DataColumn
        
        Private columnPORDESC As Global.System.Data.DataColumn
        
        Private columnREPARTODOMICILIO As Global.System.Data.DataColumn
        
        Private columnTIPOCOBRO As Global.System.Data.DataColumn
        
        Private columnTOTCAMBIOS As Global.System.Data.DataColumn
        
        Private columnTOTDESC As Global.System.Data.DataColumn
        
        Private columnTOTDOC As Global.System.Data.DataColumn
        
        Private columnTOTEFECTIVO As Global.System.Data.DataColumn
        
        Private columnTOTENTREGA As Global.System.Data.DataColumn
        
        Private columnTOTENVASES As Global.System.Data.DataColumn
        
        Private columnTOTPENDIENTE As Global.System.Data.DataColumn
        
        Private columnTOTTALON As Global.System.Data.DataColumn
        
        Private columnTOTTARJETA As Global.System.Data.DataColumn
        
        Private columnTOTVALESCOBRADOS As Global.System.Data.DataColumn
        
        Private columnTOTVALESEMITIDOS As Global.System.Data.DataColumn
        
        Private columnTOTVALESPROVEEDOR As Global.System.Data.DataColumn
        
        Private columnIDALBV As Global.System.Data.DataColumn
        
        Private columnNUMTARJETA As Global.System.Data.DataColumn
        
        Private columnTOTPUNTOS As Global.System.Data.DataColumn
        
        Private columnCANJEPUNTOS As Global.System.Data.DataColumn
        
        Private columnCANJEVALES As Global.System.Data.DataColumn
        
        Private columnCODCLI As Global.System.Data.DataColumn
        
        Private columnFIDELIZADTO As Global.System.Data.DataColumn
        
        Private columnFIDELIZALOTERIA As Global.System.Data.DataColumn
        
        Private columnFIDELIZAPUNTOS As Global.System.Data.DataColumn
        
        Private columnFIDELIZAVALES As Global.System.Data.DataColumn
        
        Private columnPORPRONTO As Global.System.Data.DataColumn
        
        Private columnTIPDOC As Global.System.Data.DataColumn
        
        Private columnTOTPRONTO As Global.System.Data.DataColumn
        
        Private columnTOTREC As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IDA_TICKETS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAJAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAJA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODALMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODALM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREDITOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREDITO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECCIERREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECCIERRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDFACVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDFACV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDTICKETColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDTICKET
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMDOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMDOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMLINEASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMLINEAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PORDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REPARTODOMICILIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPARTODOMICILIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOCOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTCAMBIOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTCAMBIOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTDOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTDOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTEFECTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTEFECTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTENTREGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTENTREGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTENVASESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTENVASES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTPENDIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTPENDIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTTALONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTTALON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTTARJETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTTARJETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTVALESCOBRADOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTVALESCOBRADOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTVALESEMITIDOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTVALESEMITIDOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTVALESPROVEEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTVALESPROVEEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDALBVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDALBV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMTARJETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMTARJETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTPUNTOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTPUNTOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANJEPUNTOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANJEPUNTOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANJEVALESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANJEVALES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCLIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCLI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIDELIZADTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIDELIZADTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIDELIZALOTERIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIDELIZALOTERIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIDELIZAPUNTOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIDELIZAPUNTOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIDELIZAVALESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIDELIZAVALES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PORPRONTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORPRONTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPDOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPDOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTPRONTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTPRONTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTRECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTREC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IDA_TICKETSRow
            Get
                Return CType(Me.Rows(index),IDA_TICKETSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IDA_TICKETSRowChanging As IDA_TICKETSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IDA_TICKETSRowChanged As IDA_TICKETSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IDA_TICKETSRowDeleting As IDA_TICKETSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IDA_TICKETSRowDeleted As IDA_TICKETSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddIDA_TICKETSRow(ByVal row As IDA_TICKETSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddIDA_TICKETSRow( _
                    ByVal CAJA As Integer,  _
                    ByVal CODALM As String,  _
                    ByVal CODPER As String,  _
                    ByVal CREDITO As Boolean,  _
                    ByVal FECCIERRE As Date,  _
                    ByVal FECHA As Date,  _
                    ByVal IDFACV As Decimal,  _
                    ByVal IMPRESO As Boolean,  _
                    ByVal NUMDOC As Integer,  _
                    ByVal NUMLINEAS As Integer,  _
                    ByVal PORDESC As Decimal,  _
                    ByVal REPARTODOMICILIO As Boolean,  _
                    ByVal TIPOCOBRO As Integer,  _
                    ByVal TOTCAMBIOS As Double,  _
                    ByVal TOTDESC As Double,  _
                    ByVal TOTDOC As Double,  _
                    ByVal TOTEFECTIVO As Double,  _
                    ByVal TOTENTREGA As Double,  _
                    ByVal TOTENVASES As Double,  _
                    ByVal TOTPENDIENTE As Double,  _
                    ByVal TOTTALON As Double,  _
                    ByVal TOTTARJETA As Double,  _
                    ByVal TOTVALESCOBRADOS As Double,  _
                    ByVal TOTVALESEMITIDOS As Double,  _
                    ByVal TOTVALESPROVEEDOR As Double,  _
                    ByVal IDALBV As Decimal,  _
                    ByVal NUMTARJETA As Double,  _
                    ByVal TOTPUNTOS As Double,  _
                    ByVal CANJEPUNTOS As Double,  _
                    ByVal CANJEVALES As Double,  _
                    ByVal CODCLI As String,  _
                    ByVal FIDELIZADTO As Double,  _
                    ByVal FIDELIZALOTERIA As Double,  _
                    ByVal FIDELIZAPUNTOS As Double,  _
                    ByVal FIDELIZAVALES As Double,  _
                    ByVal PORPRONTO As Decimal,  _
                    ByVal TIPDOC As Integer,  _
                    ByVal TOTPRONTO As Double,  _
                    ByVal TOTREC As Double) As IDA_TICKETSRow
            Dim rowIDA_TICKETSRow As IDA_TICKETSRow = CType(Me.NewRow,IDA_TICKETSRow)
            Dim columnValuesArray() As Object = New Object() {CAJA, CODALM, CODPER, CREDITO, FECCIERRE, FECHA, IDFACV, Nothing, IMPRESO, NUMDOC, NUMLINEAS, PORDESC, REPARTODOMICILIO, TIPOCOBRO, TOTCAMBIOS, TOTDESC, TOTDOC, TOTEFECTIVO, TOTENTREGA, TOTENVASES, TOTPENDIENTE, TOTTALON, TOTTARJETA, TOTVALESCOBRADOS, TOTVALESEMITIDOS, TOTVALESPROVEEDOR, IDALBV, NUMTARJETA, TOTPUNTOS, CANJEPUNTOS, CANJEVALES, CODCLI, FIDELIZADTO, FIDELIZALOTERIA, FIDELIZAPUNTOS, FIDELIZAVALES, PORPRONTO, TIPDOC, TOTPRONTO, TOTREC}
            rowIDA_TICKETSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIDA_TICKETSRow)
            Return rowIDA_TICKETSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByIDTICKET(ByVal IDTICKET As Integer) As IDA_TICKETSRow
            Return CType(Me.Rows.Find(New Object() {IDTICKET}),IDA_TICKETSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IDA_TICKETSDataTable = CType(MyBase.Clone,IDA_TICKETSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IDA_TICKETSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCAJA = MyBase.Columns("CAJA")
            Me.columnCODALM = MyBase.Columns("CODALM")
            Me.columnCODPER = MyBase.Columns("CODPER")
            Me.columnCREDITO = MyBase.Columns("CREDITO")
            Me.columnFECCIERRE = MyBase.Columns("FECCIERRE")
            Me.columnFECHA = MyBase.Columns("FECHA")
            Me.columnIDFACV = MyBase.Columns("IDFACV")
            Me.columnIDTICKET = MyBase.Columns("IDTICKET")
            Me.columnIMPRESO = MyBase.Columns("IMPRESO")
            Me.columnNUMDOC = MyBase.Columns("NUMDOC")
            Me.columnNUMLINEAS = MyBase.Columns("NUMLINEAS")
            Me.columnPORDESC = MyBase.Columns("PORDESC")
            Me.columnREPARTODOMICILIO = MyBase.Columns("REPARTODOMICILIO")
            Me.columnTIPOCOBRO = MyBase.Columns("TIPOCOBRO")
            Me.columnTOTCAMBIOS = MyBase.Columns("TOTCAMBIOS")
            Me.columnTOTDESC = MyBase.Columns("TOTDESC")
            Me.columnTOTDOC = MyBase.Columns("TOTDOC")
            Me.columnTOTEFECTIVO = MyBase.Columns("TOTEFECTIVO")
            Me.columnTOTENTREGA = MyBase.Columns("TOTENTREGA")
            Me.columnTOTENVASES = MyBase.Columns("TOTENVASES")
            Me.columnTOTPENDIENTE = MyBase.Columns("TOTPENDIENTE")
            Me.columnTOTTALON = MyBase.Columns("TOTTALON")
            Me.columnTOTTARJETA = MyBase.Columns("TOTTARJETA")
            Me.columnTOTVALESCOBRADOS = MyBase.Columns("TOTVALESCOBRADOS")
            Me.columnTOTVALESEMITIDOS = MyBase.Columns("TOTVALESEMITIDOS")
            Me.columnTOTVALESPROVEEDOR = MyBase.Columns("TOTVALESPROVEEDOR")
            Me.columnIDALBV = MyBase.Columns("IDALBV")
            Me.columnNUMTARJETA = MyBase.Columns("NUMTARJETA")
            Me.columnTOTPUNTOS = MyBase.Columns("TOTPUNTOS")
            Me.columnCANJEPUNTOS = MyBase.Columns("CANJEPUNTOS")
            Me.columnCANJEVALES = MyBase.Columns("CANJEVALES")
            Me.columnCODCLI = MyBase.Columns("CODCLI")
            Me.columnFIDELIZADTO = MyBase.Columns("FIDELIZADTO")
            Me.columnFIDELIZALOTERIA = MyBase.Columns("FIDELIZALOTERIA")
            Me.columnFIDELIZAPUNTOS = MyBase.Columns("FIDELIZAPUNTOS")
            Me.columnFIDELIZAVALES = MyBase.Columns("FIDELIZAVALES")
            Me.columnPORPRONTO = MyBase.Columns("PORPRONTO")
            Me.columnTIPDOC = MyBase.Columns("TIPDOC")
            Me.columnTOTPRONTO = MyBase.Columns("TOTPRONTO")
            Me.columnTOTREC = MyBase.Columns("TOTREC")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCAJA = New Global.System.Data.DataColumn("CAJA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAJA)
            Me.columnCODALM = New Global.System.Data.DataColumn("CODALM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODALM)
            Me.columnCODPER = New Global.System.Data.DataColumn("CODPER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPER)
            Me.columnCREDITO = New Global.System.Data.DataColumn("CREDITO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREDITO)
            Me.columnFECCIERRE = New Global.System.Data.DataColumn("FECCIERRE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECCIERRE)
            Me.columnFECHA = New Global.System.Data.DataColumn("FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA)
            Me.columnIDFACV = New Global.System.Data.DataColumn("IDFACV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDFACV)
            Me.columnIDTICKET = New Global.System.Data.DataColumn("IDTICKET", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDTICKET)
            Me.columnIMPRESO = New Global.System.Data.DataColumn("IMPRESO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPRESO)
            Me.columnNUMDOC = New Global.System.Data.DataColumn("NUMDOC", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMDOC)
            Me.columnNUMLINEAS = New Global.System.Data.DataColumn("NUMLINEAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMLINEAS)
            Me.columnPORDESC = New Global.System.Data.DataColumn("PORDESC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORDESC)
            Me.columnREPARTODOMICILIO = New Global.System.Data.DataColumn("REPARTODOMICILIO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPARTODOMICILIO)
            Me.columnTIPOCOBRO = New Global.System.Data.DataColumn("TIPOCOBRO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOCOBRO)
            Me.columnTOTCAMBIOS = New Global.System.Data.DataColumn("TOTCAMBIOS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTCAMBIOS)
            Me.columnTOTDESC = New Global.System.Data.DataColumn("TOTDESC", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTDESC)
            Me.columnTOTDOC = New Global.System.Data.DataColumn("TOTDOC", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTDOC)
            Me.columnTOTEFECTIVO = New Global.System.Data.DataColumn("TOTEFECTIVO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTEFECTIVO)
            Me.columnTOTENTREGA = New Global.System.Data.DataColumn("TOTENTREGA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTENTREGA)
            Me.columnTOTENVASES = New Global.System.Data.DataColumn("TOTENVASES", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTENVASES)
            Me.columnTOTPENDIENTE = New Global.System.Data.DataColumn("TOTPENDIENTE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTPENDIENTE)
            Me.columnTOTTALON = New Global.System.Data.DataColumn("TOTTALON", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTTALON)
            Me.columnTOTTARJETA = New Global.System.Data.DataColumn("TOTTARJETA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTTARJETA)
            Me.columnTOTVALESCOBRADOS = New Global.System.Data.DataColumn("TOTVALESCOBRADOS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTVALESCOBRADOS)
            Me.columnTOTVALESEMITIDOS = New Global.System.Data.DataColumn("TOTVALESEMITIDOS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTVALESEMITIDOS)
            Me.columnTOTVALESPROVEEDOR = New Global.System.Data.DataColumn("TOTVALESPROVEEDOR", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTVALESPROVEEDOR)
            Me.columnIDALBV = New Global.System.Data.DataColumn("IDALBV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDALBV)
            Me.columnNUMTARJETA = New Global.System.Data.DataColumn("NUMTARJETA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMTARJETA)
            Me.columnTOTPUNTOS = New Global.System.Data.DataColumn("TOTPUNTOS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTPUNTOS)
            Me.columnCANJEPUNTOS = New Global.System.Data.DataColumn("CANJEPUNTOS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANJEPUNTOS)
            Me.columnCANJEVALES = New Global.System.Data.DataColumn("CANJEVALES", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANJEVALES)
            Me.columnCODCLI = New Global.System.Data.DataColumn("CODCLI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCLI)
            Me.columnFIDELIZADTO = New Global.System.Data.DataColumn("FIDELIZADTO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIDELIZADTO)
            Me.columnFIDELIZALOTERIA = New Global.System.Data.DataColumn("FIDELIZALOTERIA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIDELIZALOTERIA)
            Me.columnFIDELIZAPUNTOS = New Global.System.Data.DataColumn("FIDELIZAPUNTOS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIDELIZAPUNTOS)
            Me.columnFIDELIZAVALES = New Global.System.Data.DataColumn("FIDELIZAVALES", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIDELIZAVALES)
            Me.columnPORPRONTO = New Global.System.Data.DataColumn("PORPRONTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORPRONTO)
            Me.columnTIPDOC = New Global.System.Data.DataColumn("TIPDOC", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPDOC)
            Me.columnTOTPRONTO = New Global.System.Data.DataColumn("TOTPRONTO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTPRONTO)
            Me.columnTOTREC = New Global.System.Data.DataColumn("TOTREC", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTREC)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnIDTICKET}, true))
            Me.columnCODALM.AllowDBNull = false
            Me.columnCODALM.MaxLength = 8
            Me.columnCODPER.MaxLength = 8
            Me.columnFECCIERRE.AllowDBNull = false
            Me.columnIDTICKET.AutoIncrement = true
            Me.columnIDTICKET.AutoIncrementSeed = -1
            Me.columnIDTICKET.AutoIncrementStep = -1
            Me.columnIDTICKET.AllowDBNull = false
            Me.columnIDTICKET.ReadOnly = true
            Me.columnIDTICKET.Unique = true
            Me.columnNUMTARJETA.DefaultValue = CType(0R,Double)
            Me.columnCODCLI.MaxLength = 8
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewIDA_TICKETSRow() As IDA_TICKETSRow
            Return CType(Me.NewRow,IDA_TICKETSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IDA_TICKETSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IDA_TICKETSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IDA_TICKETSRowChangedEvent) Is Nothing) Then
                RaiseEvent IDA_TICKETSRowChanged(Me, New IDA_TICKETSRowChangeEvent(CType(e.Row,IDA_TICKETSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IDA_TICKETSRowChangingEvent) Is Nothing) Then
                RaiseEvent IDA_TICKETSRowChanging(Me, New IDA_TICKETSRowChangeEvent(CType(e.Row,IDA_TICKETSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IDA_TICKETSRowDeletedEvent) Is Nothing) Then
                RaiseEvent IDA_TICKETSRowDeleted(Me, New IDA_TICKETSRowChangeEvent(CType(e.Row,IDA_TICKETSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IDA_TICKETSRowDeletingEvent) Is Nothing) Then
                RaiseEvent IDA_TICKETSRowDeleting(Me, New IDA_TICKETSRowChangeEvent(CType(e.Row,IDA_TICKETSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveIDA_TICKETSRow(ByVal row As IDA_TICKETSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTPVRecepcion = New dsTPVRecepcion()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IDA_TICKETSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IDA_TICKETSLINEASDataTable
        Inherits Global.System.Data.TypedTableBase(Of IDA_TICKETSLINEASRow)
        
        Private columnCANTIDAD As Global.System.Data.DataColumn
        
        Private columnCODART As Global.System.Data.DataColumn
        
        Private columnCODPER As Global.System.Data.DataColumn
        
        Private columnDESC As Global.System.Data.DataColumn
        
        Private columnDESCLIN As Global.System.Data.DataColumn
        
        Private columnIDLINEA As Global.System.Data.DataColumn
        
        Private columnIDTICKET As Global.System.Data.DataColumn
        
        Private columnNUMLINEA As Global.System.Data.DataColumn
        
        Private columnPRCMANUAL As Global.System.Data.DataColumn
        
        Private columnPRECIO As Global.System.Data.DataColumn
        
        Private columnPROMO As Global.System.Data.DataColumn
        
        Private columnTIPIVA As Global.System.Data.DataColumn
        
        Private columnTOTLIN As Global.System.Data.DataColumn
        
        Private columnARTICULODIRECTO As Global.System.Data.DataColumn
        
        Private columnPESOBASCULA As Global.System.Data.DataColumn
        
        Private columnPORFIDELIZACION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IDA_TICKETSLINEAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODARTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODART
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCLINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCLIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDTICKETColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDTICKET
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRCMANUALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRCMANUAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTLINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTLIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ARTICULODIRECTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnARTICULODIRECTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PESOBASCULAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESOBASCULA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PORFIDELIZACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORFIDELIZACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IDA_TICKETSLINEASRow
            Get
                Return CType(Me.Rows(index),IDA_TICKETSLINEASRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IDA_TICKETSLINEASRowChanging As IDA_TICKETSLINEASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IDA_TICKETSLINEASRowChanged As IDA_TICKETSLINEASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IDA_TICKETSLINEASRowDeleting As IDA_TICKETSLINEASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IDA_TICKETSLINEASRowDeleted As IDA_TICKETSLINEASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddIDA_TICKETSLINEASRow(ByVal row As IDA_TICKETSLINEASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddIDA_TICKETSLINEASRow(ByVal CANTIDAD As Double, ByVal CODART As String, ByVal CODPER As String, ByVal DESC As Decimal, ByVal DESCLIN As String, ByVal parentIDA_TICKETSRowByFK_IDA_TICKETSLINEAS_IDA_TICKETS_IDTICKET As IDA_TICKETSRow, ByVal NUMLINEA As Integer, ByVal PRCMANUAL As Boolean, ByVal PRECIO As Double, ByVal PROMO As Boolean, ByVal TIPIVA As String, ByVal TOTLIN As Double, ByVal ARTICULODIRECTO As String, ByVal PESOBASCULA As Double, ByVal PORFIDELIZACION As Decimal) As IDA_TICKETSLINEASRow
            Dim rowIDA_TICKETSLINEASRow As IDA_TICKETSLINEASRow = CType(Me.NewRow,IDA_TICKETSLINEASRow)
            Dim columnValuesArray() As Object = New Object() {CANTIDAD, CODART, CODPER, DESC, DESCLIN, Nothing, Nothing, NUMLINEA, PRCMANUAL, PRECIO, PROMO, TIPIVA, TOTLIN, ARTICULODIRECTO, PESOBASCULA, PORFIDELIZACION}
            If (Not (parentIDA_TICKETSRowByFK_IDA_TICKETSLINEAS_IDA_TICKETS_IDTICKET) Is Nothing) Then
                columnValuesArray(6) = parentIDA_TICKETSRowByFK_IDA_TICKETSLINEAS_IDA_TICKETS_IDTICKET(7)
            End If
            rowIDA_TICKETSLINEASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIDA_TICKETSLINEASRow)
            Return rowIDA_TICKETSLINEASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByIDLINEA(ByVal IDLINEA As Integer) As IDA_TICKETSLINEASRow
            Return CType(Me.Rows.Find(New Object() {IDLINEA}),IDA_TICKETSLINEASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IDA_TICKETSLINEASDataTable = CType(MyBase.Clone,IDA_TICKETSLINEASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IDA_TICKETSLINEASDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCANTIDAD = MyBase.Columns("CANTIDAD")
            Me.columnCODART = MyBase.Columns("CODART")
            Me.columnCODPER = MyBase.Columns("CODPER")
            Me.columnDESC = MyBase.Columns("DESC")
            Me.columnDESCLIN = MyBase.Columns("DESCLIN")
            Me.columnIDLINEA = MyBase.Columns("IDLINEA")
            Me.columnIDTICKET = MyBase.Columns("IDTICKET")
            Me.columnNUMLINEA = MyBase.Columns("NUMLINEA")
            Me.columnPRCMANUAL = MyBase.Columns("PRCMANUAL")
            Me.columnPRECIO = MyBase.Columns("PRECIO")
            Me.columnPROMO = MyBase.Columns("PROMO")
            Me.columnTIPIVA = MyBase.Columns("TIPIVA")
            Me.columnTOTLIN = MyBase.Columns("TOTLIN")
            Me.columnARTICULODIRECTO = MyBase.Columns("ARTICULODIRECTO")
            Me.columnPESOBASCULA = MyBase.Columns("PESOBASCULA")
            Me.columnPORFIDELIZACION = MyBase.Columns("PORFIDELIZACION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCANTIDAD = New Global.System.Data.DataColumn("CANTIDAD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD)
            Me.columnCODART = New Global.System.Data.DataColumn("CODART", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODART)
            Me.columnCODPER = New Global.System.Data.DataColumn("CODPER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPER)
            Me.columnDESC = New Global.System.Data.DataColumn("DESC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC)
            Me.columnDESCLIN = New Global.System.Data.DataColumn("DESCLIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCLIN)
            Me.columnIDLINEA = New Global.System.Data.DataColumn("IDLINEA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDLINEA)
            Me.columnIDTICKET = New Global.System.Data.DataColumn("IDTICKET", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDTICKET)
            Me.columnNUMLINEA = New Global.System.Data.DataColumn("NUMLINEA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMLINEA)
            Me.columnPRCMANUAL = New Global.System.Data.DataColumn("PRCMANUAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRCMANUAL)
            Me.columnPRECIO = New Global.System.Data.DataColumn("PRECIO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIO)
            Me.columnPROMO = New Global.System.Data.DataColumn("PROMO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROMO)
            Me.columnTIPIVA = New Global.System.Data.DataColumn("TIPIVA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPIVA)
            Me.columnTOTLIN = New Global.System.Data.DataColumn("TOTLIN", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTLIN)
            Me.columnARTICULODIRECTO = New Global.System.Data.DataColumn("ARTICULODIRECTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnARTICULODIRECTO)
            Me.columnPESOBASCULA = New Global.System.Data.DataColumn("PESOBASCULA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESOBASCULA)
            Me.columnPORFIDELIZACION = New Global.System.Data.DataColumn("PORFIDELIZACION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORFIDELIZACION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnIDLINEA}, true))
            Me.columnCODART.AllowDBNull = false
            Me.columnCODART.MaxLength = 15
            Me.columnCODPER.MaxLength = 8
            Me.columnDESCLIN.MaxLength = 50
            Me.columnIDLINEA.AutoIncrement = true
            Me.columnIDLINEA.AutoIncrementSeed = -1
            Me.columnIDLINEA.AutoIncrementStep = -1
            Me.columnIDLINEA.AllowDBNull = false
            Me.columnIDLINEA.ReadOnly = true
            Me.columnIDLINEA.Unique = true
            Me.columnIDTICKET.AllowDBNull = false
            Me.columnNUMLINEA.AllowDBNull = false
            Me.columnTIPIVA.MaxLength = 8
            Me.columnARTICULODIRECTO.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewIDA_TICKETSLINEASRow() As IDA_TICKETSLINEASRow
            Return CType(Me.NewRow,IDA_TICKETSLINEASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IDA_TICKETSLINEASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IDA_TICKETSLINEASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IDA_TICKETSLINEASRowChangedEvent) Is Nothing) Then
                RaiseEvent IDA_TICKETSLINEASRowChanged(Me, New IDA_TICKETSLINEASRowChangeEvent(CType(e.Row,IDA_TICKETSLINEASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IDA_TICKETSLINEASRowChangingEvent) Is Nothing) Then
                RaiseEvent IDA_TICKETSLINEASRowChanging(Me, New IDA_TICKETSLINEASRowChangeEvent(CType(e.Row,IDA_TICKETSLINEASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IDA_TICKETSLINEASRowDeletedEvent) Is Nothing) Then
                RaiseEvent IDA_TICKETSLINEASRowDeleted(Me, New IDA_TICKETSLINEASRowChangeEvent(CType(e.Row,IDA_TICKETSLINEASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IDA_TICKETSLINEASRowDeletingEvent) Is Nothing) Then
                RaiseEvent IDA_TICKETSLINEASRowDeleting(Me, New IDA_TICKETSLINEASRowChangeEvent(CType(e.Row,IDA_TICKETSLINEASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveIDA_TICKETSLINEASRow(ByVal row As IDA_TICKETSLINEASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTPVRecepcion = New dsTPVRecepcion()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IDA_TICKETSLINEASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IDA_CAJASDataTable
        Inherits Global.System.Data.TypedTableBase(Of IDA_CAJASRow)
        
        Private columnCAJA As Global.System.Data.DataColumn
        
        Private columnCOBROSCLIENTE As Global.System.Data.DataColumn
        
        Private columnCODALM As Global.System.Data.DataColumn
        
        Private columnEFECTIVO As Global.System.Data.DataColumn
        
        Private columnENTRADACAMBIOS As Global.System.Data.DataColumn
        
        Private columnENVASES As Global.System.Data.DataColumn
        
        Private columnFECHA As Global.System.Data.DataColumn
        
        Private columnIDCAJA As Global.System.Data.DataColumn
        
        Private columnLINEAS As Global.System.Data.DataColumn
        
        Private columnPAGOSPROVEEDOR As Global.System.Data.DataColumn
        
        Private columnPENDIENTECOBRO As Global.System.Data.DataColumn
        
        Private columnREPARTODOMICILIO As Global.System.Data.DataColumn
        
        Private columnRETIRADAFONDOS As Global.System.Data.DataColumn
        
        Private columnTALON As Global.System.Data.DataColumn
        
        Private columnTARJETA As Global.System.Data.DataColumn
        
        Private columnTICKETS As Global.System.Data.DataColumn
        
        Private columnVALESCOBRADOS As Global.System.Data.DataColumn
        
        Private columnVALESEMITIDOS As Global.System.Data.DataColumn
        
        Private columnVALESPROVEEDOR As Global.System.Data.DataColumn
        
        Private columnVENTA As Global.System.Data.DataColumn
        
        Private columnINGRESO As Global.System.Data.DataColumn
        
        Private columnNUMALBARANES As Global.System.Data.DataColumn
        
        Private columnTOTALBARANES As Global.System.Data.DataColumn
        
        Private columnTOTFACTURAS As Global.System.Data.DataColumn
        
        Private columnTOTPRONTO As Global.System.Data.DataColumn
        
        Private columnTOTREC As Global.System.Data.DataColumn
        
        Private columnNUMFACTURAS As Global.System.Data.DataColumn
        
        Private columnVALESCANJEADOS As Global.System.Data.DataColumn
        
        Private columnPENDIENTECOBROCREDITO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IDA_CAJAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAJAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAJA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COBROSCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOBROSCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODALMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODALM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EFECTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEFECTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENTRADACAMBIOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENTRADACAMBIOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENVASESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENVASES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDCAJAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDCAJA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINEASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINEAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAGOSPROVEEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAGOSPROVEEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PENDIENTECOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPENDIENTECOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REPARTODOMICILIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPARTODOMICILIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RETIRADAFONDOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRETIRADAFONDOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TALONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTALON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TARJETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTARJETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TICKETSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTICKETS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VALESCOBRADOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALESCOBRADOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VALESEMITIDOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALESEMITIDOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VALESPROVEEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALESPROVEEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMALBARANESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMALBARANES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALBARANESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALBARANES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTFACTURASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTFACTURAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTPRONTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTPRONTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTRECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTREC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMFACTURASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMFACTURAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VALESCANJEADOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALESCANJEADOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PENDIENTECOBROCREDITOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPENDIENTECOBROCREDITO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IDA_CAJASRow
            Get
                Return CType(Me.Rows(index),IDA_CAJASRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IDA_CAJASRowChanging As IDA_CAJASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IDA_CAJASRowChanged As IDA_CAJASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IDA_CAJASRowDeleting As IDA_CAJASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IDA_CAJASRowDeleted As IDA_CAJASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddIDA_CAJASRow(ByVal row As IDA_CAJASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddIDA_CAJASRow( _
                    ByVal CAJA As Integer,  _
                    ByVal COBROSCLIENTE As Double,  _
                    ByVal CODALM As String,  _
                    ByVal EFECTIVO As Double,  _
                    ByVal ENTRADACAMBIOS As Double,  _
                    ByVal ENVASES As Double,  _
                    ByVal FECHA As Date,  _
                    ByVal LINEAS As Integer,  _
                    ByVal PAGOSPROVEEDOR As Double,  _
                    ByVal PENDIENTECOBRO As Double,  _
                    ByVal REPARTODOMICILIO As Double,  _
                    ByVal RETIRADAFONDOS As Double,  _
                    ByVal TALON As Double,  _
                    ByVal TARJETA As Double,  _
                    ByVal TICKETS As Integer,  _
                    ByVal VALESCOBRADOS As Double,  _
                    ByVal VALESEMITIDOS As Double,  _
                    ByVal VALESPROVEEDOR As Double,  _
                    ByVal VENTA As Double,  _
                    ByVal INGRESO As Double,  _
                    ByVal NUMALBARANES As Integer,  _
                    ByVal TOTALBARANES As Double,  _
                    ByVal TOTFACTURAS As Double,  _
                    ByVal TOTPRONTO As Double,  _
                    ByVal TOTREC As Double,  _
                    ByVal NUMFACTURAS As Integer,  _
                    ByVal VALESCANJEADOS As Double,  _
                    ByVal PENDIENTECOBROCREDITO As Double) As IDA_CAJASRow
            Dim rowIDA_CAJASRow As IDA_CAJASRow = CType(Me.NewRow,IDA_CAJASRow)
            Dim columnValuesArray() As Object = New Object() {CAJA, COBROSCLIENTE, CODALM, EFECTIVO, ENTRADACAMBIOS, ENVASES, FECHA, Nothing, LINEAS, PAGOSPROVEEDOR, PENDIENTECOBRO, REPARTODOMICILIO, RETIRADAFONDOS, TALON, TARJETA, TICKETS, VALESCOBRADOS, VALESEMITIDOS, VALESPROVEEDOR, VENTA, INGRESO, NUMALBARANES, TOTALBARANES, TOTFACTURAS, TOTPRONTO, TOTREC, NUMFACTURAS, VALESCANJEADOS, PENDIENTECOBROCREDITO}
            rowIDA_CAJASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIDA_CAJASRow)
            Return rowIDA_CAJASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByIDCAJA(ByVal IDCAJA As Integer) As IDA_CAJASRow
            Return CType(Me.Rows.Find(New Object() {IDCAJA}),IDA_CAJASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IDA_CAJASDataTable = CType(MyBase.Clone,IDA_CAJASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IDA_CAJASDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCAJA = MyBase.Columns("CAJA")
            Me.columnCOBROSCLIENTE = MyBase.Columns("COBROSCLIENTE")
            Me.columnCODALM = MyBase.Columns("CODALM")
            Me.columnEFECTIVO = MyBase.Columns("EFECTIVO")
            Me.columnENTRADACAMBIOS = MyBase.Columns("ENTRADACAMBIOS")
            Me.columnENVASES = MyBase.Columns("ENVASES")
            Me.columnFECHA = MyBase.Columns("FECHA")
            Me.columnIDCAJA = MyBase.Columns("IDCAJA")
            Me.columnLINEAS = MyBase.Columns("LINEAS")
            Me.columnPAGOSPROVEEDOR = MyBase.Columns("PAGOSPROVEEDOR")
            Me.columnPENDIENTECOBRO = MyBase.Columns("PENDIENTECOBRO")
            Me.columnREPARTODOMICILIO = MyBase.Columns("REPARTODOMICILIO")
            Me.columnRETIRADAFONDOS = MyBase.Columns("RETIRADAFONDOS")
            Me.columnTALON = MyBase.Columns("TALON")
            Me.columnTARJETA = MyBase.Columns("TARJETA")
            Me.columnTICKETS = MyBase.Columns("TICKETS")
            Me.columnVALESCOBRADOS = MyBase.Columns("VALESCOBRADOS")
            Me.columnVALESEMITIDOS = MyBase.Columns("VALESEMITIDOS")
            Me.columnVALESPROVEEDOR = MyBase.Columns("VALESPROVEEDOR")
            Me.columnVENTA = MyBase.Columns("VENTA")
            Me.columnINGRESO = MyBase.Columns("INGRESO")
            Me.columnNUMALBARANES = MyBase.Columns("NUMALBARANES")
            Me.columnTOTALBARANES = MyBase.Columns("TOTALBARANES")
            Me.columnTOTFACTURAS = MyBase.Columns("TOTFACTURAS")
            Me.columnTOTPRONTO = MyBase.Columns("TOTPRONTO")
            Me.columnTOTREC = MyBase.Columns("TOTREC")
            Me.columnNUMFACTURAS = MyBase.Columns("NUMFACTURAS")
            Me.columnVALESCANJEADOS = MyBase.Columns("VALESCANJEADOS")
            Me.columnPENDIENTECOBROCREDITO = MyBase.Columns("PENDIENTECOBROCREDITO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCAJA = New Global.System.Data.DataColumn("CAJA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAJA)
            Me.columnCOBROSCLIENTE = New Global.System.Data.DataColumn("COBROSCLIENTE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOBROSCLIENTE)
            Me.columnCODALM = New Global.System.Data.DataColumn("CODALM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODALM)
            Me.columnEFECTIVO = New Global.System.Data.DataColumn("EFECTIVO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEFECTIVO)
            Me.columnENTRADACAMBIOS = New Global.System.Data.DataColumn("ENTRADACAMBIOS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENTRADACAMBIOS)
            Me.columnENVASES = New Global.System.Data.DataColumn("ENVASES", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENVASES)
            Me.columnFECHA = New Global.System.Data.DataColumn("FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA)
            Me.columnIDCAJA = New Global.System.Data.DataColumn("IDCAJA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDCAJA)
            Me.columnLINEAS = New Global.System.Data.DataColumn("LINEAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINEAS)
            Me.columnPAGOSPROVEEDOR = New Global.System.Data.DataColumn("PAGOSPROVEEDOR", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAGOSPROVEEDOR)
            Me.columnPENDIENTECOBRO = New Global.System.Data.DataColumn("PENDIENTECOBRO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPENDIENTECOBRO)
            Me.columnREPARTODOMICILIO = New Global.System.Data.DataColumn("REPARTODOMICILIO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPARTODOMICILIO)
            Me.columnRETIRADAFONDOS = New Global.System.Data.DataColumn("RETIRADAFONDOS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRETIRADAFONDOS)
            Me.columnTALON = New Global.System.Data.DataColumn("TALON", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTALON)
            Me.columnTARJETA = New Global.System.Data.DataColumn("TARJETA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTARJETA)
            Me.columnTICKETS = New Global.System.Data.DataColumn("TICKETS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTICKETS)
            Me.columnVALESCOBRADOS = New Global.System.Data.DataColumn("VALESCOBRADOS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALESCOBRADOS)
            Me.columnVALESEMITIDOS = New Global.System.Data.DataColumn("VALESEMITIDOS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALESEMITIDOS)
            Me.columnVALESPROVEEDOR = New Global.System.Data.DataColumn("VALESPROVEEDOR", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALESPROVEEDOR)
            Me.columnVENTA = New Global.System.Data.DataColumn("VENTA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENTA)
            Me.columnINGRESO = New Global.System.Data.DataColumn("INGRESO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINGRESO)
            Me.columnNUMALBARANES = New Global.System.Data.DataColumn("NUMALBARANES", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMALBARANES)
            Me.columnTOTALBARANES = New Global.System.Data.DataColumn("TOTALBARANES", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALBARANES)
            Me.columnTOTFACTURAS = New Global.System.Data.DataColumn("TOTFACTURAS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTFACTURAS)
            Me.columnTOTPRONTO = New Global.System.Data.DataColumn("TOTPRONTO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTPRONTO)
            Me.columnTOTREC = New Global.System.Data.DataColumn("TOTREC", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTREC)
            Me.columnNUMFACTURAS = New Global.System.Data.DataColumn("NUMFACTURAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMFACTURAS)
            Me.columnVALESCANJEADOS = New Global.System.Data.DataColumn("VALESCANJEADOS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALESCANJEADOS)
            Me.columnPENDIENTECOBROCREDITO = New Global.System.Data.DataColumn("PENDIENTECOBROCREDITO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPENDIENTECOBROCREDITO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnIDCAJA}, true))
            Me.columnCAJA.AllowDBNull = false
            Me.columnCODALM.AllowDBNull = false
            Me.columnCODALM.MaxLength = 8
            Me.columnFECHA.AllowDBNull = false
            Me.columnIDCAJA.AutoIncrement = true
            Me.columnIDCAJA.AutoIncrementSeed = -1
            Me.columnIDCAJA.AutoIncrementStep = -1
            Me.columnIDCAJA.AllowDBNull = false
            Me.columnIDCAJA.ReadOnly = true
            Me.columnIDCAJA.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewIDA_CAJASRow() As IDA_CAJASRow
            Return CType(Me.NewRow,IDA_CAJASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IDA_CAJASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IDA_CAJASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IDA_CAJASRowChangedEvent) Is Nothing) Then
                RaiseEvent IDA_CAJASRowChanged(Me, New IDA_CAJASRowChangeEvent(CType(e.Row,IDA_CAJASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IDA_CAJASRowChangingEvent) Is Nothing) Then
                RaiseEvent IDA_CAJASRowChanging(Me, New IDA_CAJASRowChangeEvent(CType(e.Row,IDA_CAJASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IDA_CAJASRowDeletedEvent) Is Nothing) Then
                RaiseEvent IDA_CAJASRowDeleted(Me, New IDA_CAJASRowChangeEvent(CType(e.Row,IDA_CAJASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IDA_CAJASRowDeletingEvent) Is Nothing) Then
                RaiseEvent IDA_CAJASRowDeleting(Me, New IDA_CAJASRowChangeEvent(CType(e.Row,IDA_CAJASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveIDA_CAJASRow(ByVal row As IDA_CAJASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTPVRecepcion = New dsTPVRecepcion()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IDA_CAJASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RECEPCIONDataTable
        Inherits Global.System.Data.TypedTableBase(Of RECEPCIONRow)
        
        Private columnTIPO As Global.System.Data.DataColumn
        
        Private columnCODALM As Global.System.Data.DataColumn
        
        Private columnFICHERO As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnLOG As Global.System.Data.DataColumn
        
        Private columnIMPORTAR As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnDESCALM As Global.System.Data.DataColumn
        
        Private columnTOTALTICKETS As Global.System.Data.DataColumn
        
        Private columnTOTALLINEAS As Global.System.Data.DataColumn
        
        Private columnTIPOTIENDA As Global.System.Data.DataColumn
        
        Private columnPEDIDO_FECHA As Global.System.Data.DataColumn
        
        Private columnPEDIDO_FECHAVALOR As Global.System.Data.DataColumn
        
        Private columnPEDIDO_DESGLOSE As Global.System.Data.DataColumn
        
        Private columnPROGRESO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RECEPCION"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODALMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODALM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FICHEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFICHERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCALMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCALM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALTICKETSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALTICKETS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALLINEASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALLINEAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOTIENDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOTIENDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PEDIDO_FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPEDIDO_FECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PEDIDO_FECHAVALORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPEDIDO_FECHAVALOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PEDIDO_DESGLOSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPEDIDO_DESGLOSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RECEPCIONRow
            Get
                Return CType(Me.Rows(index),RECEPCIONRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RECEPCIONRowChanging As RECEPCIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RECEPCIONRowChanged As RECEPCIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RECEPCIONRowDeleting As RECEPCIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RECEPCIONRowDeleted As RECEPCIONRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRECEPCIONRow(ByVal row As RECEPCIONRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRECEPCIONRow(ByVal TIPO As String, ByVal CODALM As String, ByVal FICHERO As String, ByVal DESCRIPCION As String, ByVal LOG As String, ByVal IMPORTAR As Boolean, ByVal ESTADO As Integer, ByVal DESCALM As String, ByVal TOTALTICKETS As Integer, ByVal TOTALLINEAS As Integer, ByVal TIPOTIENDA As String, ByVal PEDIDO_FECHA As Date, ByVal PEDIDO_FECHAVALOR As Date, ByVal PEDIDO_DESGLOSE As Boolean, ByVal PROGRESO As Integer) As RECEPCIONRow
            Dim rowRECEPCIONRow As RECEPCIONRow = CType(Me.NewRow,RECEPCIONRow)
            Dim columnValuesArray() As Object = New Object() {TIPO, CODALM, FICHERO, DESCRIPCION, LOG, IMPORTAR, ESTADO, DESCALM, TOTALTICKETS, TOTALLINEAS, TIPOTIENDA, PEDIDO_FECHA, PEDIDO_FECHAVALOR, PEDIDO_DESGLOSE, PROGRESO}
            rowRECEPCIONRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRECEPCIONRow)
            Return rowRECEPCIONRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RECEPCIONDataTable = CType(MyBase.Clone,RECEPCIONDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RECEPCIONDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTIPO = MyBase.Columns("TIPO")
            Me.columnCODALM = MyBase.Columns("CODALM")
            Me.columnFICHERO = MyBase.Columns("FICHERO")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnLOG = MyBase.Columns("LOG")
            Me.columnIMPORTAR = MyBase.Columns("IMPORTAR")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnDESCALM = MyBase.Columns("DESCALM")
            Me.columnTOTALTICKETS = MyBase.Columns("TOTALTICKETS")
            Me.columnTOTALLINEAS = MyBase.Columns("TOTALLINEAS")
            Me.columnTIPOTIENDA = MyBase.Columns("TIPOTIENDA")
            Me.columnPEDIDO_FECHA = MyBase.Columns("PEDIDO_FECHA")
            Me.columnPEDIDO_FECHAVALOR = MyBase.Columns("PEDIDO_FECHAVALOR")
            Me.columnPEDIDO_DESGLOSE = MyBase.Columns("PEDIDO_DESGLOSE")
            Me.columnPROGRESO = MyBase.Columns("PROGRESO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTIPO = New Global.System.Data.DataColumn("TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO)
            Me.columnCODALM = New Global.System.Data.DataColumn("CODALM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODALM)
            Me.columnFICHERO = New Global.System.Data.DataColumn("FICHERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFICHERO)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnLOG = New Global.System.Data.DataColumn("LOG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOG)
            Me.columnIMPORTAR = New Global.System.Data.DataColumn("IMPORTAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTAR)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnDESCALM = New Global.System.Data.DataColumn("DESCALM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCALM)
            Me.columnTOTALTICKETS = New Global.System.Data.DataColumn("TOTALTICKETS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALTICKETS)
            Me.columnTOTALLINEAS = New Global.System.Data.DataColumn("TOTALLINEAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALLINEAS)
            Me.columnTIPOTIENDA = New Global.System.Data.DataColumn("TIPOTIENDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOTIENDA)
            Me.columnPEDIDO_FECHA = New Global.System.Data.DataColumn("PEDIDO_FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPEDIDO_FECHA)
            Me.columnPEDIDO_FECHAVALOR = New Global.System.Data.DataColumn("PEDIDO_FECHAVALOR", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPEDIDO_FECHAVALOR)
            Me.columnPEDIDO_DESGLOSE = New Global.System.Data.DataColumn("PEDIDO_DESGLOSE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPEDIDO_DESGLOSE)
            Me.columnPROGRESO = New Global.System.Data.DataColumn("PROGRESO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROGRESO)
            Me.columnIMPORTAR.DefaultValue = CType(false,Boolean)
            Me.columnESTADO.DefaultValue = CType(0,Integer)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRECEPCIONRow() As RECEPCIONRow
            Return CType(Me.NewRow,RECEPCIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RECEPCIONRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RECEPCIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RECEPCIONRowChangedEvent) Is Nothing) Then
                RaiseEvent RECEPCIONRowChanged(Me, New RECEPCIONRowChangeEvent(CType(e.Row,RECEPCIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RECEPCIONRowChangingEvent) Is Nothing) Then
                RaiseEvent RECEPCIONRowChanging(Me, New RECEPCIONRowChangeEvent(CType(e.Row,RECEPCIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RECEPCIONRowDeletedEvent) Is Nothing) Then
                RaiseEvent RECEPCIONRowDeleted(Me, New RECEPCIONRowChangeEvent(CType(e.Row,RECEPCIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RECEPCIONRowDeletingEvent) Is Nothing) Then
                RaiseEvent RECEPCIONRowDeleting(Me, New RECEPCIONRowChangeEvent(CType(e.Row,RECEPCIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRECEPCIONRow(ByVal row As RECEPCIONRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTPVRecepcion = New dsTPVRecepcion()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RECEPCIONDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CABETRASDataTable
        Inherits Global.System.Data.TypedTableBase(Of CABETRASRow)
        
        Private columnNUMLIN As Global.System.Data.DataColumn
        
        Private columnCODALMENT As Global.System.Data.DataColumn
        
        Private columnCODALMSAL As Global.System.Data.DataColumn
        
        Private columnFECHA As Global.System.Data.DataColumn
        
        Private columnFICHERO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CABETRAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMLINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMLIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODALMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODALMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODALMSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODALMSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FICHEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFICHERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CABETRASRow
            Get
                Return CType(Me.Rows(index),CABETRASRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CABETRASRowChanging As CABETRASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CABETRASRowChanged As CABETRASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CABETRASRowDeleting As CABETRASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CABETRASRowDeleted As CABETRASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCABETRASRow(ByVal row As CABETRASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCABETRASRow(ByVal NUMLIN As Integer, ByVal CODALMENT As String, ByVal CODALMSAL As String, ByVal FECHA As Date, ByVal FICHERO As String) As CABETRASRow
            Dim rowCABETRASRow As CABETRASRow = CType(Me.NewRow,CABETRASRow)
            Dim columnValuesArray() As Object = New Object() {NUMLIN, CODALMENT, CODALMSAL, FECHA, FICHERO}
            rowCABETRASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCABETRASRow)
            Return rowCABETRASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CABETRASDataTable = CType(MyBase.Clone,CABETRASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CABETRASDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNUMLIN = MyBase.Columns("NUMLIN")
            Me.columnCODALMENT = MyBase.Columns("CODALMENT")
            Me.columnCODALMSAL = MyBase.Columns("CODALMSAL")
            Me.columnFECHA = MyBase.Columns("FECHA")
            Me.columnFICHERO = MyBase.Columns("FICHERO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNUMLIN = New Global.System.Data.DataColumn("NUMLIN", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMLIN)
            Me.columnCODALMENT = New Global.System.Data.DataColumn("CODALMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODALMENT)
            Me.columnCODALMSAL = New Global.System.Data.DataColumn("CODALMSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODALMSAL)
            Me.columnFECHA = New Global.System.Data.DataColumn("FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA)
            Me.columnFICHERO = New Global.System.Data.DataColumn("FICHERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFICHERO)
            Me.columnNUMLIN.Caption = "FICHERO"
            Me.columnCODALMENT.AllowDBNull = false
            Me.columnCODALMENT.MaxLength = 8
            Me.columnCODALMSAL.AllowDBNull = false
            Me.columnCODALMSAL.MaxLength = 8
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCABETRASRow() As CABETRASRow
            Return CType(Me.NewRow,CABETRASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CABETRASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CABETRASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CABETRASRowChangedEvent) Is Nothing) Then
                RaiseEvent CABETRASRowChanged(Me, New CABETRASRowChangeEvent(CType(e.Row,CABETRASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CABETRASRowChangingEvent) Is Nothing) Then
                RaiseEvent CABETRASRowChanging(Me, New CABETRASRowChangeEvent(CType(e.Row,CABETRASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CABETRASRowDeletedEvent) Is Nothing) Then
                RaiseEvent CABETRASRowDeleted(Me, New CABETRASRowChangeEvent(CType(e.Row,CABETRASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CABETRASRowDeletingEvent) Is Nothing) Then
                RaiseEvent CABETRASRowDeleting(Me, New CABETRASRowChangeEvent(CType(e.Row,CABETRASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCABETRASRow(ByVal row As CABETRASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTPVRecepcion = New dsTPVRecepcion()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CABETRASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LINETRASDataTable
        Inherits Global.System.Data.TypedTableBase(Of LINETRASRow)
        
        Private columnNUMLIN As Global.System.Data.DataColumn
        
        Private columnCODART As Global.System.Data.DataColumn
        
        Private columnUNIDADES As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "LINETRAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMLINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMLIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODARTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODART
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UNIDADESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIDADES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LINETRASRow
            Get
                Return CType(Me.Rows(index),LINETRASRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LINETRASRowChanging As LINETRASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LINETRASRowChanged As LINETRASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LINETRASRowDeleting As LINETRASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LINETRASRowDeleted As LINETRASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddLINETRASRow(ByVal row As LINETRASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddLINETRASRow(ByVal parentCABETRASRowByCABETRAS_LINETRAS As CABETRASRow, ByVal CODART As String, ByVal UNIDADES As Decimal) As LINETRASRow
            Dim rowLINETRASRow As LINETRASRow = CType(Me.NewRow,LINETRASRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CODART, UNIDADES}
            If (Not (parentCABETRASRowByCABETRAS_LINETRAS) Is Nothing) Then
                columnValuesArray(0) = parentCABETRASRowByCABETRAS_LINETRAS(0)
            End If
            rowLINETRASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLINETRASRow)
            Return rowLINETRASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LINETRASDataTable = CType(MyBase.Clone,LINETRASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LINETRASDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNUMLIN = MyBase.Columns("NUMLIN")
            Me.columnCODART = MyBase.Columns("CODART")
            Me.columnUNIDADES = MyBase.Columns("UNIDADES")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNUMLIN = New Global.System.Data.DataColumn("NUMLIN", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMLIN)
            Me.columnCODART = New Global.System.Data.DataColumn("CODART", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODART)
            Me.columnUNIDADES = New Global.System.Data.DataColumn("UNIDADES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIDADES)
            Me.columnNUMLIN.Caption = "FICHERO"
            Me.columnCODART.AllowDBNull = false
            Me.columnCODART.MaxLength = 15
            Me.columnUNIDADES.Caption = "CANTIDAD"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewLINETRASRow() As LINETRASRow
            Return CType(Me.NewRow,LINETRASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LINETRASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LINETRASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LINETRASRowChangedEvent) Is Nothing) Then
                RaiseEvent LINETRASRowChanged(Me, New LINETRASRowChangeEvent(CType(e.Row,LINETRASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LINETRASRowChangingEvent) Is Nothing) Then
                RaiseEvent LINETRASRowChanging(Me, New LINETRASRowChangeEvent(CType(e.Row,LINETRASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LINETRASRowDeletedEvent) Is Nothing) Then
                RaiseEvent LINETRASRowDeleted(Me, New LINETRASRowChangeEvent(CType(e.Row,LINETRASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LINETRASRowDeletingEvent) Is Nothing) Then
                RaiseEvent LINETRASRowDeleting(Me, New LINETRASRowChangeEvent(CType(e.Row,LINETRASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveLINETRASRow(ByVal row As LINETRASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTPVRecepcion = New dsTPVRecepcion()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LINETRASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CABEPEDVDataTable
        Inherits Global.System.Data.TypedTableBase(Of CABEPEDVRow)
        
        Private columnNUMLIN As Global.System.Data.DataColumn
        
        Private columnCODALM As Global.System.Data.DataColumn
        
        Private columnFECHA As Global.System.Data.DataColumn
        
        Private columnFECHAVALOR As Global.System.Data.DataColumn
        
        Private columnFICHERO As Global.System.Data.DataColumn
        
        Private columnTIPOTIENDA As Global.System.Data.DataColumn
        
        Private columnDESGLOSE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CABEPEDV"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMLINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMLIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODALMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODALM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAVALORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAVALOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FICHEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFICHERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOTIENDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOTIENDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESGLOSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESGLOSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CABEPEDVRow
            Get
                Return CType(Me.Rows(index),CABEPEDVRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CABEPEDVRowChanging As CABEPEDVRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CABEPEDVRowChanged As CABEPEDVRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CABEPEDVRowDeleting As CABEPEDVRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CABEPEDVRowDeleted As CABEPEDVRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCABEPEDVRow(ByVal row As CABEPEDVRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCABEPEDVRow(ByVal NUMLIN As Integer, ByVal CODALM As String, ByVal FECHA As Date, ByVal FECHAVALOR As Date, ByVal FICHERO As String, ByVal TIPOTIENDA As String, ByVal DESGLOSE As Boolean) As CABEPEDVRow
            Dim rowCABEPEDVRow As CABEPEDVRow = CType(Me.NewRow,CABEPEDVRow)
            Dim columnValuesArray() As Object = New Object() {NUMLIN, CODALM, FECHA, FECHAVALOR, FICHERO, TIPOTIENDA, DESGLOSE}
            rowCABEPEDVRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCABEPEDVRow)
            Return rowCABEPEDVRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CABEPEDVDataTable = CType(MyBase.Clone,CABEPEDVDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CABEPEDVDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNUMLIN = MyBase.Columns("NUMLIN")
            Me.columnCODALM = MyBase.Columns("CODALM")
            Me.columnFECHA = MyBase.Columns("FECHA")
            Me.columnFECHAVALOR = MyBase.Columns("FECHAVALOR")
            Me.columnFICHERO = MyBase.Columns("FICHERO")
            Me.columnTIPOTIENDA = MyBase.Columns("TIPOTIENDA")
            Me.columnDESGLOSE = MyBase.Columns("DESGLOSE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNUMLIN = New Global.System.Data.DataColumn("NUMLIN", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMLIN)
            Me.columnCODALM = New Global.System.Data.DataColumn("CODALM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODALM)
            Me.columnFECHA = New Global.System.Data.DataColumn("FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA)
            Me.columnFECHAVALOR = New Global.System.Data.DataColumn("FECHAVALOR", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAVALOR)
            Me.columnFICHERO = New Global.System.Data.DataColumn("FICHERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFICHERO)
            Me.columnTIPOTIENDA = New Global.System.Data.DataColumn("TIPOTIENDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOTIENDA)
            Me.columnDESGLOSE = New Global.System.Data.DataColumn("DESGLOSE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESGLOSE)
            Me.columnCODALM.AllowDBNull = false
            Me.columnCODALM.Caption = "CODALMSAL"
            Me.columnCODALM.MaxLength = 8
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCABEPEDVRow() As CABEPEDVRow
            Return CType(Me.NewRow,CABEPEDVRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CABEPEDVRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CABEPEDVRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CABEPEDVRowChangedEvent) Is Nothing) Then
                RaiseEvent CABEPEDVRowChanged(Me, New CABEPEDVRowChangeEvent(CType(e.Row,CABEPEDVRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CABEPEDVRowChangingEvent) Is Nothing) Then
                RaiseEvent CABEPEDVRowChanging(Me, New CABEPEDVRowChangeEvent(CType(e.Row,CABEPEDVRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CABEPEDVRowDeletedEvent) Is Nothing) Then
                RaiseEvent CABEPEDVRowDeleted(Me, New CABEPEDVRowChangeEvent(CType(e.Row,CABEPEDVRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CABEPEDVRowDeletingEvent) Is Nothing) Then
                RaiseEvent CABEPEDVRowDeleting(Me, New CABEPEDVRowChangeEvent(CType(e.Row,CABEPEDVRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCABEPEDVRow(ByVal row As CABEPEDVRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTPVRecepcion = New dsTPVRecepcion()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CABEPEDVDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LINEPEDIDataTable
        Inherits Global.System.Data.TypedTableBase(Of LINEPEDIRow)
        
        Private columnNUMLIN As Global.System.Data.DataColumn
        
        Private columnCODART As Global.System.Data.DataColumn
        
        Private columnCAJAS As Global.System.Data.DataColumn
        
        Private columnUNIDADES As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "LINEPEDI"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMLINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMLIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODARTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODART
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAJASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAJAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UNIDADESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIDADES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LINEPEDIRow
            Get
                Return CType(Me.Rows(index),LINEPEDIRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LINEPEDIRowChanging As LINEPEDIRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LINEPEDIRowChanged As LINEPEDIRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LINEPEDIRowDeleting As LINEPEDIRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LINEPEDIRowDeleted As LINEPEDIRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddLINEPEDIRow(ByVal row As LINEPEDIRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddLINEPEDIRow(ByVal parentCABEPEDVRowByCABETRAS_LINETRAS1 As CABEPEDVRow, ByVal CODART As String, ByVal CAJAS As Integer, ByVal UNIDADES As Decimal) As LINEPEDIRow
            Dim rowLINEPEDIRow As LINEPEDIRow = CType(Me.NewRow,LINEPEDIRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CODART, CAJAS, UNIDADES}
            If (Not (parentCABEPEDVRowByCABETRAS_LINETRAS1) Is Nothing) Then
                columnValuesArray(0) = parentCABEPEDVRowByCABETRAS_LINETRAS1(0)
            End If
            rowLINEPEDIRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLINEPEDIRow)
            Return rowLINEPEDIRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LINEPEDIDataTable = CType(MyBase.Clone,LINEPEDIDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LINEPEDIDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNUMLIN = MyBase.Columns("NUMLIN")
            Me.columnCODART = MyBase.Columns("CODART")
            Me.columnCAJAS = MyBase.Columns("CAJAS")
            Me.columnUNIDADES = MyBase.Columns("UNIDADES")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNUMLIN = New Global.System.Data.DataColumn("NUMLIN", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMLIN)
            Me.columnCODART = New Global.System.Data.DataColumn("CODART", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODART)
            Me.columnCAJAS = New Global.System.Data.DataColumn("CAJAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAJAS)
            Me.columnUNIDADES = New Global.System.Data.DataColumn("UNIDADES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIDADES)
            Me.columnCODART.AllowDBNull = false
            Me.columnCODART.MaxLength = 15
            Me.columnUNIDADES.Caption = "CANTIDAD"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewLINEPEDIRow() As LINEPEDIRow
            Return CType(Me.NewRow,LINEPEDIRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LINEPEDIRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LINEPEDIRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LINEPEDIRowChangedEvent) Is Nothing) Then
                RaiseEvent LINEPEDIRowChanged(Me, New LINEPEDIRowChangeEvent(CType(e.Row,LINEPEDIRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LINEPEDIRowChangingEvent) Is Nothing) Then
                RaiseEvent LINEPEDIRowChanging(Me, New LINEPEDIRowChangeEvent(CType(e.Row,LINEPEDIRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LINEPEDIRowDeletedEvent) Is Nothing) Then
                RaiseEvent LINEPEDIRowDeleted(Me, New LINEPEDIRowChangeEvent(CType(e.Row,LINEPEDIRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LINEPEDIRowDeletingEvent) Is Nothing) Then
                RaiseEvent LINEPEDIRowDeleting(Me, New LINEPEDIRowChangeEvent(CType(e.Row,LINEPEDIRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveLINEPEDIRow(ByVal row As LINEPEDIRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTPVRecepcion = New dsTPVRecepcion()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LINEPEDIDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CABEREGUDataTable
        Inherits Global.System.Data.TypedTableBase(Of CABEREGURow)
        
        Private columnNUMLIN As Global.System.Data.DataColumn
        
        Private columnCODALM As Global.System.Data.DataColumn
        
        Private columnFECHA As Global.System.Data.DataColumn
        
        Private columnFICHERO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CABEREGU"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMLINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMLIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODALMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODALM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FICHEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFICHERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CABEREGURow
            Get
                Return CType(Me.Rows(index),CABEREGURow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CABEREGURowChanging As CABEREGURowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CABEREGURowChanged As CABEREGURowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CABEREGURowDeleting As CABEREGURowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CABEREGURowDeleted As CABEREGURowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCABEREGURow(ByVal row As CABEREGURow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddCABEREGURow(ByVal NUMLIN As Integer, ByVal CODALM As String, ByVal FECHA As Date, ByVal FICHERO As String) As CABEREGURow
            Dim rowCABEREGURow As CABEREGURow = CType(Me.NewRow, CABEREGURow)
            Dim columnValuesArray() As Object = New Object() {NUMLIN, CODALM, FECHA, FICHERO}
            rowCABEREGURow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCABEREGURow)
            Return rowCABEREGURow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CABEREGUDataTable = CType(MyBase.Clone, CABEREGUDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CABEREGUDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnNUMLIN = MyBase.Columns("NUMLIN")
            Me.columnCODALM = MyBase.Columns("CODALM")
            Me.columnFECHA = MyBase.Columns("FECHA")
            Me.columnFICHERO = MyBase.Columns("FICHERO")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnNUMLIN = New Global.System.Data.DataColumn("NUMLIN", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMLIN)
            Me.columnCODALM = New Global.System.Data.DataColumn("CODALM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODALM)
            Me.columnFECHA = New Global.System.Data.DataColumn("FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA)
            Me.columnFICHERO = New Global.System.Data.DataColumn("FICHERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFICHERO)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewCABEREGURow() As CABEREGURow
            Return CType(Me.NewRow, CABEREGURow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CABEREGURow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CABEREGURow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CABEREGURowChangedEvent) Is Nothing) Then
                RaiseEvent CABEREGURowChanged(Me, New CABEREGURowChangeEvent(CType(e.Row, CABEREGURow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CABEREGURowChangingEvent) Is Nothing) Then
                RaiseEvent CABEREGURowChanging(Me, New CABEREGURowChangeEvent(CType(e.Row, CABEREGURow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CABEREGURowDeletedEvent) Is Nothing) Then
                RaiseEvent CABEREGURowDeleted(Me, New CABEREGURowChangeEvent(CType(e.Row, CABEREGURow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CABEREGURowDeletingEvent) Is Nothing) Then
                RaiseEvent CABEREGURowDeleting(Me, New CABEREGURowChangeEvent(CType(e.Row, CABEREGURow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveCABEREGURow(ByVal row As CABEREGURow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTPVRecepcion = New dsTPVRecepcion()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CABEREGUDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class LINEREGUDataTable
        Inherits Global.System.Data.TypedTableBase(Of LINEREGURow)

        Private columnNUMLIN As Global.System.Data.DataColumn

        Private columnTIPO As Global.System.Data.DataColumn

        Private columnOPERARIO As Global.System.Data.DataColumn

        Private columnCODART As Global.System.Data.DataColumn

        Private columnDESCLIN As Global.System.Data.DataColumn

        Private columnTEXTO As Global.System.Data.DataColumn

        Private columnUNIDADES1 As Global.System.Data.DataColumn

        Private columnPRCCOSTE As Global.System.Data.DataColumn

        Private columnUNIDADES As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "LINEREGU"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NUMLINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMLIN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OPERARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPERARIO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CODARTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODART
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DESCLINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCLIN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TEXTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTEXTO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UNIDADES1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIDADES1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRCCOSTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRCCOSTE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UNIDADESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIDADES
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As LINEREGURow
            Get
                Return CType(Me.Rows(index), LINEREGURow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event LINEREGURowChanging As LINEREGURowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event LINEREGURowChanged As LINEREGURowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event LINEREGURowDeleting As LINEREGURowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event LINEREGURowDeleted As LINEREGURowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddLINEREGURow(ByVal row As LINEREGURow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddLINEREGURow(ByVal parentCABEREGURowByCABEREGU_LINEREGU As CABEREGURow, ByVal TIPO As String, ByVal OPERARIO As String, ByVal CODART As String, ByVal DESCLIN As String, ByVal TEXTO As String, ByVal UNIDADES1 As String, ByVal PRCCOSTE As String, ByVal UNIDADES As Decimal) As LINEREGURow
            Dim rowLINEREGURow As LINEREGURow = CType(Me.NewRow, LINEREGURow)
            Dim columnValuesArray() As Object = New Object() {Nothing, TIPO, OPERARIO, CODART, DESCLIN, TEXTO, UNIDADES1, PRCCOSTE, UNIDADES}
            If (Not (parentCABEREGURowByCABEREGU_LINEREGU) Is Nothing) Then
                columnValuesArray(0) = parentCABEREGURowByCABEREGU_LINEREGU(0)
            End If
            rowLINEREGURow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLINEREGURow)
            Return rowLINEREGURow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LINEREGUDataTable = CType(MyBase.Clone, LINEREGUDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LINEREGUDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnNUMLIN = MyBase.Columns("NUMLIN")
            Me.columnTIPO = MyBase.Columns("TIPO")
            Me.columnOPERARIO = MyBase.Columns("OPERARIO")
            Me.columnCODART = MyBase.Columns("CODART")
            Me.columnDESCLIN = MyBase.Columns("DESCLIN")
            Me.columnTEXTO = MyBase.Columns("TEXTO")
            Me.columnUNIDADES1 = MyBase.Columns("UNIDADES1")
            Me.columnPRCCOSTE = MyBase.Columns("PRCCOSTE")
            Me.columnUNIDADES = MyBase.Columns("UNIDADES")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnNUMLIN = New Global.System.Data.DataColumn("NUMLIN", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMLIN)
            Me.columnTIPO = New Global.System.Data.DataColumn("TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO)
            Me.columnOPERARIO = New Global.System.Data.DataColumn("OPERARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPERARIO)
            Me.columnCODART = New Global.System.Data.DataColumn("CODART", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODART)
            Me.columnDESCLIN = New Global.System.Data.DataColumn("DESCLIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCLIN)
            Me.columnTEXTO = New Global.System.Data.DataColumn("TEXTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTEXTO)
            Me.columnUNIDADES1 = New Global.System.Data.DataColumn("UNIDADES1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIDADES1)
            Me.columnPRCCOSTE = New Global.System.Data.DataColumn("PRCCOSTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRCCOSTE)
            Me.columnUNIDADES = New Global.System.Data.DataColumn("UNIDADES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIDADES)
            Me.columnUNIDADES1.Caption = "UNIDADES"
            Me.columnUNIDADES.Caption = "CANTIDAD"
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewLINEREGURow() As LINEREGURow
            Return CType(Me.NewRow, LINEREGURow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LINEREGURow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LINEREGURow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LINEREGURowChangedEvent) Is Nothing) Then
                RaiseEvent LINEREGURowChanged(Me, New LINEREGURowChangeEvent(CType(e.Row, LINEREGURow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LINEREGURowChangingEvent) Is Nothing) Then
                RaiseEvent LINEREGURowChanging(Me, New LINEREGURowChangeEvent(CType(e.Row, LINEREGURow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LINEREGURowDeletedEvent) Is Nothing) Then
                RaiseEvent LINEREGURowDeleted(Me, New LINEREGURowChangeEvent(CType(e.Row, LINEREGURow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LINEREGURowDeletingEvent) Is Nothing) Then
                RaiseEvent LINEREGURowDeleting(Me, New LINEREGURowChangeEvent(CType(e.Row, LINEREGURow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveLINEREGURow(ByVal row As LINEREGURow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsTPVRecepcion = New dsTPVRecepcion()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LINEREGUDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IDA_TICKETSRow
        Inherits Global.System.Data.DataRow

        Private tableIDA_TICKETS As IDA_TICKETSDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIDA_TICKETS = CType(Me.Table, IDA_TICKETSDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CAJA() As Integer
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.CAJAColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CAJA' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableIDA_TICKETS.CAJAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODALM() As String
            Get
                Return CType(Me(Me.tableIDA_TICKETS.CODALMColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIDA_TICKETS.CODALMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODPER() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.CODPERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODPER' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TICKETS.CODPERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CREDITO() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.CREDITOColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CREDITO' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableIDA_TICKETS.CREDITOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECCIERRE() As Date
            Get
                Return CType(Me(Me.tableIDA_TICKETS.FECCIERREColumn), Date)
            End Get
            Set(value As Date)
                Me(Me.tableIDA_TICKETS.FECCIERREColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHA() As Date
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.FECHAColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableIDA_TICKETS.FECHAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDFACV() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.IDFACVColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDFACV' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableIDA_TICKETS.IDFACVColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDTICKET() As Integer
            Get
                Return CType(Me(Me.tableIDA_TICKETS.IDTICKETColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableIDA_TICKETS.IDTICKETColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IMPRESO() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.IMPRESOColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMPRESO' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableIDA_TICKETS.IMPRESOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMDOC() As Integer
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.NUMDOCColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NUMDOC' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableIDA_TICKETS.NUMDOCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMLINEAS() As Integer
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.NUMLINEASColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NUMLINEAS' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableIDA_TICKETS.NUMLINEASColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PORDESC() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.PORDESCColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PORDESC' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableIDA_TICKETS.PORDESCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REPARTODOMICILIO() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.REPARTODOMICILIOColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'REPARTODOMICILIO' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableIDA_TICKETS.REPARTODOMICILIOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPOCOBRO() As Integer
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.TIPOCOBROColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOCOBRO' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableIDA_TICKETS.TIPOCOBROColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTCAMBIOS() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.TOTCAMBIOSColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTCAMBIOS' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.TOTCAMBIOSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTDESC() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.TOTDESCColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTDESC' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.TOTDESCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTDOC() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.TOTDOCColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTDOC' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.TOTDOCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTEFECTIVO() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.TOTEFECTIVOColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTEFECTIVO' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.TOTEFECTIVOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTENTREGA() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.TOTENTREGAColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTENTREGA' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.TOTENTREGAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTENVASES() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.TOTENVASESColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTENVASES' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.TOTENVASESColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTPENDIENTE() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.TOTPENDIENTEColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTPENDIENTE' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.TOTPENDIENTEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTTALON() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.TOTTALONColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTTALON' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.TOTTALONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTTARJETA() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.TOTTARJETAColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTTARJETA' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.TOTTARJETAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTVALESCOBRADOS() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.TOTVALESCOBRADOSColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTVALESCOBRADOS' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.TOTVALESCOBRADOSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTVALESEMITIDOS() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.TOTVALESEMITIDOSColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTVALESEMITIDOS' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.TOTVALESEMITIDOSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTVALESPROVEEDOR() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.TOTVALESPROVEEDORColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTVALESPROVEEDOR' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.TOTVALESPROVEEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDALBV() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.IDALBVColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IDALBV' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableIDA_TICKETS.IDALBVColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMTARJETA() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.NUMTARJETAColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NUMTARJETA' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.NUMTARJETAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTPUNTOS() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.TOTPUNTOSColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTPUNTOS' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.TOTPUNTOSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CANJEPUNTOS() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.CANJEPUNTOSColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANJEPUNTOS' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.CANJEPUNTOSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CANJEVALES() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.CANJEVALESColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANJEVALES' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.CANJEVALESColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODCLI() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.CODCLIColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODCLI' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TICKETS.CODCLIColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FIDELIZADTO() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.FIDELIZADTOColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FIDELIZADTO' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.FIDELIZADTOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FIDELIZALOTERIA() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.FIDELIZALOTERIAColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FIDELIZALOTERIA' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.FIDELIZALOTERIAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FIDELIZAPUNTOS() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.FIDELIZAPUNTOSColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FIDELIZAPUNTOS' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.FIDELIZAPUNTOSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FIDELIZAVALES() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.FIDELIZAVALESColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FIDELIZAVALES' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.FIDELIZAVALESColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PORPRONTO() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.PORPRONTOColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PORPRONTO' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableIDA_TICKETS.PORPRONTOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPDOC() As Integer
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.TIPDOCColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPDOC' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableIDA_TICKETS.TIPDOCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTPRONTO() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.TOTPRONTOColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTPRONTO' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.TOTPRONTOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTREC() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETS.TOTRECColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTREC' de la tabla 'IDA_TICKETS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETS.TOTRECColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCAJANull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.CAJAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCAJANull()
            Me(Me.tableIDA_TICKETS.CAJAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCODPERNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.CODPERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCODPERNull()
            Me(Me.tableIDA_TICKETS.CODPERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCREDITONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.CREDITOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCREDITONull()
            Me(Me.tableIDA_TICKETS.CREDITOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFECHANull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.FECHAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFECHANull()
            Me(Me.tableIDA_TICKETS.FECHAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDFACVNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.IDFACVColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDFACVNull()
            Me(Me.tableIDA_TICKETS.IDFACVColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIMPRESONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.IMPRESOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIMPRESONull()
            Me(Me.tableIDA_TICKETS.IMPRESOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMDOCNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.NUMDOCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMDOCNull()
            Me(Me.tableIDA_TICKETS.NUMDOCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMLINEASNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.NUMLINEASColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMLINEASNull()
            Me(Me.tableIDA_TICKETS.NUMLINEASColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPORDESCNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.PORDESCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPORDESCNull()
            Me(Me.tableIDA_TICKETS.PORDESCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsREPARTODOMICILIONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.REPARTODOMICILIOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetREPARTODOMICILIONull()
            Me(Me.tableIDA_TICKETS.REPARTODOMICILIOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPOCOBRONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.TIPOCOBROColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPOCOBRONull()
            Me(Me.tableIDA_TICKETS.TIPOCOBROColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTCAMBIOSNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.TOTCAMBIOSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTCAMBIOSNull()
            Me(Me.tableIDA_TICKETS.TOTCAMBIOSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTDESCNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.TOTDESCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTDESCNull()
            Me(Me.tableIDA_TICKETS.TOTDESCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTDOCNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.TOTDOCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTDOCNull()
            Me(Me.tableIDA_TICKETS.TOTDOCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTEFECTIVONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.TOTEFECTIVOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTEFECTIVONull()
            Me(Me.tableIDA_TICKETS.TOTEFECTIVOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTENTREGANull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.TOTENTREGAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTENTREGANull()
            Me(Me.tableIDA_TICKETS.TOTENTREGAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTENVASESNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.TOTENVASESColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTENVASESNull()
            Me(Me.tableIDA_TICKETS.TOTENVASESColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTPENDIENTENull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.TOTPENDIENTEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTPENDIENTENull()
            Me(Me.tableIDA_TICKETS.TOTPENDIENTEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTTALONNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.TOTTALONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTTALONNull()
            Me(Me.tableIDA_TICKETS.TOTTALONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTTARJETANull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.TOTTARJETAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTTARJETANull()
            Me(Me.tableIDA_TICKETS.TOTTARJETAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTVALESCOBRADOSNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.TOTVALESCOBRADOSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTVALESCOBRADOSNull()
            Me(Me.tableIDA_TICKETS.TOTVALESCOBRADOSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTVALESEMITIDOSNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.TOTVALESEMITIDOSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTVALESEMITIDOSNull()
            Me(Me.tableIDA_TICKETS.TOTVALESEMITIDOSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTVALESPROVEEDORNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.TOTVALESPROVEEDORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTVALESPROVEEDORNull()
            Me(Me.tableIDA_TICKETS.TOTVALESPROVEEDORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIDALBVNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.IDALBVColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIDALBVNull()
            Me(Me.tableIDA_TICKETS.IDALBVColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMTARJETANull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.NUMTARJETAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMTARJETANull()
            Me(Me.tableIDA_TICKETS.NUMTARJETAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTPUNTOSNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.TOTPUNTOSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTPUNTOSNull()
            Me(Me.tableIDA_TICKETS.TOTPUNTOSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCANJEPUNTOSNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.CANJEPUNTOSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCANJEPUNTOSNull()
            Me(Me.tableIDA_TICKETS.CANJEPUNTOSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCANJEVALESNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.CANJEVALESColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCANJEVALESNull()
            Me(Me.tableIDA_TICKETS.CANJEVALESColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCODCLINull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.CODCLIColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCODCLINull()
            Me(Me.tableIDA_TICKETS.CODCLIColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFIDELIZADTONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.FIDELIZADTOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFIDELIZADTONull()
            Me(Me.tableIDA_TICKETS.FIDELIZADTOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFIDELIZALOTERIANull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.FIDELIZALOTERIAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFIDELIZALOTERIANull()
            Me(Me.tableIDA_TICKETS.FIDELIZALOTERIAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFIDELIZAPUNTOSNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.FIDELIZAPUNTOSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFIDELIZAPUNTOSNull()
            Me(Me.tableIDA_TICKETS.FIDELIZAPUNTOSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFIDELIZAVALESNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.FIDELIZAVALESColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFIDELIZAVALESNull()
            Me(Me.tableIDA_TICKETS.FIDELIZAVALESColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPORPRONTONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.PORPRONTOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPORPRONTONull()
            Me(Me.tableIDA_TICKETS.PORPRONTOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPDOCNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.TIPDOCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPDOCNull()
            Me(Me.tableIDA_TICKETS.TIPDOCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTPRONTONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.TOTPRONTOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTPRONTONull()
            Me(Me.tableIDA_TICKETS.TOTPRONTOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTRECNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETS.TOTRECColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTRECNull()
            Me(Me.tableIDA_TICKETS.TOTRECColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetIDA_TICKETSLINEASRows() As IDA_TICKETSLINEASRow()
            If (Me.Table.ChildRelations("FK_IDA_TICKETSLINEAS_IDA_TICKETS_IDTICKET") Is Nothing) Then
                Return New IDA_TICKETSLINEASRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_IDA_TICKETSLINEAS_IDA_TICKETS_IDTICKET")), IDA_TICKETSLINEASRow())
            End If
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IDA_TICKETSLINEASRow
        Inherits Global.System.Data.DataRow

        Private tableIDA_TICKETSLINEAS As IDA_TICKETSLINEASDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIDA_TICKETSLINEAS = CType(Me.Table, IDA_TICKETSLINEASDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CANTIDAD() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETSLINEAS.CANTIDADColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTIDAD' de la tabla 'IDA_TICKETSLINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETSLINEAS.CANTIDADColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODART() As String
            Get
                Return CType(Me(Me.tableIDA_TICKETSLINEAS.CODARTColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIDA_TICKETSLINEAS.CODARTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODPER() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETSLINEAS.CODPERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODPER' de la tabla 'IDA_TICKETSLINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TICKETSLINEAS.CODPERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESC() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETSLINEAS.DESCColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC' de la tabla 'IDA_TICKETSLINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableIDA_TICKETSLINEAS.DESCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESCLIN() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETSLINEAS.DESCLINColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESCLIN' de la tabla 'IDA_TICKETSLINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TICKETSLINEAS.DESCLINColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDLINEA() As Integer
            Get
                Return CType(Me(Me.tableIDA_TICKETSLINEAS.IDLINEAColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableIDA_TICKETSLINEAS.IDLINEAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDTICKET() As Integer
            Get
                Return CType(Me(Me.tableIDA_TICKETSLINEAS.IDTICKETColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableIDA_TICKETSLINEAS.IDTICKETColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMLINEA() As Integer
            Get
                Return CType(Me(Me.tableIDA_TICKETSLINEAS.NUMLINEAColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableIDA_TICKETSLINEAS.NUMLINEAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRCMANUAL() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETSLINEAS.PRCMANUALColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRCMANUAL' de la tabla 'IDA_TICKETSLINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableIDA_TICKETSLINEAS.PRCMANUALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRECIO() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETSLINEAS.PRECIOColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRECIO' de la tabla 'IDA_TICKETSLINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETSLINEAS.PRECIOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PROMO() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETSLINEAS.PROMOColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PROMO' de la tabla 'IDA_TICKETSLINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableIDA_TICKETSLINEAS.PROMOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPIVA() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETSLINEAS.TIPIVAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPIVA' de la tabla 'IDA_TICKETSLINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TICKETSLINEAS.TIPIVAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTLIN() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETSLINEAS.TOTLINColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTLIN' de la tabla 'IDA_TICKETSLINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETSLINEAS.TOTLINColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ARTICULODIRECTO() As String
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETSLINEAS.ARTICULODIRECTOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ARTICULODIRECTO' de la tabla 'IDA_TICKETSLINEAS' es DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIDA_TICKETSLINEAS.ARTICULODIRECTOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PESOBASCULA() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETSLINEAS.PESOBASCULAColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PESOBASCULA' de la tabla 'IDA_TICKETSLINEAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_TICKETSLINEAS.PESOBASCULAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PORFIDELIZACION() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableIDA_TICKETSLINEAS.PORFIDELIZACIONColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PORFIDELIZACION' de la tabla 'IDA_TICKETSLINEAS' es DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableIDA_TICKETSLINEAS.PORFIDELIZACIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDA_TICKETSRow() As IDA_TICKETSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_IDA_TICKETSLINEAS_IDA_TICKETS_IDTICKET")), IDA_TICKETSRow)
            End Get
            Set(value As IDA_TICKETSRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_IDA_TICKETSLINEAS_IDA_TICKETS_IDTICKET"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCANTIDADNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETSLINEAS.CANTIDADColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCANTIDADNull()
            Me(Me.tableIDA_TICKETSLINEAS.CANTIDADColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCODPERNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETSLINEAS.CODPERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCODPERNull()
            Me(Me.tableIDA_TICKETSLINEAS.CODPERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESCNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETSLINEAS.DESCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESCNull()
            Me(Me.tableIDA_TICKETSLINEAS.DESCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESCLINNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETSLINEAS.DESCLINColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESCLINNull()
            Me(Me.tableIDA_TICKETSLINEAS.DESCLINColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRCMANUALNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETSLINEAS.PRCMANUALColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRCMANUALNull()
            Me(Me.tableIDA_TICKETSLINEAS.PRCMANUALColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRECIONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETSLINEAS.PRECIOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRECIONull()
            Me(Me.tableIDA_TICKETSLINEAS.PRECIOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPROMONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETSLINEAS.PROMOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPROMONull()
            Me(Me.tableIDA_TICKETSLINEAS.PROMOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPIVANull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETSLINEAS.TIPIVAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPIVANull()
            Me(Me.tableIDA_TICKETSLINEAS.TIPIVAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTLINNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETSLINEAS.TOTLINColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTLINNull()
            Me(Me.tableIDA_TICKETSLINEAS.TOTLINColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsARTICULODIRECTONull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETSLINEAS.ARTICULODIRECTOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetARTICULODIRECTONull()
            Me(Me.tableIDA_TICKETSLINEAS.ARTICULODIRECTOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPESOBASCULANull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETSLINEAS.PESOBASCULAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPESOBASCULANull()
            Me(Me.tableIDA_TICKETSLINEAS.PESOBASCULAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPORFIDELIZACIONNull() As Boolean
            Return Me.IsNull(Me.tableIDA_TICKETSLINEAS.PORFIDELIZACIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPORFIDELIZACIONNull()
            Me(Me.tableIDA_TICKETSLINEAS.PORFIDELIZACIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IDA_CAJASRow
        Inherits Global.System.Data.DataRow

        Private tableIDA_CAJAS As IDA_CAJASDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIDA_CAJAS = CType(Me.Table, IDA_CAJASDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CAJA() As Integer
            Get
                Return CType(Me(Me.tableIDA_CAJAS.CAJAColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableIDA_CAJAS.CAJAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property COBROSCLIENTE() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.COBROSCLIENTEColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COBROSCLIENTE' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.COBROSCLIENTEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODALM() As String
            Get
                Return CType(Me(Me.tableIDA_CAJAS.CODALMColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableIDA_CAJAS.CODALMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EFECTIVO() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.EFECTIVOColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EFECTIVO' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.EFECTIVOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ENTRADACAMBIOS() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.ENTRADACAMBIOSColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENTRADACAMBIOS' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.ENTRADACAMBIOSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ENVASES() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.ENVASESColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENVASES' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.ENVASESColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHA() As Date
            Get
                Return CType(Me(Me.tableIDA_CAJAS.FECHAColumn), Date)
            End Get
            Set(value As Date)
                Me(Me.tableIDA_CAJAS.FECHAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IDCAJA() As Integer
            Get
                Return CType(Me(Me.tableIDA_CAJAS.IDCAJAColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableIDA_CAJAS.IDCAJAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LINEAS() As Integer
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.LINEASColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'LINEAS' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableIDA_CAJAS.LINEASColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PAGOSPROVEEDOR() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.PAGOSPROVEEDORColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PAGOSPROVEEDOR' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.PAGOSPROVEEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PENDIENTECOBRO() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.PENDIENTECOBROColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PENDIENTECOBRO' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.PENDIENTECOBROColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REPARTODOMICILIO() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.REPARTODOMICILIOColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'REPARTODOMICILIO' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.REPARTODOMICILIOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RETIRADAFONDOS() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.RETIRADAFONDOSColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RETIRADAFONDOS' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.RETIRADAFONDOSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TALON() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.TALONColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TALON' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.TALONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TARJETA() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.TARJETAColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TARJETA' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.TARJETAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TICKETS() As Integer
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.TICKETSColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TICKETS' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableIDA_CAJAS.TICKETSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VALESCOBRADOS() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.VALESCOBRADOSColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VALESCOBRADOS' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.VALESCOBRADOSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VALESEMITIDOS() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.VALESEMITIDOSColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VALESEMITIDOS' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.VALESEMITIDOSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VALESPROVEEDOR() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.VALESPROVEEDORColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VALESPROVEEDOR' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.VALESPROVEEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VENTA() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.VENTAColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VENTA' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.VENTAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INGRESO() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.INGRESOColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INGRESO' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.INGRESOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMALBARANES() As Integer
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.NUMALBARANESColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NUMALBARANES' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableIDA_CAJAS.NUMALBARANESColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTALBARANES() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.TOTALBARANESColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTALBARANES' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.TOTALBARANESColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTFACTURAS() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.TOTFACTURASColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTFACTURAS' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.TOTFACTURASColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTPRONTO() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.TOTPRONTOColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTPRONTO' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.TOTPRONTOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTREC() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.TOTRECColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTREC' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.TOTRECColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMFACTURAS() As Integer
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.NUMFACTURASColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NUMFACTURAS' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableIDA_CAJAS.NUMFACTURASColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VALESCANJEADOS() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.VALESCANJEADOSColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VALESCANJEADOS' de la tabla 'IDA_CAJAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.VALESCANJEADOSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PENDIENTECOBROCREDITO() As Double
            Get
                Try
                    Return CType(Me(Me.tableIDA_CAJAS.PENDIENTECOBROCREDITOColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PENDIENTECOBROCREDITO' de la tabla 'IDA_CAJAS' es DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableIDA_CAJAS.PENDIENTECOBROCREDITOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCOBROSCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.COBROSCLIENTEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCOBROSCLIENTENull()
            Me(Me.tableIDA_CAJAS.COBROSCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEFECTIVONull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.EFECTIVOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEFECTIVONull()
            Me(Me.tableIDA_CAJAS.EFECTIVOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsENTRADACAMBIOSNull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.ENTRADACAMBIOSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetENTRADACAMBIOSNull()
            Me(Me.tableIDA_CAJAS.ENTRADACAMBIOSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsENVASESNull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.ENVASESColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetENVASESNull()
            Me(Me.tableIDA_CAJAS.ENVASESColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLINEASNull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.LINEASColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLINEASNull()
            Me(Me.tableIDA_CAJAS.LINEASColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPAGOSPROVEEDORNull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.PAGOSPROVEEDORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPAGOSPROVEEDORNull()
            Me(Me.tableIDA_CAJAS.PAGOSPROVEEDORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPENDIENTECOBRONull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.PENDIENTECOBROColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPENDIENTECOBRONull()
            Me(Me.tableIDA_CAJAS.PENDIENTECOBROColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsREPARTODOMICILIONull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.REPARTODOMICILIOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetREPARTODOMICILIONull()
            Me(Me.tableIDA_CAJAS.REPARTODOMICILIOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRETIRADAFONDOSNull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.RETIRADAFONDOSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRETIRADAFONDOSNull()
            Me(Me.tableIDA_CAJAS.RETIRADAFONDOSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTALONNull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.TALONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTALONNull()
            Me(Me.tableIDA_CAJAS.TALONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTARJETANull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.TARJETAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTARJETANull()
            Me(Me.tableIDA_CAJAS.TARJETAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTICKETSNull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.TICKETSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTICKETSNull()
            Me(Me.tableIDA_CAJAS.TICKETSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVALESCOBRADOSNull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.VALESCOBRADOSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVALESCOBRADOSNull()
            Me(Me.tableIDA_CAJAS.VALESCOBRADOSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVALESEMITIDOSNull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.VALESEMITIDOSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVALESEMITIDOSNull()
            Me(Me.tableIDA_CAJAS.VALESEMITIDOSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVALESPROVEEDORNull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.VALESPROVEEDORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVALESPROVEEDORNull()
            Me(Me.tableIDA_CAJAS.VALESPROVEEDORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVENTANull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.VENTAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVENTANull()
            Me(Me.tableIDA_CAJAS.VENTAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsINGRESONull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.INGRESOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetINGRESONull()
            Me(Me.tableIDA_CAJAS.INGRESOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMALBARANESNull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.NUMALBARANESColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMALBARANESNull()
            Me(Me.tableIDA_CAJAS.NUMALBARANESColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTALBARANESNull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.TOTALBARANESColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTALBARANESNull()
            Me(Me.tableIDA_CAJAS.TOTALBARANESColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTFACTURASNull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.TOTFACTURASColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTFACTURASNull()
            Me(Me.tableIDA_CAJAS.TOTFACTURASColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTPRONTONull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.TOTPRONTOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTPRONTONull()
            Me(Me.tableIDA_CAJAS.TOTPRONTOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTRECNull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.TOTRECColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTRECNull()
            Me(Me.tableIDA_CAJAS.TOTRECColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMFACTURASNull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.NUMFACTURASColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMFACTURASNull()
            Me(Me.tableIDA_CAJAS.NUMFACTURASColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVALESCANJEADOSNull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.VALESCANJEADOSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVALESCANJEADOSNull()
            Me(Me.tableIDA_CAJAS.VALESCANJEADOSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPENDIENTECOBROCREDITONull() As Boolean
            Return Me.IsNull(Me.tableIDA_CAJAS.PENDIENTECOBROCREDITOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPENDIENTECOBROCREDITONull()
            Me(Me.tableIDA_CAJAS.PENDIENTECOBROCREDITOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RECEPCIONRow
        Inherits Global.System.Data.DataRow

        Private tableRECEPCION As RECEPCIONDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRECEPCION = CType(Me.Table, RECEPCIONDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPO() As String
            Get
                Try
                    Return CType(Me(Me.tableRECEPCION.TIPOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO' de la tabla 'RECEPCION' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECEPCION.TIPOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODALM() As String
            Get
                Try
                    Return CType(Me(Me.tableRECEPCION.CODALMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODALM' de la tabla 'RECEPCION' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECEPCION.CODALMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FICHERO() As String
            Get
                Try
                    Return CType(Me(Me.tableRECEPCION.FICHEROColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FICHERO' de la tabla 'RECEPCION' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECEPCION.FICHEROColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESCRIPCION() As String
            Get
                Try
                    Return CType(Me(Me.tableRECEPCION.DESCRIPCIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESCRIPCION' de la tabla 'RECEPCION' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECEPCION.DESCRIPCIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LOG() As String
            Get
                Try
                    Return CType(Me(Me.tableRECEPCION.LOGColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'LOG' de la tabla 'RECEPCION' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECEPCION.LOGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IMPORTAR() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableRECEPCION.IMPORTARColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMPORTAR' de la tabla 'RECEPCION' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableRECEPCION.IMPORTARColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESTADO() As Integer
            Get
                Try
                    Return CType(Me(Me.tableRECEPCION.ESTADOColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESTADO' de la tabla 'RECEPCION' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableRECEPCION.ESTADOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESCALM() As String
            Get
                Try
                    Return CType(Me(Me.tableRECEPCION.DESCALMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESCALM' de la tabla 'RECEPCION' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECEPCION.DESCALMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTALTICKETS() As Integer
            Get
                Try
                    Return CType(Me(Me.tableRECEPCION.TOTALTICKETSColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTALTICKETS' de la tabla 'RECEPCION' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableRECEPCION.TOTALTICKETSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTALLINEAS() As Integer
            Get
                Try
                    Return CType(Me(Me.tableRECEPCION.TOTALLINEASColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTALLINEAS' de la tabla 'RECEPCION' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableRECEPCION.TOTALLINEASColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPOTIENDA() As String
            Get
                Try
                    Return CType(Me(Me.tableRECEPCION.TIPOTIENDAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOTIENDA' de la tabla 'RECEPCION' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECEPCION.TIPOTIENDAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PEDIDO_FECHA() As Date
            Get
                Try
                    Return CType(Me(Me.tableRECEPCION.PEDIDO_FECHAColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PEDIDO_FECHA' de la tabla 'RECEPCION' es DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableRECEPCION.PEDIDO_FECHAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PEDIDO_FECHAVALOR() As Date
            Get
                Try
                    Return CType(Me(Me.tableRECEPCION.PEDIDO_FECHAVALORColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PEDIDO_FECHAVALOR' de la tabla 'RECEPCION' es DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableRECEPCION.PEDIDO_FECHAVALORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PEDIDO_DESGLOSE() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableRECEPCION.PEDIDO_DESGLOSEColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PEDIDO_DESGLOSE' de la tabla 'RECEPCION' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableRECEPCION.PEDIDO_DESGLOSEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PROGRESO() As Integer
            Get
                Try
                    Return CType(Me(Me.tableRECEPCION.PROGRESOColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PROGRESO' de la tabla 'RECEPCION' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableRECEPCION.PROGRESOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPONull() As Boolean
            Return Me.IsNull(Me.tableRECEPCION.TIPOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPONull()
            Me(Me.tableRECEPCION.TIPOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCODALMNull() As Boolean
            Return Me.IsNull(Me.tableRECEPCION.CODALMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCODALMNull()
            Me(Me.tableRECEPCION.CODALMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFICHERONull() As Boolean
            Return Me.IsNull(Me.tableRECEPCION.FICHEROColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFICHERONull()
            Me(Me.tableRECEPCION.FICHEROColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESCRIPCIONNull() As Boolean
            Return Me.IsNull(Me.tableRECEPCION.DESCRIPCIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESCRIPCIONNull()
            Me(Me.tableRECEPCION.DESCRIPCIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLOGNull() As Boolean
            Return Me.IsNull(Me.tableRECEPCION.LOGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLOGNull()
            Me(Me.tableRECEPCION.LOGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIMPORTARNull() As Boolean
            Return Me.IsNull(Me.tableRECEPCION.IMPORTARColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIMPORTARNull()
            Me(Me.tableRECEPCION.IMPORTARColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsESTADONull() As Boolean
            Return Me.IsNull(Me.tableRECEPCION.ESTADOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetESTADONull()
            Me(Me.tableRECEPCION.ESTADOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESCALMNull() As Boolean
            Return Me.IsNull(Me.tableRECEPCION.DESCALMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESCALMNull()
            Me(Me.tableRECEPCION.DESCALMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTALTICKETSNull() As Boolean
            Return Me.IsNull(Me.tableRECEPCION.TOTALTICKETSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTALTICKETSNull()
            Me(Me.tableRECEPCION.TOTALTICKETSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTALLINEASNull() As Boolean
            Return Me.IsNull(Me.tableRECEPCION.TOTALLINEASColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTALLINEASNull()
            Me(Me.tableRECEPCION.TOTALLINEASColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPOTIENDANull() As Boolean
            Return Me.IsNull(Me.tableRECEPCION.TIPOTIENDAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPOTIENDANull()
            Me(Me.tableRECEPCION.TIPOTIENDAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPEDIDO_FECHANull() As Boolean
            Return Me.IsNull(Me.tableRECEPCION.PEDIDO_FECHAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPEDIDO_FECHANull()
            Me(Me.tableRECEPCION.PEDIDO_FECHAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPEDIDO_FECHAVALORNull() As Boolean
            Return Me.IsNull(Me.tableRECEPCION.PEDIDO_FECHAVALORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPEDIDO_FECHAVALORNull()
            Me(Me.tableRECEPCION.PEDIDO_FECHAVALORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPEDIDO_DESGLOSENull() As Boolean
            Return Me.IsNull(Me.tableRECEPCION.PEDIDO_DESGLOSEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPEDIDO_DESGLOSENull()
            Me(Me.tableRECEPCION.PEDIDO_DESGLOSEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPROGRESONull() As Boolean
            Return Me.IsNull(Me.tableRECEPCION.PROGRESOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPROGRESONull()
            Me(Me.tableRECEPCION.PROGRESOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CABETRASRow
        Inherits Global.System.Data.DataRow

        Private tableCABETRAS As CABETRASDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCABETRAS = CType(Me.Table, CABETRASDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMLIN() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCABETRAS.NUMLINColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NUMLIN' de la tabla 'CABETRAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableCABETRAS.NUMLINColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODALMENT() As String
            Get
                Return CType(Me(Me.tableCABETRAS.CODALMENTColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCABETRAS.CODALMENTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODALMSAL() As String
            Get
                Return CType(Me(Me.tableCABETRAS.CODALMSALColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCABETRAS.CODALMSALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHA() As Date
            Get
                Try
                    Return CType(Me(Me.tableCABETRAS.FECHAColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA' de la tabla 'CABETRAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableCABETRAS.FECHAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FICHERO() As String
            Get
                Try
                    Return CType(Me(Me.tableCABETRAS.FICHEROColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FICHERO' de la tabla 'CABETRAS' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCABETRAS.FICHEROColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMLINNull() As Boolean
            Return Me.IsNull(Me.tableCABETRAS.NUMLINColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMLINNull()
            Me(Me.tableCABETRAS.NUMLINColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFECHANull() As Boolean
            Return Me.IsNull(Me.tableCABETRAS.FECHAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFECHANull()
            Me(Me.tableCABETRAS.FECHAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFICHERONull() As Boolean
            Return Me.IsNull(Me.tableCABETRAS.FICHEROColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFICHERONull()
            Me(Me.tableCABETRAS.FICHEROColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetLINETRASRows() As LINETRASRow()
            If (Me.Table.ChildRelations("CABETRAS_LINETRAS") Is Nothing) Then
                Return New LINETRASRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("CABETRAS_LINETRAS")), LINETRASRow())
            End If
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LINETRASRow
        Inherits Global.System.Data.DataRow

        Private tableLINETRAS As LINETRASDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLINETRAS = CType(Me.Table, LINETRASDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMLIN() As Integer
            Get
                Try
                    Return CType(Me(Me.tableLINETRAS.NUMLINColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NUMLIN' de la tabla 'LINETRAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableLINETRAS.NUMLINColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODART() As String
            Get
                Return CType(Me(Me.tableLINETRAS.CODARTColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableLINETRAS.CODARTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UNIDADES() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableLINETRAS.UNIDADESColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UNIDADES' de la tabla 'LINETRAS' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableLINETRAS.UNIDADESColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CABETRASRow() As CABETRASRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CABETRAS_LINETRAS")), CABETRASRow)
            End Get
            Set(value As CABETRASRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("CABETRAS_LINETRAS"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMLINNull() As Boolean
            Return Me.IsNull(Me.tableLINETRAS.NUMLINColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMLINNull()
            Me(Me.tableLINETRAS.NUMLINColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUNIDADESNull() As Boolean
            Return Me.IsNull(Me.tableLINETRAS.UNIDADESColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUNIDADESNull()
            Me(Me.tableLINETRAS.UNIDADESColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CABEPEDVRow
        Inherits Global.System.Data.DataRow

        Private tableCABEPEDV As CABEPEDVDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCABEPEDV = CType(Me.Table, CABEPEDVDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMLIN() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCABEPEDV.NUMLINColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NUMLIN' de la tabla 'CABEPEDV' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableCABEPEDV.NUMLINColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODALM() As String
            Get
                Return CType(Me(Me.tableCABEPEDV.CODALMColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCABEPEDV.CODALMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHA() As Date
            Get
                Try
                    Return CType(Me(Me.tableCABEPEDV.FECHAColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA' de la tabla 'CABEPEDV' es DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableCABEPEDV.FECHAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHAVALOR() As Date
            Get
                Try
                    Return CType(Me(Me.tableCABEPEDV.FECHAVALORColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHAVALOR' de la tabla 'CABEPEDV' es DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableCABEPEDV.FECHAVALORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FICHERO() As String
            Get
                Try
                    Return CType(Me(Me.tableCABEPEDV.FICHEROColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FICHERO' de la tabla 'CABEPEDV' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCABEPEDV.FICHEROColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPOTIENDA() As String
            Get
                Try
                    Return CType(Me(Me.tableCABEPEDV.TIPOTIENDAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOTIENDA' de la tabla 'CABEPEDV' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCABEPEDV.TIPOTIENDAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESGLOSE() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableCABEPEDV.DESGLOSEColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESGLOSE' de la tabla 'CABEPEDV' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableCABEPEDV.DESGLOSEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMLINNull() As Boolean
            Return Me.IsNull(Me.tableCABEPEDV.NUMLINColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMLINNull()
            Me(Me.tableCABEPEDV.NUMLINColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFECHANull() As Boolean
            Return Me.IsNull(Me.tableCABEPEDV.FECHAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFECHANull()
            Me(Me.tableCABEPEDV.FECHAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFECHAVALORNull() As Boolean
            Return Me.IsNull(Me.tableCABEPEDV.FECHAVALORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFECHAVALORNull()
            Me(Me.tableCABEPEDV.FECHAVALORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFICHERONull() As Boolean
            Return Me.IsNull(Me.tableCABEPEDV.FICHEROColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFICHERONull()
            Me(Me.tableCABEPEDV.FICHEROColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPOTIENDANull() As Boolean
            Return Me.IsNull(Me.tableCABEPEDV.TIPOTIENDAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPOTIENDANull()
            Me(Me.tableCABEPEDV.TIPOTIENDAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESGLOSENull() As Boolean
            Return Me.IsNull(Me.tableCABEPEDV.DESGLOSEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESGLOSENull()
            Me(Me.tableCABEPEDV.DESGLOSEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetLINEPEDIRows() As LINEPEDIRow()
            If (Me.Table.ChildRelations("CABETRAS_LINETRAS1") Is Nothing) Then
                Return New LINEPEDIRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("CABETRAS_LINETRAS1")), LINEPEDIRow())
            End If
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LINEPEDIRow
        Inherits Global.System.Data.DataRow

        Private tableLINEPEDI As LINEPEDIDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLINEPEDI = CType(Me.Table, LINEPEDIDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMLIN() As Integer
            Get
                Try
                    Return CType(Me(Me.tableLINEPEDI.NUMLINColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NUMLIN' de la tabla 'LINEPEDI' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableLINEPEDI.NUMLINColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODART() As String
            Get
                Return CType(Me(Me.tableLINEPEDI.CODARTColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableLINEPEDI.CODARTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CAJAS() As Integer
            Get
                Try
                    Return CType(Me(Me.tableLINEPEDI.CAJASColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CAJAS' de la tabla 'LINEPEDI' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableLINEPEDI.CAJASColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UNIDADES() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableLINEPEDI.UNIDADESColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UNIDADES' de la tabla 'LINEPEDI' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableLINEPEDI.UNIDADESColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CABEPEDVRow() As CABEPEDVRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CABETRAS_LINETRAS1")), CABEPEDVRow)
            End Get
            Set(value As CABEPEDVRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("CABETRAS_LINETRAS1"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMLINNull() As Boolean
            Return Me.IsNull(Me.tableLINEPEDI.NUMLINColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMLINNull()
            Me(Me.tableLINEPEDI.NUMLINColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCAJASNull() As Boolean
            Return Me.IsNull(Me.tableLINEPEDI.CAJASColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCAJASNull()
            Me(Me.tableLINEPEDI.CAJASColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUNIDADESNull() As Boolean
            Return Me.IsNull(Me.tableLINEPEDI.UNIDADESColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUNIDADESNull()
            Me(Me.tableLINEPEDI.UNIDADESColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CABEREGURow
        Inherits Global.System.Data.DataRow

        Private tableCABEREGU As CABEREGUDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCABEREGU = CType(Me.Table, CABEREGUDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMLIN() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCABEREGU.NUMLINColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NUMLIN' de la tabla 'CABEREGU' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableCABEREGU.NUMLINColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODALM() As String
            Get
                Try
                    Return CType(Me(Me.tableCABEREGU.CODALMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODALM' de la tabla 'CABEREGU' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCABEREGU.CODALMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHA() As Date
            Get
                Try
                    Return CType(Me(Me.tableCABEREGU.FECHAColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA' de la tabla 'CABEREGU' es DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableCABEREGU.FECHAColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FICHERO() As String
            Get
                Try
                    Return CType(Me(Me.tableCABEREGU.FICHEROColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FICHERO' de la tabla 'CABEREGU' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCABEREGU.FICHEROColumn) = Value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMLINNull() As Boolean
            Return Me.IsNull(Me.tableCABEREGU.NUMLINColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMLINNull()
            Me(Me.tableCABEREGU.NUMLINColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCODALMNull() As Boolean
            Return Me.IsNull(Me.tableCABEREGU.CODALMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCODALMNull()
            Me(Me.tableCABEREGU.CODALMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFECHANull() As Boolean
            Return Me.IsNull(Me.tableCABEREGU.FECHAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFECHANull()
            Me(Me.tableCABEREGU.FECHAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFICHERONull() As Boolean
            Return Me.IsNull(Me.tableCABEREGU.FICHEROColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFICHERONull()
            Me(Me.tableCABEREGU.FICHEROColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetLINEREGURows() As LINEREGURow()
            If (Me.Table.ChildRelations("CABEREGU_LINEREGU") Is Nothing) Then
                Return New LINEREGURow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("CABEREGU_LINEREGU")), LINEREGURow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LINEREGURow
        Inherits Global.System.Data.DataRow
        
        Private tableLINEREGU As LINEREGUDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLINEREGU = CType(Me.Table,LINEREGUDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMLIN() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableLINEREGU.NUMLINColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NUMLIN' de la tabla 'LINEREGU' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLINEREGU.NUMLINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableLINEREGU.TIPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO' de la tabla 'LINEREGU' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLINEREGU.TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OPERARIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableLINEREGU.OPERARIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OPERARIO' de la tabla 'LINEREGU' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLINEREGU.OPERARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODART() As String
            Get
                Try 
                    Return CType(Me(Me.tableLINEREGU.CODARTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODART' de la tabla 'LINEREGU' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLINEREGU.CODARTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCLIN() As String
            Get
                Try 
                    Return CType(Me(Me.tableLINEREGU.DESCLINColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESCLIN' de la tabla 'LINEREGU' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLINEREGU.DESCLINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TEXTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableLINEREGU.TEXTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TEXTO' de la tabla 'LINEREGU' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLINEREGU.TEXTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UNIDADES1() As String
            Get
                Try 
                    Return CType(Me(Me.tableLINEREGU.UNIDADES1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UNIDADES1' de la tabla 'LINEREGU' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLINEREGU.UNIDADES1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRCCOSTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableLINEREGU.PRCCOSTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRCCOSTE' de la tabla 'LINEREGU' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLINEREGU.PRCCOSTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UNIDADES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableLINEREGU.UNIDADESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UNIDADES' de la tabla 'LINEREGU' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLINEREGU.UNIDADESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CABEREGURow() As CABEREGURow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CABEREGU_LINEREGU")),CABEREGURow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("CABEREGU_LINEREGU"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMLINNull() As Boolean
            Return Me.IsNull(Me.tableLINEREGU.NUMLINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMLINNull()
            Me(Me.tableLINEREGU.NUMLINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPONull() As Boolean
            Return Me.IsNull(Me.tableLINEREGU.TIPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPONull()
            Me(Me.tableLINEREGU.TIPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOPERARIONull() As Boolean
            Return Me.IsNull(Me.tableLINEREGU.OPERARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOPERARIONull()
            Me(Me.tableLINEREGU.OPERARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODARTNull() As Boolean
            Return Me.IsNull(Me.tableLINEREGU.CODARTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODARTNull()
            Me(Me.tableLINEREGU.CODARTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCLINNull() As Boolean
            Return Me.IsNull(Me.tableLINEREGU.DESCLINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCLINNull()
            Me(Me.tableLINEREGU.DESCLINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTEXTONull() As Boolean
            Return Me.IsNull(Me.tableLINEREGU.TEXTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTEXTONull()
            Me(Me.tableLINEREGU.TEXTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUNIDADES1Null() As Boolean
            Return Me.IsNull(Me.tableLINEREGU.UNIDADES1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUNIDADES1Null()
            Me(Me.tableLINEREGU.UNIDADES1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRCCOSTENull() As Boolean
            Return Me.IsNull(Me.tableLINEREGU.PRCCOSTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRCCOSTENull()
            Me(Me.tableLINEREGU.PRCCOSTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUNIDADESNull() As Boolean
            Return Me.IsNull(Me.tableLINEREGU.UNIDADESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUNIDADESNull()
            Me(Me.tableLINEREGU.UNIDADESColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class IDA_TICKETSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IDA_TICKETSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As IDA_TICKETSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As IDA_TICKETSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class IDA_TICKETSLINEASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IDA_TICKETSLINEASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As IDA_TICKETSLINEASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As IDA_TICKETSLINEASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class IDA_CAJASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IDA_CAJASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As IDA_CAJASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As IDA_CAJASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RECEPCIONRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RECEPCIONRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RECEPCIONRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RECEPCIONRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CABETRASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CABETRASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CABETRASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CABETRASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class LINETRASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LINETRASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As LINETRASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As LINETRASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CABEPEDVRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CABEPEDVRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CABEPEDVRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CABEPEDVRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class LINEPEDIRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LINEPEDIRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As LINEPEDIRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As LINEPEDIRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CABEREGURowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CABEREGURow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CABEREGURow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CABEREGURow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class LINEREGURowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LINEREGURow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As LINEREGURow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As LINEREGURow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsTPVRecepcionTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class IDA_TICKETSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "IDA_TICKETS"
            tableMapping.ColumnMappings.Add("CAJA", "CAJA")
            tableMapping.ColumnMappings.Add("CODALM", "CODALM")
            tableMapping.ColumnMappings.Add("CODPER", "CODPER")
            tableMapping.ColumnMappings.Add("CREDITO", "CREDITO")
            tableMapping.ColumnMappings.Add("FECCIERRE", "FECCIERRE")
            tableMapping.ColumnMappings.Add("FECHA", "FECHA")
            tableMapping.ColumnMappings.Add("IDFACV", "IDFACV")
            tableMapping.ColumnMappings.Add("IDTICKET", "IDTICKET")
            tableMapping.ColumnMappings.Add("IMPRESO", "IMPRESO")
            tableMapping.ColumnMappings.Add("NUMDOC", "NUMDOC")
            tableMapping.ColumnMappings.Add("NUMLINEAS", "NUMLINEAS")
            tableMapping.ColumnMappings.Add("PORDESC", "PORDESC")
            tableMapping.ColumnMappings.Add("REPARTODOMICILIO", "REPARTODOMICILIO")
            tableMapping.ColumnMappings.Add("TIPOCOBRO", "TIPOCOBRO")
            tableMapping.ColumnMappings.Add("IDALBV", "IDALBV")
            tableMapping.ColumnMappings.Add("NUMTARJETA", "NUMTARJETA")
            tableMapping.ColumnMappings.Add("TOTCAMBIOS", "TOTCAMBIOS")
            tableMapping.ColumnMappings.Add("TOTDESC", "TOTDESC")
            tableMapping.ColumnMappings.Add("TOTDOC", "TOTDOC")
            tableMapping.ColumnMappings.Add("TOTEFECTIVO", "TOTEFECTIVO")
            tableMapping.ColumnMappings.Add("TOTENTREGA", "TOTENTREGA")
            tableMapping.ColumnMappings.Add("TOTENVASES", "TOTENVASES")
            tableMapping.ColumnMappings.Add("TOTPENDIENTE", "TOTPENDIENTE")
            tableMapping.ColumnMappings.Add("TOTTALON", "TOTTALON")
            tableMapping.ColumnMappings.Add("TOTTARJETA", "TOTTARJETA")
            tableMapping.ColumnMappings.Add("TOTVALESCOBRADOS", "TOTVALESCOBRADOS")
            tableMapping.ColumnMappings.Add("TOTVALESEMITIDOS", "TOTVALESEMITIDOS")
            tableMapping.ColumnMappings.Add("TOTVALESPROVEEDOR", "TOTVALESPROVEEDOR")
            tableMapping.ColumnMappings.Add("TOTPUNTOS", "TOTPUNTOS")
            tableMapping.ColumnMappings.Add("CANJEPUNTOS", "CANJEPUNTOS")
            tableMapping.ColumnMappings.Add("CANJEVALES", "CANJEVALES")
            tableMapping.ColumnMappings.Add("CODCLI", "CODCLI")
            tableMapping.ColumnMappings.Add("FIDELIZADTO", "FIDELIZADTO")
            tableMapping.ColumnMappings.Add("FIDELIZALOTERIA", "FIDELIZALOTERIA")
            tableMapping.ColumnMappings.Add("FIDELIZAPUNTOS", "FIDELIZAPUNTOS")
            tableMapping.ColumnMappings.Add("FIDELIZAVALES", "FIDELIZAVALES")
            tableMapping.ColumnMappings.Add("PORPRONTO", "PORPRONTO")
            tableMapping.ColumnMappings.Add("TIPDOC", "TIPDOC")
            tableMapping.ColumnMappings.Add("TOTPRONTO", "TOTPRONTO")
            tableMapping.ColumnMappings.Add("TOTREC", "TOTREC")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [IDA_TICKETS] WHERE (((@IsNull_CAJA = 1 AND [CAJA] IS NULL) OR ([CAJA"& _ 
                "] = @Original_CAJA)) AND ([CODALM] = @Original_CODALM) AND ((@IsNull_CODPER = 1 "& _ 
                "AND [CODPER] IS NULL) OR ([CODPER] = @Original_CODPER)) AND ((@IsNull_CREDITO = "& _ 
                "1 AND [CREDITO] IS NULL) OR ([CREDITO] = @Original_CREDITO)) AND ([FECCIERRE] = "& _ 
                "@Original_FECCIERRE) AND ((@IsNull_FECHA = 1 AND [FECHA] IS NULL) OR ([FECHA] = "& _ 
                "@Original_FECHA)) AND ((@IsNull_IDFACV = 1 AND [IDFACV] IS NULL) OR ([IDFACV] = "& _ 
                "@Original_IDFACV)) AND ([IDTICKET] = @Original_IDTICKET) AND ((@IsNull_IMPRESO ="& _ 
                " 1 AND [IMPRESO] IS NULL) OR ([IMPRESO] = @Original_IMPRESO)) AND ((@IsNull_NUMD"& _ 
                "OC = 1 AND [NUMDOC] IS NULL) OR ([NUMDOC] = @Original_NUMDOC)) AND ((@IsNull_NUM"& _ 
                "LINEAS = 1 AND [NUMLINEAS] IS NULL) OR ([NUMLINEAS] = @Original_NUMLINEAS)) AND "& _ 
                "((@IsNull_PORDESC = 1 AND [PORDESC] IS NULL) OR ([PORDESC] = @Original_PORDESC))"& _ 
                " AND ((@IsNull_REPARTODOMICILIO = 1 AND [REPARTODOMICILIO] IS NULL) OR ([REPARTO"& _ 
                "DOMICILIO] = @Original_REPARTODOMICILIO)) AND ((@IsNull_TIPOCOBRO = 1 AND [TIPOC"& _ 
                "OBRO] IS NULL) OR ([TIPOCOBRO] = @Original_TIPOCOBRO)) AND ((@IsNull_NUMTARJETA "& _ 
                "= 1 AND [NUMTARJETA] IS NULL) OR ([NUMTARJETA] = @Original_NUMTARJETA)) AND ((@I"& _ 
                "sNull_TOTCAMBIOS = 1 AND [TOTCAMBIOS] IS NULL) OR ([TOTCAMBIOS] = @Original_TOTC"& _ 
                "AMBIOS)) AND ((@IsNull_TOTDESC = 1 AND [TOTDESC] IS NULL) OR ([TOTDESC] = @Origi"& _ 
                "nal_TOTDESC)) AND ((@IsNull_TOTDOC = 1 AND [TOTDOC] IS NULL) OR ([TOTDOC] = @Ori"& _ 
                "ginal_TOTDOC)) AND ((@IsNull_TOTEFECTIVO = 1 AND [TOTEFECTIVO] IS NULL) OR ([TOT"& _ 
                "EFECTIVO] = @Original_TOTEFECTIVO)) AND ((@IsNull_TOTENTREGA = 1 AND [TOTENTREGA"& _ 
                "] IS NULL) OR ([TOTENTREGA] = @Original_TOTENTREGA)) AND ((@IsNull_TOTENVASES = "& _ 
                "1 AND [TOTENVASES] IS NULL) OR ([TOTENVASES] = @Original_TOTENVASES)) AND ((@IsN"& _ 
                "ull_TOTPENDIENTE = 1 AND [TOTPENDIENTE] IS NULL) OR ([TOTPENDIENTE] = @Original_"& _ 
                "TOTPENDIENTE)) AND ((@IsNull_TOTTALON = 1 AND [TOTTALON] IS NULL) OR ([TOTTALON]"& _ 
                " = @Original_TOTTALON)) AND ((@IsNull_TOTTARJETA = 1 AND [TOTTARJETA] IS NULL) O"& _ 
                "R ([TOTTARJETA] = @Original_TOTTARJETA)) AND ((@IsNull_TOTVALESCOBRADOS = 1 AND "& _ 
                "[TOTVALESCOBRADOS] IS NULL) OR ([TOTVALESCOBRADOS] = @Original_TOTVALESCOBRADOS)"& _ 
                ") AND ((@IsNull_TOTVALESEMITIDOS = 1 AND [TOTVALESEMITIDOS] IS NULL) OR ([TOTVAL"& _ 
                "ESEMITIDOS] = @Original_TOTVALESEMITIDOS)) AND ((@IsNull_TOTVALESPROVEEDOR = 1 A"& _ 
                "ND [TOTVALESPROVEEDOR] IS NULL) OR ([TOTVALESPROVEEDOR] = @Original_TOTVALESPROV"& _ 
                "EEDOR)) AND ((@IsNull_IDALBV = 1 AND [IDALBV] IS NULL) OR ([IDALBV] = @Original_"& _ 
                "IDALBV)) AND ((@IsNull_TOTPUNTOS = 1 AND [TOTPUNTOS] IS NULL) OR ([TOTPUNTOS] = "& _ 
                "@Original_TOTPUNTOS)) AND ((@IsNull_CANJEPUNTOS = 1 AND [CANJEPUNTOS] IS NULL) O"& _ 
                "R ([CANJEPUNTOS] = @Original_CANJEPUNTOS)) AND ((@IsNull_CANJEVALES = 1 AND [CAN"& _ 
                "JEVALES] IS NULL) OR ([CANJEVALES] = @Original_CANJEVALES)) AND ((@IsNull_CODCLI"& _ 
                " = 1 AND [CODCLI] IS NULL) OR ([CODCLI] = @Original_CODCLI)) AND ((@IsNull_FIDEL"& _ 
                "IZADTO = 1 AND [FIDELIZADTO] IS NULL) OR ([FIDELIZADTO] = @Original_FIDELIZADTO)"& _ 
                ") AND ((@IsNull_FIDELIZALOTERIA = 1 AND [FIDELIZALOTERIA] IS NULL) OR ([FIDELIZA"& _ 
                "LOTERIA] = @Original_FIDELIZALOTERIA)) AND ((@IsNull_FIDELIZAPUNTOS = 1 AND [FID"& _ 
                "ELIZAPUNTOS] IS NULL) OR ([FIDELIZAPUNTOS] = @Original_FIDELIZAPUNTOS)) AND ((@I"& _ 
                "sNull_FIDELIZAVALES = 1 AND [FIDELIZAVALES] IS NULL) OR ([FIDELIZAVALES] = @Orig"& _ 
                "inal_FIDELIZAVALES)) AND ((@IsNull_PORPRONTO = 1 AND [PORPRONTO] IS NULL) OR ([P"& _ 
                "ORPRONTO] = @Original_PORPRONTO)) AND ((@IsNull_TIPDOC = 1 AND [TIPDOC] IS NULL)"& _ 
                " OR ([TIPDOC] = @Original_TIPDOC)) AND ((@IsNull_TOTPRONTO = 1 AND [TOTPRONTO] I"& _ 
                "S NULL) OR ([TOTPRONTO] = @Original_TOTPRONTO)) AND ((@IsNull_TOTREC = 1 AND [TO"& _ 
                "TREC] IS NULL) OR ([TOTREC] = @Original_TOTREC)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODALM", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODALM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODPER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREDITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREDITO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREDITO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREDITO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECCIERRE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECCIERRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IDFACV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDFACV", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDFACV", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDFACV", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDTICKET", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDTICKET", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPRESO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMDOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMDOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMLINEAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMLINEAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMLINEAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMLINEAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PORDESC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PORDESC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PORDESC", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "PORDESC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REPARTODOMICILIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPARTODOMICILIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPARTODOMICILIO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPARTODOMICILIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMTARJETA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTARJETA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMTARJETA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTARJETA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTCAMBIOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTCAMBIOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTCAMBIOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTCAMBIOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTDESC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTDESC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTDESC", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTDESC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTDOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTDOC", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTDOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTEFECTIVO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTEFECTIVO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTEFECTIVO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTEFECTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTENTREGA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTENTREGA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTENTREGA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTENTREGA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTENVASES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTENVASES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTENVASES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTENVASES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTPENDIENTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPENDIENTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTPENDIENTE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPENDIENTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTTALON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTTALON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTTALON", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTTALON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTTARJETA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTTARJETA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTTARJETA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTTARJETA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTVALESCOBRADOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESCOBRADOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTVALESCOBRADOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESCOBRADOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTVALESEMITIDOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESEMITIDOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTVALESEMITIDOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESEMITIDOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTVALESPROVEEDOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESPROVEEDOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTVALESPROVEEDOR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESPROVEEDOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IDALBV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDALBV", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDALBV", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDALBV", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTPUNTOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPUNTOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTPUNTOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPUNTOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CANJEPUNTOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANJEPUNTOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANJEPUNTOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANJEPUNTOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CANJEVALES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANJEVALES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANJEVALES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANJEVALES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCLI", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCLI", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCLI", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCLI", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FIDELIZADTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZADTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FIDELIZADTO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZADTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FIDELIZALOTERIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZALOTERIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FIDELIZALOTERIA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZALOTERIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FIDELIZAPUNTOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZAPUNTOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FIDELIZAPUNTOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZAPUNTOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FIDELIZAVALES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZAVALES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FIDELIZAVALES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZAVALES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PORPRONTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PORPRONTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PORPRONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "PORPRONTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPDOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPDOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTPRONTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPRONTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTPRONTO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPRONTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTREC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTREC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTREC", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTREC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [IDA_TICKETS] ([CAJA], [CODALM], [CODPER], [CREDITO], [FECCIERRE], [F"& _ 
                "ECHA], [IDFACV], [IMPRESO], [NUMDOC], [NUMLINEAS], [PORDESC], [REPARTODOMICILIO]"& _ 
                ", [TIPOCOBRO], [NUMTARJETA], [TOTCAMBIOS], [TOTDESC], [TOTDOC], [TOTEFECTIVO], ["& _ 
                "TOTENTREGA], [TOTENVASES], [TOTPENDIENTE], [TOTTALON], [TOTTARJETA], [TOTVALESCO"& _ 
                "BRADOS], [TOTVALESEMITIDOS], [TOTVALESPROVEEDOR], [IDALBV], [TOTPUNTOS], [CANJEP"& _ 
                "UNTOS], [CANJEVALES], [CODCLI], [FIDELIZADTO], [FIDELIZALOTERIA], [FIDELIZAPUNTO"& _ 
                "S], [FIDELIZAVALES], [PORPRONTO], [TIPDOC], [TOTPRONTO], [TOTREC]) VALUES (@CAJA"& _ 
                ", @CODALM, @CODPER, @CREDITO, @FECCIERRE, @FECHA, @IDFACV, @IMPRESO, @NUMDOC, @N"& _ 
                "UMLINEAS, @PORDESC, @REPARTODOMICILIO, @TIPOCOBRO, @NUMTARJETA, @TOTCAMBIOS, @TO"& _ 
                "TDESC, @TOTDOC, @TOTEFECTIVO, @TOTENTREGA, @TOTENVASES, @TOTPENDIENTE, @TOTTALON"& _ 
                ", @TOTTARJETA, @TOTVALESCOBRADOS, @TOTVALESEMITIDOS, @TOTVALESPROVEEDOR, @IDALBV"& _ 
                ", @TOTPUNTOS, @CANJEPUNTOS, @CANJEVALES, @CODCLI, @FIDELIZADTO, @FIDELIZALOTERIA"& _ 
                ", @FIDELIZAPUNTOS, @FIDELIZAVALES, @PORPRONTO, @TIPDOC, @TOTPRONTO, @TOTREC);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"S"& _ 
                "ELECT CAJA, CODALM, CODPER, CREDITO, FECCIERRE, FECHA, IDFACV, IDTICKET, IMPRESO"& _ 
                ", NUMDOC, NUMLINEAS, PORDESC, REPARTODOMICILIO, TIPOCOBRO, NUMTARJETA, TOTCAMBIO"& _ 
                "S, TOTDESC, TOTDOC, TOTEFECTIVO, TOTENTREGA, TOTENVASES, TOTPENDIENTE, TOTTALON,"& _ 
                " TOTTARJETA, TOTVALESCOBRADOS, TOTVALESEMITIDOS, TOTVALESPROVEEDOR, IDALBV, TOTP"& _ 
                "UNTOS, CANJEPUNTOS, CANJEVALES, CODCLI, FIDELIZADTO, FIDELIZALOTERIA, FIDELIZAPU"& _ 
                "NTOS, FIDELIZAVALES, PORPRONTO, TIPDOC, TOTPRONTO, TOTREC FROM IDA_TICKETS WHERE"& _ 
                " (IDTICKET = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODALM", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODALM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREDITO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREDITO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECCIERRE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECCIERRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDFACV", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDFACV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPRESO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMDOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMLINEAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMLINEAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PORDESC", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "PORDESC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPARTODOMICILIO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPARTODOMICILIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMTARJETA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTARJETA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTCAMBIOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTCAMBIOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTDESC", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTDESC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTDOC", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTDOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTEFECTIVO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTEFECTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTENTREGA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTENTREGA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTENVASES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTENVASES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTPENDIENTE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPENDIENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTTALON", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTTALON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTTARJETA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTTARJETA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTVALESCOBRADOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESCOBRADOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTVALESEMITIDOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESEMITIDOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTVALESPROVEEDOR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESPROVEEDOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDALBV", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDALBV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTPUNTOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPUNTOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANJEPUNTOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANJEPUNTOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANJEVALES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANJEVALES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCLI", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCLI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FIDELIZADTO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZADTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FIDELIZALOTERIA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZALOTERIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FIDELIZAPUNTOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZAPUNTOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FIDELIZAVALES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZAVALES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PORPRONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "PORPRONTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPDOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTPRONTO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPRONTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTREC", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTREC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [IDA_TICKETS] SET [CAJA] = @CAJA, [CODALM] = @CODALM, [CODPER] = @CODPER, "& _ 
                "[CREDITO] = @CREDITO, [FECCIERRE] = @FECCIERRE, [FECHA] = @FECHA, [IDFACV] = @ID"& _ 
                "FACV, [IMPRESO] = @IMPRESO, [NUMDOC] = @NUMDOC, [NUMLINEAS] = @NUMLINEAS, [PORDE"& _ 
                "SC] = @PORDESC, [REPARTODOMICILIO] = @REPARTODOMICILIO, [TIPOCOBRO] = @TIPOCOBRO"& _ 
                ", [NUMTARJETA] = @NUMTARJETA, [TOTCAMBIOS] = @TOTCAMBIOS, [TOTDESC] = @TOTDESC, "& _ 
                "[TOTDOC] = @TOTDOC, [TOTEFECTIVO] = @TOTEFECTIVO, [TOTENTREGA] = @TOTENTREGA, [T"& _ 
                "OTENVASES] = @TOTENVASES, [TOTPENDIENTE] = @TOTPENDIENTE, [TOTTALON] = @TOTTALON"& _ 
                ", [TOTTARJETA] = @TOTTARJETA, [TOTVALESCOBRADOS] = @TOTVALESCOBRADOS, [TOTVALESE"& _ 
                "MITIDOS] = @TOTVALESEMITIDOS, [TOTVALESPROVEEDOR] = @TOTVALESPROVEEDOR, [IDALBV]"& _ 
                " = @IDALBV, [TOTPUNTOS] = @TOTPUNTOS, [CANJEPUNTOS] = @CANJEPUNTOS, [CANJEVALES]"& _ 
                " = @CANJEVALES, [CODCLI] = @CODCLI, [FIDELIZADTO] = @FIDELIZADTO, [FIDELIZALOTER"& _ 
                "IA] = @FIDELIZALOTERIA, [FIDELIZAPUNTOS] = @FIDELIZAPUNTOS, [FIDELIZAVALES] = @F"& _ 
                "IDELIZAVALES, [PORPRONTO] = @PORPRONTO, [TIPDOC] = @TIPDOC, [TOTPRONTO] = @TOTPR"& _ 
                "ONTO, [TOTREC] = @TOTREC WHERE (((@IsNull_CAJA = 1 AND [CAJA] IS NULL) OR ([CAJA"& _ 
                "] = @Original_CAJA)) AND ([CODALM] = @Original_CODALM) AND ((@IsNull_CODPER = 1 "& _ 
                "AND [CODPER] IS NULL) OR ([CODPER] = @Original_CODPER)) AND ((@IsNull_CREDITO = "& _ 
                "1 AND [CREDITO] IS NULL) OR ([CREDITO] = @Original_CREDITO)) AND ([FECCIERRE] = "& _ 
                "@Original_FECCIERRE) AND ((@IsNull_FECHA = 1 AND [FECHA] IS NULL) OR ([FECHA] = "& _ 
                "@Original_FECHA)) AND ((@IsNull_IDFACV = 1 AND [IDFACV] IS NULL) OR ([IDFACV] = "& _ 
                "@Original_IDFACV)) AND ([IDTICKET] = @Original_IDTICKET) AND ((@IsNull_IMPRESO ="& _ 
                " 1 AND [IMPRESO] IS NULL) OR ([IMPRESO] = @Original_IMPRESO)) AND ((@IsNull_NUMD"& _ 
                "OC = 1 AND [NUMDOC] IS NULL) OR ([NUMDOC] = @Original_NUMDOC)) AND ((@IsNull_NUM"& _ 
                "LINEAS = 1 AND [NUMLINEAS] IS NULL) OR ([NUMLINEAS] = @Original_NUMLINEAS)) AND "& _ 
                "((@IsNull_PORDESC = 1 AND [PORDESC] IS NULL) OR ([PORDESC] = @Original_PORDESC))"& _ 
                " AND ((@IsNull_REPARTODOMICILIO = 1 AND [REPARTODOMICILIO] IS NULL) OR ([REPARTO"& _ 
                "DOMICILIO] = @Original_REPARTODOMICILIO)) AND ((@IsNull_TIPOCOBRO = 1 AND [TIPOC"& _ 
                "OBRO] IS NULL) OR ([TIPOCOBRO] = @Original_TIPOCOBRO)) AND ((@IsNull_NUMTARJETA "& _ 
                "= 1 AND [NUMTARJETA] IS NULL) OR ([NUMTARJETA] = @Original_NUMTARJETA)) AND ((@I"& _ 
                "sNull_TOTCAMBIOS = 1 AND [TOTCAMBIOS] IS NULL) OR ([TOTCAMBIOS] = @Original_TOTC"& _ 
                "AMBIOS)) AND ((@IsNull_TOTDESC = 1 AND [TOTDESC] IS NULL) OR ([TOTDESC] = @Origi"& _ 
                "nal_TOTDESC)) AND ((@IsNull_TOTDOC = 1 AND [TOTDOC] IS NULL) OR ([TOTDOC] = @Ori"& _ 
                "ginal_TOTDOC)) AND ((@IsNull_TOTEFECTIVO = 1 AND [TOTEFECTIVO] IS NULL) OR ([TOT"& _ 
                "EFECTIVO] = @Original_TOTEFECTIVO)) AND ((@IsNull_TOTENTREGA = 1 AND [TOTENTREGA"& _ 
                "] IS NULL) OR ([TOTENTREGA] = @Original_TOTENTREGA)) AND ((@IsNull_TOTENVASES = "& _ 
                "1 AND [TOTENVASES] IS NULL) OR ([TOTENVASES] = @Original_TOTENVASES)) AND ((@IsN"& _ 
                "ull_TOTPENDIENTE = 1 AND [TOTPENDIENTE] IS NULL) OR ([TOTPENDIENTE] = @Original_"& _ 
                "TOTPENDIENTE)) AND ((@IsNull_TOTTALON = 1 AND [TOTTALON] IS NULL) OR ([TOTTALON]"& _ 
                " = @Original_TOTTALON)) AND ((@IsNull_TOTTARJETA = 1 AND [TOTTARJETA] IS NULL) O"& _ 
                "R ([TOTTARJETA] = @Original_TOTTARJETA)) AND ((@IsNull_TOTVALESCOBRADOS = 1 AND "& _ 
                "[TOTVALESCOBRADOS] IS NULL) OR ([TOTVALESCOBRADOS] = @Original_TOTVALESCOBRADOS)"& _ 
                ") AND ((@IsNull_TOTVALESEMITIDOS = 1 AND [TOTVALESEMITIDOS] IS NULL) OR ([TOTVAL"& _ 
                "ESEMITIDOS] = @Original_TOTVALESEMITIDOS)) AND ((@IsNull_TOTVALESPROVEEDOR = 1 A"& _ 
                "ND [TOTVALESPROVEEDOR] IS NULL) OR ([TOTVALESPROVEEDOR] = @Original_TOTVALESPROV"& _ 
                "EEDOR)) AND ((@IsNull_IDALBV = 1 AND [IDALBV] IS NULL) OR ([IDALBV] = @Original_"& _ 
                "IDALBV)) AND ((@IsNull_TOTPUNTOS = 1 AND [TOTPUNTOS] IS NULL) OR ([TOTPUNTOS] = "& _ 
                "@Original_TOTPUNTOS)) AND ((@IsNull_CANJEPUNTOS = 1 AND [CANJEPUNTOS] IS NULL) O"& _ 
                "R ([CANJEPUNTOS] = @Original_CANJEPUNTOS)) AND ((@IsNull_CANJEVALES = 1 AND [CAN"& _ 
                "JEVALES] IS NULL) OR ([CANJEVALES] = @Original_CANJEVALES)) AND ((@IsNull_CODCLI"& _ 
                " = 1 AND [CODCLI] IS NULL) OR ([CODCLI] = @Original_CODCLI)) AND ((@IsNull_FIDEL"& _ 
                "IZADTO = 1 AND [FIDELIZADTO] IS NULL) OR ([FIDELIZADTO] = @Original_FIDELIZADTO)"& _ 
                ") AND ((@IsNull_FIDELIZALOTERIA = 1 AND [FIDELIZALOTERIA] IS NULL) OR ([FIDELIZA"& _ 
                "LOTERIA] = @Original_FIDELIZALOTERIA)) AND ((@IsNull_FIDELIZAPUNTOS = 1 AND [FID"& _ 
                "ELIZAPUNTOS] IS NULL) OR ([FIDELIZAPUNTOS] = @Original_FIDELIZAPUNTOS)) AND ((@I"& _ 
                "sNull_FIDELIZAVALES = 1 AND [FIDELIZAVALES] IS NULL) OR ([FIDELIZAVALES] = @Orig"& _ 
                "inal_FIDELIZAVALES)) AND ((@IsNull_PORPRONTO = 1 AND [PORPRONTO] IS NULL) OR ([P"& _ 
                "ORPRONTO] = @Original_PORPRONTO)) AND ((@IsNull_TIPDOC = 1 AND [TIPDOC] IS NULL)"& _ 
                " OR ([TIPDOC] = @Original_TIPDOC)) AND ((@IsNull_TOTPRONTO = 1 AND [TOTPRONTO] I"& _ 
                "S NULL) OR ([TOTPRONTO] = @Original_TOTPRONTO)) AND ((@IsNull_TOTREC = 1 AND [TO"& _ 
                "TREC] IS NULL) OR ([TOTREC] = @Original_TOTREC)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CAJA, CODALM, CODPER,"& _ 
                " CREDITO, FECCIERRE, FECHA, IDFACV, IDTICKET, IMPRESO, NUMDOC, NUMLINEAS, PORDES"& _ 
                "C, REPARTODOMICILIO, TIPOCOBRO, NUMTARJETA, TOTCAMBIOS, TOTDESC, TOTDOC, TOTEFEC"& _ 
                "TIVO, TOTENTREGA, TOTENVASES, TOTPENDIENTE, TOTTALON, TOTTARJETA, TOTVALESCOBRAD"& _ 
                "OS, TOTVALESEMITIDOS, TOTVALESPROVEEDOR, IDALBV, TOTPUNTOS, CANJEPUNTOS, CANJEVA"& _ 
                "LES, CODCLI, FIDELIZADTO, FIDELIZALOTERIA, FIDELIZAPUNTOS, FIDELIZAVALES, PORPRO"& _ 
                "NTO, TIPDOC, TOTPRONTO, TOTREC FROM IDA_TICKETS WHERE (IDTICKET = @IDTICKET)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODALM", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODALM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREDITO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREDITO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECCIERRE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECCIERRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDFACV", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDFACV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPRESO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMDOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMLINEAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMLINEAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PORDESC", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "PORDESC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPARTODOMICILIO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPARTODOMICILIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMTARJETA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTARJETA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTCAMBIOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTCAMBIOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTDESC", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTDESC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTDOC", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTDOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTEFECTIVO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTEFECTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTENTREGA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTENTREGA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTENVASES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTENVASES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTPENDIENTE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPENDIENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTTALON", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTTALON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTTARJETA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTTARJETA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTVALESCOBRADOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESCOBRADOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTVALESEMITIDOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESEMITIDOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTVALESPROVEEDOR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESPROVEEDOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDALBV", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDALBV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTPUNTOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPUNTOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANJEPUNTOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANJEPUNTOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANJEVALES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANJEVALES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCLI", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCLI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FIDELIZADTO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZADTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FIDELIZALOTERIA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZALOTERIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FIDELIZAPUNTOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZAPUNTOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FIDELIZAVALES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZAVALES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PORPRONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "PORPRONTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPDOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTPRONTO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPRONTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTREC", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTREC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODALM", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODALM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODPER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREDITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREDITO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREDITO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREDITO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECCIERRE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECCIERRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IDFACV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDFACV", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDFACV", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDFACV", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDTICKET", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDTICKET", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPRESO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMDOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMDOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMLINEAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMLINEAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMLINEAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMLINEAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PORDESC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PORDESC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PORDESC", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "PORDESC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REPARTODOMICILIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPARTODOMICILIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPARTODOMICILIO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPARTODOMICILIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMTARJETA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTARJETA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMTARJETA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTARJETA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTCAMBIOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTCAMBIOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTCAMBIOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTCAMBIOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTDESC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTDESC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTDESC", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTDESC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTDOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTDOC", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTDOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTEFECTIVO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTEFECTIVO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTEFECTIVO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTEFECTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTENTREGA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTENTREGA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTENTREGA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTENTREGA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTENVASES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTENVASES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTENVASES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTENVASES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTPENDIENTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPENDIENTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTPENDIENTE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPENDIENTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTTALON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTTALON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTTALON", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTTALON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTTARJETA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTTARJETA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTTARJETA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTTARJETA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTVALESCOBRADOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESCOBRADOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTVALESCOBRADOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESCOBRADOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTVALESEMITIDOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESEMITIDOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTVALESEMITIDOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESEMITIDOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTVALESPROVEEDOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESPROVEEDOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTVALESPROVEEDOR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTVALESPROVEEDOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IDALBV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDALBV", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDALBV", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDALBV", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTPUNTOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPUNTOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTPUNTOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPUNTOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CANJEPUNTOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANJEPUNTOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANJEPUNTOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANJEPUNTOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CANJEVALES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANJEVALES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANJEVALES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANJEVALES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCLI", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCLI", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCLI", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCLI", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FIDELIZADTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZADTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FIDELIZADTO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZADTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FIDELIZALOTERIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZALOTERIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FIDELIZALOTERIA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZALOTERIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FIDELIZAPUNTOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZAPUNTOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FIDELIZAPUNTOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZAPUNTOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FIDELIZAVALES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZAVALES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FIDELIZAVALES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIDELIZAVALES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PORPRONTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PORPRONTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PORPRONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "PORPRONTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPDOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPDOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTPRONTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPRONTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTPRONTO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPRONTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTREC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTREC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTREC", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTREC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDTICKET", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "IDTICKET", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.a3ERP_AydaraTPV.Settings.Default.SqlConection
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CAJA, CODALM, CODPER, CREDITO, FECCIERRE, FECHA, IDFACV, IDTICKET, IMPRESO"& _ 
                ", NUMDOC, NUMLINEAS, PORDESC, REPARTODOMICILIO, TIPOCOBRO, NUMTARJETA, TOTCAMBIO"& _ 
                "S, TOTDESC, TOTDOC, TOTEFECTIVO, TOTENTREGA, TOTENVASES, TOTPENDIENTE, TOTTALON,"& _ 
                " TOTTARJETA, TOTVALESCOBRADOS, TOTVALESEMITIDOS, TOTVALESPROVEEDOR, IDALBV, TOTP"& _ 
                "UNTOS, CANJEPUNTOS, CANJEVALES, CODCLI, FIDELIZADTO, FIDELIZALOTERIA, FIDELIZAPU"& _ 
                "NTOS, FIDELIZAVALES, PORPRONTO, TIPDOC, TOTPRONTO, TOTREC FROM IDA_TICKETS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CAJA, CODALM, CODPER, CREDITO, FECCIERRE, FECHA, IDALBV, IDFACV, IDTICKET,"& _ 
                " IMPRESO, NUMDOC, NUMLINEAS, NUMTARJETA, PORDESC, REPARTODOMICILIO, TIPOCOBRO, T"& _ 
                "OTCAMBIOS, TOTDESC, TOTDOC, TOTEFECTIVO, TOTENTREGA, TOTENVASES, TOTPENDIENTE, T"& _ 
                "OTTALON, TOTTARJETA, TOTVALESCOBRADOS, TOTVALESEMITIDOS, TOTVALESPROVEEDOR FROM "& _ 
                "IDA_TICKETS WHERE (CREDITO = 1) AND (IDALBV IS NULL) AND (IDFACV IS NULL)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT CAJA, CODALM, CODPER, CREDITO, FECCIERRE, FECHA, IDALBV, IDFACV, IDTICKET,"& _ 
                " IMPRESO, NUMDOC, NUMLINEAS, NUMTARJETA, PORDESC, REPARTODOMICILIO, TIPOCOBRO, T"& _ 
                "OTCAMBIOS, TOTDESC, TOTDOC, TOTEFECTIVO, TOTENTREGA, TOTENVASES, TOTPENDIENTE, T"& _ 
                "OTTALON, TOTTARJETA, TOTVALESCOBRADOS, TOTVALESEMITIDOS, TOTVALESPROVEEDOR FROM "& _ 
                "IDA_TICKETS WHERE (CREDITO = 0)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTPVRecepcion.IDA_TICKETSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function Albaranes(ByVal dataTable As dsTPVRecepcion.IDA_TICKETSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function Tickets(ByVal dataTable As dsTPVRecepcion.IDA_TICKETSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTPVRecepcion.IDA_TICKETSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTPVRecepcion) As Integer
            Return Me.Adapter.Update(dataSet, "IDA_TICKETS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CAJA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODALM As String,  _
                    ByVal Original_CODPER As String,  _
                    ByVal Original_CREDITO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_FECCIERRE As Date,  _
                    ByVal Original_FECHA As Global.System.Nullable(Of Date),  _
                    ByVal Original_IDFACV As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IDTICKET As Integer,  _
                    ByVal Original_IMPRESO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NUMDOC As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NUMLINEAS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PORDESC As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_REPARTODOMICILIO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TIPOCOBRO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NUMTARJETA As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTCAMBIOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTDESC As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTDOC As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTEFECTIVO As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTENTREGA As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTENVASES As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTPENDIENTE As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTTALON As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTTARJETA As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTVALESCOBRADOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTVALESEMITIDOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTVALESPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal Original_IDALBV As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_CANJEPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_CANJEVALES As Global.System.Nullable(Of Double),  _
                    ByVal Original_CODCLI As String,  _
                    ByVal Original_FIDELIZADTO As Global.System.Nullable(Of Double),  _
                    ByVal Original_FIDELIZALOTERIA As Global.System.Nullable(Of Double),  _
                    ByVal Original_FIDELIZAPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_FIDELIZAVALES As Global.System.Nullable(Of Double),  _
                    ByVal Original_PORPRONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TIPDOC As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TOTPRONTO As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTREC As Global.System.Nullable(Of Double)) As Integer
            If (Original_CAJA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CAJA.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Original_CODALM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CODALM")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CODALM,String)
            End If
            If (Original_CODPER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODPER,String)
            End If
            If (Original_CREDITO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CREDITO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_FECCIERRE,Date)
            If (Original_FECHA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_FECHA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_IDFACV.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_IDFACV.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_IDTICKET,Integer)
            If (Original_IMPRESO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_IMPRESO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMDOC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_NUMDOC.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMLINEAS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_NUMLINEAS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_PORDESC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_PORDESC.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_REPARTODOMICILIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_REPARTODOMICILIO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_TIPOCOBRO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_TIPOCOBRO.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMTARJETA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_NUMTARJETA.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTCAMBIOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_TOTCAMBIOS.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTDESC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_TOTDESC.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTDOC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_TOTDOC.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTEFECTIVO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_TOTEFECTIVO.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTENTREGA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_TOTENTREGA.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTENVASES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_TOTENVASES.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTPENDIENTE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_TOTPENDIENTE.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTTALON.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_TOTTALON.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTTARJETA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_TOTTARJETA.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTVALESCOBRADOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_TOTVALESCOBRADOS.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTVALESEMITIDOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_TOTVALESEMITIDOS.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTVALESPROVEEDOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_TOTVALESPROVEEDOR.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_IDALBV.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_IDALBV.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTPUNTOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_TOTPUNTOS.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_CANJEPUNTOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_CANJEPUNTOS.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_CANJEVALES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_CANJEVALES.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCLI Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_CODCLI,String)
            End If
            If (Original_FIDELIZADTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_FIDELIZADTO.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_FIDELIZALOTERIA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_FIDELIZALOTERIA.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_FIDELIZAPUNTOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_FIDELIZAPUNTOS.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_FIDELIZAVALES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_FIDELIZAVALES.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_PORPRONTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_PORPRONTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_TIPDOC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_TIPDOC.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTPRONTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_TOTPRONTO.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTREC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_TOTREC.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CAJA As Global.System.Nullable(Of Integer),  _
                    ByVal CODALM As String,  _
                    ByVal CODPER As String,  _
                    ByVal CREDITO As Global.System.Nullable(Of Boolean),  _
                    ByVal FECCIERRE As Date,  _
                    ByVal FECHA As Global.System.Nullable(Of Date),  _
                    ByVal IDFACV As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPRESO As Global.System.Nullable(Of Boolean),  _
                    ByVal NUMDOC As Global.System.Nullable(Of Integer),  _
                    ByVal NUMLINEAS As Global.System.Nullable(Of Integer),  _
                    ByVal PORDESC As Global.System.Nullable(Of Decimal),  _
                    ByVal REPARTODOMICILIO As Global.System.Nullable(Of Boolean),  _
                    ByVal TIPOCOBRO As Global.System.Nullable(Of Integer),  _
                    ByVal NUMTARJETA As Global.System.Nullable(Of Double),  _
                    ByVal TOTCAMBIOS As Global.System.Nullable(Of Double),  _
                    ByVal TOTDESC As Global.System.Nullable(Of Double),  _
                    ByVal TOTDOC As Global.System.Nullable(Of Double),  _
                    ByVal TOTEFECTIVO As Global.System.Nullable(Of Double),  _
                    ByVal TOTENTREGA As Global.System.Nullable(Of Double),  _
                    ByVal TOTENVASES As Global.System.Nullable(Of Double),  _
                    ByVal TOTPENDIENTE As Global.System.Nullable(Of Double),  _
                    ByVal TOTTALON As Global.System.Nullable(Of Double),  _
                    ByVal TOTTARJETA As Global.System.Nullable(Of Double),  _
                    ByVal TOTVALESCOBRADOS As Global.System.Nullable(Of Double),  _
                    ByVal TOTVALESEMITIDOS As Global.System.Nullable(Of Double),  _
                    ByVal TOTVALESPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal IDALBV As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal CANJEPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal CANJEVALES As Global.System.Nullable(Of Double),  _
                    ByVal CODCLI As String,  _
                    ByVal FIDELIZADTO As Global.System.Nullable(Of Double),  _
                    ByVal FIDELIZALOTERIA As Global.System.Nullable(Of Double),  _
                    ByVal FIDELIZAPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal FIDELIZAVALES As Global.System.Nullable(Of Double),  _
                    ByVal PORPRONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal TIPDOC As Global.System.Nullable(Of Integer),  _
                    ByVal TOTPRONTO As Global.System.Nullable(Of Double),  _
                    ByVal TOTREC As Global.System.Nullable(Of Double)) As Integer
            If (CAJA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CAJA.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CODALM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODALM")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODALM,String)
            End If
            If (CODPER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODPER,String)
            End If
            If (CREDITO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CREDITO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(FECCIERRE,Date)
            If (FECHA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(FECHA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (IDFACV.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(IDFACV.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (IMPRESO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(IMPRESO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (NUMDOC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(NUMDOC.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (NUMLINEAS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(NUMLINEAS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (PORDESC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(PORDESC.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (REPARTODOMICILIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(REPARTODOMICILIO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TIPOCOBRO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(TIPOCOBRO.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (NUMTARJETA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(NUMTARJETA.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (TOTCAMBIOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(TOTCAMBIOS.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (TOTDESC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(TOTDESC.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (TOTDOC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(TOTDOC.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (TOTEFECTIVO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(TOTEFECTIVO.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (TOTENTREGA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(TOTENTREGA.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (TOTENVASES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(TOTENVASES.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (TOTPENDIENTE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(TOTPENDIENTE.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (TOTTALON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(TOTTALON.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (TOTTARJETA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(TOTTARJETA.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (TOTVALESCOBRADOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(TOTVALESCOBRADOS.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (TOTVALESEMITIDOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(TOTVALESEMITIDOS.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (TOTVALESPROVEEDOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(TOTVALESPROVEEDOR.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (IDALBV.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(IDALBV.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (TOTPUNTOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(TOTPUNTOS.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (CANJEPUNTOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(CANJEPUNTOS.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CANJEVALES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(CANJEVALES.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CODCLI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(CODCLI,String)
            End If
            If (FIDELIZADTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(FIDELIZADTO.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (FIDELIZALOTERIA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(FIDELIZALOTERIA.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (FIDELIZAPUNTOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(FIDELIZAPUNTOS.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (FIDELIZAVALES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(FIDELIZAVALES.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (PORPRONTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(PORPRONTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (TIPDOC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(TIPDOC.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (TOTPRONTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(TOTPRONTO.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (TOTREC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(TOTREC.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CAJA As Global.System.Nullable(Of Integer),  _
                    ByVal CODALM As String,  _
                    ByVal CODPER As String,  _
                    ByVal CREDITO As Global.System.Nullable(Of Boolean),  _
                    ByVal FECCIERRE As Date,  _
                    ByVal FECHA As Global.System.Nullable(Of Date),  _
                    ByVal IDFACV As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPRESO As Global.System.Nullable(Of Boolean),  _
                    ByVal NUMDOC As Global.System.Nullable(Of Integer),  _
                    ByVal NUMLINEAS As Global.System.Nullable(Of Integer),  _
                    ByVal PORDESC As Global.System.Nullable(Of Decimal),  _
                    ByVal REPARTODOMICILIO As Global.System.Nullable(Of Boolean),  _
                    ByVal TIPOCOBRO As Global.System.Nullable(Of Integer),  _
                    ByVal NUMTARJETA As Global.System.Nullable(Of Double),  _
                    ByVal TOTCAMBIOS As Global.System.Nullable(Of Double),  _
                    ByVal TOTDESC As Global.System.Nullable(Of Double),  _
                    ByVal TOTDOC As Global.System.Nullable(Of Double),  _
                    ByVal TOTEFECTIVO As Global.System.Nullable(Of Double),  _
                    ByVal TOTENTREGA As Global.System.Nullable(Of Double),  _
                    ByVal TOTENVASES As Global.System.Nullable(Of Double),  _
                    ByVal TOTPENDIENTE As Global.System.Nullable(Of Double),  _
                    ByVal TOTTALON As Global.System.Nullable(Of Double),  _
                    ByVal TOTTARJETA As Global.System.Nullable(Of Double),  _
                    ByVal TOTVALESCOBRADOS As Global.System.Nullable(Of Double),  _
                    ByVal TOTVALESEMITIDOS As Global.System.Nullable(Of Double),  _
                    ByVal TOTVALESPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal IDALBV As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal CANJEPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal CANJEVALES As Global.System.Nullable(Of Double),  _
                    ByVal CODCLI As String,  _
                    ByVal FIDELIZADTO As Global.System.Nullable(Of Double),  _
                    ByVal FIDELIZALOTERIA As Global.System.Nullable(Of Double),  _
                    ByVal FIDELIZAPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal FIDELIZAVALES As Global.System.Nullable(Of Double),  _
                    ByVal PORPRONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal TIPDOC As Global.System.Nullable(Of Integer),  _
                    ByVal TOTPRONTO As Global.System.Nullable(Of Double),  _
                    ByVal TOTREC As Global.System.Nullable(Of Double),  _
                    ByVal Original_CAJA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODALM As String,  _
                    ByVal Original_CODPER As String,  _
                    ByVal Original_CREDITO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_FECCIERRE As Date,  _
                    ByVal Original_FECHA As Global.System.Nullable(Of Date),  _
                    ByVal Original_IDFACV As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IDTICKET As Integer,  _
                    ByVal Original_IMPRESO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NUMDOC As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NUMLINEAS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PORDESC As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_REPARTODOMICILIO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TIPOCOBRO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NUMTARJETA As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTCAMBIOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTDESC As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTDOC As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTEFECTIVO As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTENTREGA As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTENVASES As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTPENDIENTE As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTTALON As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTTARJETA As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTVALESCOBRADOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTVALESEMITIDOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTVALESPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal Original_IDALBV As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_CANJEPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_CANJEVALES As Global.System.Nullable(Of Double),  _
                    ByVal Original_CODCLI As String,  _
                    ByVal Original_FIDELIZADTO As Global.System.Nullable(Of Double),  _
                    ByVal Original_FIDELIZALOTERIA As Global.System.Nullable(Of Double),  _
                    ByVal Original_FIDELIZAPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_FIDELIZAVALES As Global.System.Nullable(Of Double),  _
                    ByVal Original_PORPRONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TIPDOC As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TOTPRONTO As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTREC As Global.System.Nullable(Of Double),  _
                    ByVal IDTICKET As Integer) As Integer
            If (CAJA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CAJA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CODALM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODALM")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODALM,String)
            End If
            If (CODPER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODPER,String)
            End If
            If (CREDITO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CREDITO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(FECCIERRE,Date)
            If (FECHA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(FECHA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (IDFACV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(IDFACV.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (IMPRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(IMPRESO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (NUMDOC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(NUMDOC.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (NUMLINEAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(NUMLINEAS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (PORDESC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(PORDESC.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (REPARTODOMICILIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(REPARTODOMICILIO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TIPOCOBRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(TIPOCOBRO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (NUMTARJETA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(NUMTARJETA.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (TOTCAMBIOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(TOTCAMBIOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (TOTDESC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(TOTDESC.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (TOTDOC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(TOTDOC.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (TOTEFECTIVO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(TOTEFECTIVO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (TOTENTREGA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(TOTENTREGA.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (TOTENVASES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(TOTENVASES.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (TOTPENDIENTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(TOTPENDIENTE.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (TOTTALON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(TOTTALON.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (TOTTARJETA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(TOTTARJETA.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (TOTVALESCOBRADOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(TOTVALESCOBRADOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (TOTVALESEMITIDOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(TOTVALESEMITIDOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (TOTVALESPROVEEDOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(TOTVALESPROVEEDOR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (IDALBV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(IDALBV.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (TOTPUNTOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(TOTPUNTOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (CANJEPUNTOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(CANJEPUNTOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CANJEVALES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(CANJEVALES.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CODCLI Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(CODCLI,String)
            End If
            If (FIDELIZADTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(FIDELIZADTO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (FIDELIZALOTERIA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(FIDELIZALOTERIA.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (FIDELIZAPUNTOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(FIDELIZAPUNTOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (FIDELIZAVALES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(FIDELIZAVALES.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (PORPRONTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(PORPRONTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (TIPDOC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(TIPDOC.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (TOTPRONTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(TOTPRONTO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (TOTREC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(TOTREC.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_CAJA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_CAJA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_CODALM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CODALM")
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_CODALM,String)
            End If
            If (Original_CODPER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_CODPER,String)
            End If
            If (Original_CREDITO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_CREDITO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_FECCIERRE,Date)
            If (Original_FECHA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_FECHA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_IDFACV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_IDFACV.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_IDTICKET,Integer)
            If (Original_IMPRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_IMPRESO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMDOC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_NUMDOC.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMLINEAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_NUMLINEAS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_PORDESC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_PORDESC.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_REPARTODOMICILIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_REPARTODOMICILIO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_TIPOCOBRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_TIPOCOBRO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMTARJETA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_NUMTARJETA.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTCAMBIOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_TOTCAMBIOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTDESC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_TOTDESC.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTDOC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_TOTDOC.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTEFECTIVO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_TOTEFECTIVO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTENTREGA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_TOTENTREGA.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTENVASES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_TOTENVASES.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTPENDIENTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_TOTPENDIENTE.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTTALON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_TOTTALON.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTTARJETA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_TOTTARJETA.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTVALESCOBRADOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_TOTVALESCOBRADOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTVALESEMITIDOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_TOTVALESEMITIDOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTVALESPROVEEDOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_TOTVALESPROVEEDOR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Original_IDALBV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_IDALBV.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTPUNTOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_TOTPUNTOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (Original_CANJEPUNTOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_CANJEPUNTOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (Original_CANJEVALES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_CANJEVALES.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCLI Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_CODCLI,String)
            End If
            If (Original_FIDELIZADTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_FIDELIZADTO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            If (Original_FIDELIZALOTERIA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_FIDELIZALOTERIA.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            End If
            If (Original_FIDELIZAPUNTOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_FIDELIZAPUNTOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (Original_FIDELIZAVALES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_FIDELIZAVALES.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            End If
            If (Original_PORPRONTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_PORPRONTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (Original_TIPDOC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_TIPDOC.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTPRONTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_TOTPRONTO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTREC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Original_TOTREC.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(116).Value = CType(IDTICKET,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CAJA As Global.System.Nullable(Of Integer),  _
                    ByVal CODALM As String,  _
                    ByVal CODPER As String,  _
                    ByVal CREDITO As Global.System.Nullable(Of Boolean),  _
                    ByVal FECCIERRE As Date,  _
                    ByVal FECHA As Global.System.Nullable(Of Date),  _
                    ByVal IDFACV As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPRESO As Global.System.Nullable(Of Boolean),  _
                    ByVal NUMDOC As Global.System.Nullable(Of Integer),  _
                    ByVal NUMLINEAS As Global.System.Nullable(Of Integer),  _
                    ByVal PORDESC As Global.System.Nullable(Of Decimal),  _
                    ByVal REPARTODOMICILIO As Global.System.Nullable(Of Boolean),  _
                    ByVal TIPOCOBRO As Global.System.Nullable(Of Integer),  _
                    ByVal NUMTARJETA As Global.System.Nullable(Of Double),  _
                    ByVal TOTCAMBIOS As Global.System.Nullable(Of Double),  _
                    ByVal TOTDESC As Global.System.Nullable(Of Double),  _
                    ByVal TOTDOC As Global.System.Nullable(Of Double),  _
                    ByVal TOTEFECTIVO As Global.System.Nullable(Of Double),  _
                    ByVal TOTENTREGA As Global.System.Nullable(Of Double),  _
                    ByVal TOTENVASES As Global.System.Nullable(Of Double),  _
                    ByVal TOTPENDIENTE As Global.System.Nullable(Of Double),  _
                    ByVal TOTTALON As Global.System.Nullable(Of Double),  _
                    ByVal TOTTARJETA As Global.System.Nullable(Of Double),  _
                    ByVal TOTVALESCOBRADOS As Global.System.Nullable(Of Double),  _
                    ByVal TOTVALESEMITIDOS As Global.System.Nullable(Of Double),  _
                    ByVal TOTVALESPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal IDALBV As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal CANJEPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal CANJEVALES As Global.System.Nullable(Of Double),  _
                    ByVal CODCLI As String,  _
                    ByVal FIDELIZADTO As Global.System.Nullable(Of Double),  _
                    ByVal FIDELIZALOTERIA As Global.System.Nullable(Of Double),  _
                    ByVal FIDELIZAPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal FIDELIZAVALES As Global.System.Nullable(Of Double),  _
                    ByVal PORPRONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal TIPDOC As Global.System.Nullable(Of Integer),  _
                    ByVal TOTPRONTO As Global.System.Nullable(Of Double),  _
                    ByVal TOTREC As Global.System.Nullable(Of Double),  _
                    ByVal Original_CAJA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODALM As String,  _
                    ByVal Original_CODPER As String,  _
                    ByVal Original_CREDITO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_FECCIERRE As Date,  _
                    ByVal Original_FECHA As Global.System.Nullable(Of Date),  _
                    ByVal Original_IDFACV As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IDTICKET As Integer,  _
                    ByVal Original_IMPRESO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NUMDOC As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NUMLINEAS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PORDESC As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_REPARTODOMICILIO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TIPOCOBRO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NUMTARJETA As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTCAMBIOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTDESC As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTDOC As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTEFECTIVO As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTENTREGA As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTENVASES As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTPENDIENTE As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTTALON As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTTARJETA As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTVALESCOBRADOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTVALESEMITIDOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTVALESPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal Original_IDALBV As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_CANJEPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_CANJEVALES As Global.System.Nullable(Of Double),  _
                    ByVal Original_CODCLI As String,  _
                    ByVal Original_FIDELIZADTO As Global.System.Nullable(Of Double),  _
                    ByVal Original_FIDELIZALOTERIA As Global.System.Nullable(Of Double),  _
                    ByVal Original_FIDELIZAPUNTOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_FIDELIZAVALES As Global.System.Nullable(Of Double),  _
                    ByVal Original_PORPRONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TIPDOC As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TOTPRONTO As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTREC As Global.System.Nullable(Of Double)) As Integer
            Return Me.Update(CAJA, CODALM, CODPER, CREDITO, FECCIERRE, FECHA, IDFACV, IMPRESO, NUMDOC, NUMLINEAS, PORDESC, REPARTODOMICILIO, TIPOCOBRO, NUMTARJETA, TOTCAMBIOS, TOTDESC, TOTDOC, TOTEFECTIVO, TOTENTREGA, TOTENVASES, TOTPENDIENTE, TOTTALON, TOTTARJETA, TOTVALESCOBRADOS, TOTVALESEMITIDOS, TOTVALESPROVEEDOR, IDALBV, TOTPUNTOS, CANJEPUNTOS, CANJEVALES, CODCLI, FIDELIZADTO, FIDELIZALOTERIA, FIDELIZAPUNTOS, FIDELIZAVALES, PORPRONTO, TIPDOC, TOTPRONTO, TOTREC, Original_CAJA, Original_CODALM, Original_CODPER, Original_CREDITO, Original_FECCIERRE, Original_FECHA, Original_IDFACV, Original_IDTICKET, Original_IMPRESO, Original_NUMDOC, Original_NUMLINEAS, Original_PORDESC, Original_REPARTODOMICILIO, Original_TIPOCOBRO, Original_NUMTARJETA, Original_TOTCAMBIOS, Original_TOTDESC, Original_TOTDOC, Original_TOTEFECTIVO, Original_TOTENTREGA, Original_TOTENVASES, Original_TOTPENDIENTE, Original_TOTTALON, Original_TOTTARJETA, Original_TOTVALESCOBRADOS, Original_TOTVALESEMITIDOS, Original_TOTVALESPROVEEDOR, Original_IDALBV, Original_TOTPUNTOS, Original_CANJEPUNTOS, Original_CANJEVALES, Original_CODCLI, Original_FIDELIZADTO, Original_FIDELIZALOTERIA, Original_FIDELIZAPUNTOS, Original_FIDELIZAVALES, Original_PORPRONTO, Original_TIPDOC, Original_TOTPRONTO, Original_TOTREC, Original_IDTICKET)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class IDA_TICKETSLINEASTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "IDA_TICKETSLINEAS"
            tableMapping.ColumnMappings.Add("CODART", "CODART")
            tableMapping.ColumnMappings.Add("CODPER", "CODPER")
            tableMapping.ColumnMappings.Add("DESC", "DESC")
            tableMapping.ColumnMappings.Add("DESCLIN", "DESCLIN")
            tableMapping.ColumnMappings.Add("IDLINEA", "IDLINEA")
            tableMapping.ColumnMappings.Add("IDTICKET", "IDTICKET")
            tableMapping.ColumnMappings.Add("NUMLINEA", "NUMLINEA")
            tableMapping.ColumnMappings.Add("PRCMANUAL", "PRCMANUAL")
            tableMapping.ColumnMappings.Add("PROMO", "PROMO")
            tableMapping.ColumnMappings.Add("TIPIVA", "TIPIVA")
            tableMapping.ColumnMappings.Add("ARTICULODIRECTO", "ARTICULODIRECTO")
            tableMapping.ColumnMappings.Add("TOTLIN", "TOTLIN")
            tableMapping.ColumnMappings.Add("PESOBASCULA", "PESOBASCULA")
            tableMapping.ColumnMappings.Add("PORFIDELIZACION", "PORFIDELIZACION")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [IDA_TICKETSLINEAS] WHERE (([CODART] = @Original_CODART) AND ((@IsNul"& _ 
                "l_CODPER = 1 AND [CODPER] IS NULL) OR ([CODPER] = @Original_CODPER)) AND ((@IsNu"& _ 
                "ll_DESC = 1 AND [DESC] IS NULL) OR ([DESC] = @Original_DESC)) AND ((@IsNull_DESC"& _ 
                "LIN = 1 AND [DESCLIN] IS NULL) OR ([DESCLIN] = @Original_DESCLIN)) AND ([IDLINEA"& _ 
                "] = @Original_IDLINEA) AND ([IDTICKET] = @Original_IDTICKET) AND ([NUMLINEA] = @"& _ 
                "Original_NUMLINEA) AND ((@IsNull_PRCMANUAL = 1 AND [PRCMANUAL] IS NULL) OR ([PRC"& _ 
                "MANUAL] = @Original_PRCMANUAL)) AND ((@IsNull_PROMO = 1 AND [PROMO] IS NULL) OR "& _ 
                "([PROMO] = @Original_PROMO)) AND ((@IsNull_TIPIVA = 1 AND [TIPIVA] IS NULL) OR ("& _ 
                "[TIPIVA] = @Original_TIPIVA)) AND ((@IsNull_ARTICULODIRECTO = 1 AND [ARTICULODIR"& _ 
                "ECTO] IS NULL) OR ([ARTICULODIRECTO] = @Original_ARTICULODIRECTO)) AND ((@IsNull"& _ 
                "_TOTLIN = 1 AND [TOTLIN] IS NULL) OR ([TOTLIN] = @Original_TOTLIN)) AND ((@IsNul"& _ 
                "l_PESOBASCULA = 1 AND [PESOBASCULA] IS NULL) OR ([PESOBASCULA] = @Original_PESOB"& _ 
                "ASCULA)) AND ((@IsNull_PORFIDELIZACION = 1 AND [PORFIDELIZACION] IS NULL) OR ([P"& _ 
                "ORFIDELIZACION] = @Original_PORFIDELIZACION)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODART", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODART", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODPER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESC", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "DESC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCLIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCLIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCLIN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCLIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDLINEA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDLINEA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDTICKET", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDTICKET", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMLINEA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMLINEA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRCMANUAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCMANUAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRCMANUAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCMANUAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PROMO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROMO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PROMO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROMO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPIVA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPIVA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPIVA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPIVA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ARTICULODIRECTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARTICULODIRECTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ARTICULODIRECTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARTICULODIRECTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTLIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTLIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTLIN", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTLIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PESOBASCULA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESOBASCULA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PESOBASCULA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESOBASCULA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PORFIDELIZACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PORFIDELIZACION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PORFIDELIZACION", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "PORFIDELIZACION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [IDA_TICKETSLINEAS] ([CODART], [CODPER], [DESC], [DESCLIN], [IDTICKET"& _ 
                "], [NUMLINEA], [PRCMANUAL], [PROMO], [TIPIVA], [ARTICULODIRECTO], [TOTLIN], [PES"& _ 
                "OBASCULA], [PORFIDELIZACION]) VALUES (@CODART, @CODPER, @DESC, @DESCLIN, @IDTICK"& _ 
                "ET, @NUMLINEA, @PRCMANUAL, @PROMO, @TIPIVA, @ARTICULODIRECTO, @TOTLIN, @PESOBASC"& _ 
                "ULA, @PORFIDELIZACION);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODART, CODPER, [DESC], DESCLIN, IDLINEA, IDTICK"& _ 
                "ET, NUMLINEA, PRCMANUAL, PROMO, TIPIVA, ARTICULODIRECTO, TOTLIN, PESOBASCULA, PO"& _ 
                "RFIDELIZACION FROM IDA_TICKETSLINEAS WHERE (IDLINEA = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODART", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODART", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESC", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "DESC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCLIN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDTICKET", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDTICKET", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMLINEA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMLINEA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRCMANUAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCMANUAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROMO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROMO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPIVA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPIVA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ARTICULODIRECTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARTICULODIRECTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTLIN", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PESOBASCULA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESOBASCULA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PORFIDELIZACION", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "PORFIDELIZACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [IDA_TICKETSLINEAS] SET [CODART] = @CODART, [CODPER] = @CODPER, [DESC] = @"& _ 
                "DESC, [DESCLIN] = @DESCLIN, [IDTICKET] = @IDTICKET, [NUMLINEA] = @NUMLINEA, [PRC"& _ 
                "MANUAL] = @PRCMANUAL, [PROMO] = @PROMO, [TIPIVA] = @TIPIVA, [ARTICULODIRECTO] = "& _ 
                "@ARTICULODIRECTO, [TOTLIN] = @TOTLIN, [PESOBASCULA] = @PESOBASCULA, [PORFIDELIZA"& _ 
                "CION] = @PORFIDELIZACION WHERE (([CODART] = @Original_CODART) AND ((@IsNull_CODP"& _ 
                "ER = 1 AND [CODPER] IS NULL) OR ([CODPER] = @Original_CODPER)) AND ((@IsNull_DES"& _ 
                "C = 1 AND [DESC] IS NULL) OR ([DESC] = @Original_DESC)) AND ((@IsNull_DESCLIN = "& _ 
                "1 AND [DESCLIN] IS NULL) OR ([DESCLIN] = @Original_DESCLIN)) AND ([IDLINEA] = @O"& _ 
                "riginal_IDLINEA) AND ([IDTICKET] = @Original_IDTICKET) AND ([NUMLINEA] = @Origin"& _ 
                "al_NUMLINEA) AND ((@IsNull_PRCMANUAL = 1 AND [PRCMANUAL] IS NULL) OR ([PRCMANUAL"& _ 
                "] = @Original_PRCMANUAL)) AND ((@IsNull_PROMO = 1 AND [PROMO] IS NULL) OR ([PROM"& _ 
                "O] = @Original_PROMO)) AND ((@IsNull_TIPIVA = 1 AND [TIPIVA] IS NULL) OR ([TIPIV"& _ 
                "A] = @Original_TIPIVA)) AND ((@IsNull_ARTICULODIRECTO = 1 AND [ARTICULODIRECTO] "& _ 
                "IS NULL) OR ([ARTICULODIRECTO] = @Original_ARTICULODIRECTO)) AND ((@IsNull_TOTLI"& _ 
                "N = 1 AND [TOTLIN] IS NULL) OR ([TOTLIN] = @Original_TOTLIN)) AND ((@IsNull_PESO"& _ 
                "BASCULA = 1 AND [PESOBASCULA] IS NULL) OR ([PESOBASCULA] = @Original_PESOBASCULA"& _ 
                ")) AND ((@IsNull_PORFIDELIZACION = 1 AND [PORFIDELIZACION] IS NULL) OR ([PORFIDE"& _ 
                "LIZACION] = @Original_PORFIDELIZACION)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODART, CODPER, [DESC], DESCLI"& _ 
                "N, IDLINEA, IDTICKET, NUMLINEA, PRCMANUAL, PROMO, TIPIVA, ARTICULODIRECTO, TOTLI"& _ 
                "N, PESOBASCULA, PORFIDELIZACION FROM IDA_TICKETSLINEAS WHERE (IDLINEA = @IDLINEA"& _ 
                ")"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODART", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODART", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESC", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "DESC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCLIN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDTICKET", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDTICKET", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMLINEA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMLINEA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRCMANUAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCMANUAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROMO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROMO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPIVA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPIVA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ARTICULODIRECTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARTICULODIRECTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTLIN", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PESOBASCULA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESOBASCULA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PORFIDELIZACION", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "PORFIDELIZACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODART", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODART", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODPER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESC", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "DESC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCLIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCLIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCLIN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCLIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDLINEA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDLINEA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDTICKET", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDTICKET", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMLINEA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMLINEA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRCMANUAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCMANUAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRCMANUAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRCMANUAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PROMO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROMO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PROMO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROMO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPIVA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPIVA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPIVA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPIVA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ARTICULODIRECTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARTICULODIRECTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ARTICULODIRECTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARTICULODIRECTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTLIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTLIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTLIN", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTLIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PESOBASCULA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESOBASCULA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PESOBASCULA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESOBASCULA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PORFIDELIZACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PORFIDELIZACION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PORFIDELIZACION", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 4, "PORFIDELIZACION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDLINEA", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "IDLINEA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.a3ERP_AydaraTPV.Settings.Default.SqlConection
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODART, CODPER, [DESC], DESCLIN, IDLINEA, IDTICKET, NUMLINEA, PRCMA"& _ 
                "NUAL, PROMO, TIPIVA, ARTICULODIRECTO, TOTLIN, PESOBASCULA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      PORFIDELIZACION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IDA_TICKETSLINEAS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        ARTICULODIRECTO, CODART, CODPER, [DESC], DESCLIN, IDLINEA, IDTICKET"& _ 
                ", NUMLINEA, PRCMANUAL, PROMO, TIPIVA, CANTIDAD, PRECIO, TOTLIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            "& _ 
                "IDA_TICKETSLINEAS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (IDTICKET = @IDTICKET)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDTICKET", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "IDTICKET", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTPVRecepcion.IDA_TICKETSLINEASDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As dsTPVRecepcion.IDA_TICKETSLINEASDataTable, ByVal IDTICKET As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(IDTICKET,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTPVRecepcion.IDA_TICKETSLINEASDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTPVRecepcion) As Integer
            Return Me.Adapter.Update(dataSet, "IDA_TICKETSLINEAS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CODART As String, ByVal Original_CODPER As String, ByVal Original_DESC As Global.System.Nullable(Of Decimal), ByVal Original_DESCLIN As String, ByVal Original_IDLINEA As Integer, ByVal Original_IDTICKET As Integer, ByVal Original_NUMLINEA As Integer, ByVal Original_PRCMANUAL As Global.System.Nullable(Of Boolean), ByVal Original_PROMO As Global.System.Nullable(Of Boolean), ByVal Original_TIPIVA As String, ByVal Original_ARTICULODIRECTO As String, ByVal Original_TOTLIN As Global.System.Nullable(Of Double), ByVal Original_PESOBASCULA As Global.System.Nullable(Of Double), ByVal Original_PORFIDELIZACION As Global.System.Nullable(Of Decimal)) As Integer
            If (Original_CODART Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CODART")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODART,String)
            End If
            If (Original_CODPER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CODPER,String)
            End If
            If (Original_DESC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_DESC.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_DESCLIN Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_DESCLIN,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_IDLINEA,Integer)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_IDTICKET,Integer)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_NUMLINEA,Integer)
            If (Original_PRCMANUAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_PRCMANUAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_PROMO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_PROMO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_TIPIVA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_TIPIVA,String)
            End If
            If (Original_ARTICULODIRECTO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_ARTICULODIRECTO,String)
            End If
            If (Original_TOTLIN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_TOTLIN.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_PESOBASCULA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_PESOBASCULA.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_PORFIDELIZACION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_PORFIDELIZACION.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CODART As String, ByVal CODPER As String, ByVal DESC As Global.System.Nullable(Of Decimal), ByVal DESCLIN As String, ByVal IDTICKET As Integer, ByVal NUMLINEA As Integer, ByVal PRCMANUAL As Global.System.Nullable(Of Boolean), ByVal PROMO As Global.System.Nullable(Of Boolean), ByVal TIPIVA As String, ByVal ARTICULODIRECTO As String, ByVal TOTLIN As Global.System.Nullable(Of Double), ByVal PESOBASCULA As Global.System.Nullable(Of Double), ByVal PORFIDELIZACION As Global.System.Nullable(Of Decimal)) As Integer
            If (CODART Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODART")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODART,String)
            End If
            If (CODPER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODPER,String)
            End If
            If (DESC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DESC.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DESCLIN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DESCLIN,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(IDTICKET,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(NUMLINEA,Integer)
            If (PRCMANUAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PRCMANUAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (PROMO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(PROMO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (TIPIVA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(TIPIVA,String)
            End If
            If (ARTICULODIRECTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ARTICULODIRECTO,String)
            End If
            If (TOTLIN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(TOTLIN.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (PESOBASCULA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(PESOBASCULA.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (PORFIDELIZACION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(PORFIDELIZACION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODART As String,  _
                    ByVal CODPER As String,  _
                    ByVal DESC As Global.System.Nullable(Of Decimal),  _
                    ByVal DESCLIN As String,  _
                    ByVal IDTICKET As Integer,  _
                    ByVal NUMLINEA As Integer,  _
                    ByVal PRCMANUAL As Global.System.Nullable(Of Boolean),  _
                    ByVal PROMO As Global.System.Nullable(Of Boolean),  _
                    ByVal TIPIVA As String,  _
                    ByVal ARTICULODIRECTO As String,  _
                    ByVal TOTLIN As Global.System.Nullable(Of Double),  _
                    ByVal PESOBASCULA As Global.System.Nullable(Of Double),  _
                    ByVal PORFIDELIZACION As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODART As String,  _
                    ByVal Original_CODPER As String,  _
                    ByVal Original_DESC As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DESCLIN As String,  _
                    ByVal Original_IDLINEA As Integer,  _
                    ByVal Original_IDTICKET As Integer,  _
                    ByVal Original_NUMLINEA As Integer,  _
                    ByVal Original_PRCMANUAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PROMO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TIPIVA As String,  _
                    ByVal Original_ARTICULODIRECTO As String,  _
                    ByVal Original_TOTLIN As Global.System.Nullable(Of Double),  _
                    ByVal Original_PESOBASCULA As Global.System.Nullable(Of Double),  _
                    ByVal Original_PORFIDELIZACION As Global.System.Nullable(Of Decimal),  _
                    ByVal IDLINEA As Integer) As Integer
            If (CODART Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODART")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODART,String)
            End If
            If (CODPER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODPER,String)
            End If
            If (DESC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DESC.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DESCLIN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DESCLIN,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(IDTICKET,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(NUMLINEA,Integer)
            If (PRCMANUAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PRCMANUAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (PROMO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(PROMO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (TIPIVA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(TIPIVA,String)
            End If
            If (ARTICULODIRECTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ARTICULODIRECTO,String)
            End If
            If (TOTLIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(TOTLIN.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (PESOBASCULA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(PESOBASCULA.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (PORFIDELIZACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(PORFIDELIZACION.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_CODART Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CODART")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_CODART,String)
            End If
            If (Original_CODPER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_CODPER,String)
            End If
            If (Original_DESC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_DESC.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_DESCLIN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_DESCLIN,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_IDLINEA,Integer)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_IDTICKET,Integer)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_NUMLINEA,Integer)
            If (Original_PRCMANUAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_PRCMANUAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_PROMO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_PROMO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_TIPIVA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_TIPIVA,String)
            End If
            If (Original_ARTICULODIRECTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_ARTICULODIRECTO,String)
            End If
            If (Original_TOTLIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_TOTLIN.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_PESOBASCULA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_PESOBASCULA.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_PORFIDELIZACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_PORFIDELIZACION.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(IDLINEA,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODART As String,  _
                    ByVal CODPER As String,  _
                    ByVal DESC As Global.System.Nullable(Of Decimal),  _
                    ByVal DESCLIN As String,  _
                    ByVal IDTICKET As Integer,  _
                    ByVal NUMLINEA As Integer,  _
                    ByVal PRCMANUAL As Global.System.Nullable(Of Boolean),  _
                    ByVal PROMO As Global.System.Nullable(Of Boolean),  _
                    ByVal TIPIVA As String,  _
                    ByVal ARTICULODIRECTO As String,  _
                    ByVal TOTLIN As Global.System.Nullable(Of Double),  _
                    ByVal PESOBASCULA As Global.System.Nullable(Of Double),  _
                    ByVal PORFIDELIZACION As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODART As String,  _
                    ByVal Original_CODPER As String,  _
                    ByVal Original_DESC As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DESCLIN As String,  _
                    ByVal Original_IDLINEA As Integer,  _
                    ByVal Original_IDTICKET As Integer,  _
                    ByVal Original_NUMLINEA As Integer,  _
                    ByVal Original_PRCMANUAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PROMO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TIPIVA As String,  _
                    ByVal Original_ARTICULODIRECTO As String,  _
                    ByVal Original_TOTLIN As Global.System.Nullable(Of Double),  _
                    ByVal Original_PESOBASCULA As Global.System.Nullable(Of Double),  _
                    ByVal Original_PORFIDELIZACION As Global.System.Nullable(Of Decimal)) As Integer
            Return Me.Update(CODART, CODPER, DESC, DESCLIN, IDTICKET, NUMLINEA, PRCMANUAL, PROMO, TIPIVA, ARTICULODIRECTO, TOTLIN, PESOBASCULA, PORFIDELIZACION, Original_CODART, Original_CODPER, Original_DESC, Original_DESCLIN, Original_IDLINEA, Original_IDTICKET, Original_NUMLINEA, Original_PRCMANUAL, Original_PROMO, Original_TIPIVA, Original_ARTICULODIRECTO, Original_TOTLIN, Original_PESOBASCULA, Original_PORFIDELIZACION, Original_IDLINEA)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class IDA_CAJASTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "IDA_CAJAS"
            tableMapping.ColumnMappings.Add("CAJA", "CAJA")
            tableMapping.ColumnMappings.Add("COBROSCLIENTE", "COBROSCLIENTE")
            tableMapping.ColumnMappings.Add("CODALM", "CODALM")
            tableMapping.ColumnMappings.Add("EFECTIVO", "EFECTIVO")
            tableMapping.ColumnMappings.Add("ENTRADACAMBIOS", "ENTRADACAMBIOS")
            tableMapping.ColumnMappings.Add("ENVASES", "ENVASES")
            tableMapping.ColumnMappings.Add("FECHA", "FECHA")
            tableMapping.ColumnMappings.Add("IDCAJA", "IDCAJA")
            tableMapping.ColumnMappings.Add("LINEAS", "LINEAS")
            tableMapping.ColumnMappings.Add("PAGOSPROVEEDOR", "PAGOSPROVEEDOR")
            tableMapping.ColumnMappings.Add("PENDIENTECOBRO", "PENDIENTECOBRO")
            tableMapping.ColumnMappings.Add("REPARTODOMICILIO", "REPARTODOMICILIO")
            tableMapping.ColumnMappings.Add("RETIRADAFONDOS", "RETIRADAFONDOS")
            tableMapping.ColumnMappings.Add("TALON", "TALON")
            tableMapping.ColumnMappings.Add("TARJETA", "TARJETA")
            tableMapping.ColumnMappings.Add("TICKETS", "TICKETS")
            tableMapping.ColumnMappings.Add("VALESCOBRADOS", "VALESCOBRADOS")
            tableMapping.ColumnMappings.Add("VALESEMITIDOS", "VALESEMITIDOS")
            tableMapping.ColumnMappings.Add("VALESPROVEEDOR", "VALESPROVEEDOR")
            tableMapping.ColumnMappings.Add("VENTA", "VENTA")
            tableMapping.ColumnMappings.Add("INGRESO", "INGRESO")
            tableMapping.ColumnMappings.Add("NUMALBARANES", "NUMALBARANES")
            tableMapping.ColumnMappings.Add("TOTALBARANES", "TOTALBARANES")
            tableMapping.ColumnMappings.Add("TOTFACTURAS", "TOTFACTURAS")
            tableMapping.ColumnMappings.Add("TOTPRONTO", "TOTPRONTO")
            tableMapping.ColumnMappings.Add("TOTREC", "TOTREC")
            tableMapping.ColumnMappings.Add("NUMFACTURAS", "NUMFACTURAS")
            tableMapping.ColumnMappings.Add("VALESCANJEADOS", "VALESCANJEADOS")
            tableMapping.ColumnMappings.Add("PENDIENTECOBROCREDITO", "PENDIENTECOBROCREDITO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [IDA_CAJAS] WHERE (([CAJA] = @Original_CAJA) AND ((@IsNull_COBROSCLIE"& _ 
                "NTE = 1 AND [COBROSCLIENTE] IS NULL) OR ([COBROSCLIENTE] = @Original_COBROSCLIEN"& _ 
                "TE)) AND ([CODALM] = @Original_CODALM) AND ((@IsNull_EFECTIVO = 1 AND [EFECTIVO]"& _ 
                " IS NULL) OR ([EFECTIVO] = @Original_EFECTIVO)) AND ((@IsNull_ENTRADACAMBIOS = 1"& _ 
                " AND [ENTRADACAMBIOS] IS NULL) OR ([ENTRADACAMBIOS] = @Original_ENTRADACAMBIOS))"& _ 
                " AND ((@IsNull_ENVASES = 1 AND [ENVASES] IS NULL) OR ([ENVASES] = @Original_ENVA"& _ 
                "SES)) AND ([FECHA] = @Original_FECHA) AND ([IDCAJA] = @Original_IDCAJA) AND ((@I"& _ 
                "sNull_INGRESO = 1 AND [INGRESO] IS NULL) OR ([INGRESO] = @Original_INGRESO)) AND"& _ 
                " ((@IsNull_LINEAS = 1 AND [LINEAS] IS NULL) OR ([LINEAS] = @Original_LINEAS)) AN"& _ 
                "D ((@IsNull_PAGOSPROVEEDOR = 1 AND [PAGOSPROVEEDOR] IS NULL) OR ([PAGOSPROVEEDOR"& _ 
                "] = @Original_PAGOSPROVEEDOR)) AND ((@IsNull_PENDIENTECOBRO = 1 AND [PENDIENTECO"& _ 
                "BRO] IS NULL) OR ([PENDIENTECOBRO] = @Original_PENDIENTECOBRO)) AND ((@IsNull_RE"& _ 
                "PARTODOMICILIO = 1 AND [REPARTODOMICILIO] IS NULL) OR ([REPARTODOMICILIO] = @Ori"& _ 
                "ginal_REPARTODOMICILIO)) AND ((@IsNull_RETIRADAFONDOS = 1 AND [RETIRADAFONDOS] I"& _ 
                "S NULL) OR ([RETIRADAFONDOS] = @Original_RETIRADAFONDOS)) AND ((@IsNull_TALON = "& _ 
                "1 AND [TALON] IS NULL) OR ([TALON] = @Original_TALON)) AND ((@IsNull_TARJETA = 1"& _ 
                " AND [TARJETA] IS NULL) OR ([TARJETA] = @Original_TARJETA)) AND ((@IsNull_TICKET"& _ 
                "S = 1 AND [TICKETS] IS NULL) OR ([TICKETS] = @Original_TICKETS)) AND ((@IsNull_V"& _ 
                "ALESCOBRADOS = 1 AND [VALESCOBRADOS] IS NULL) OR ([VALESCOBRADOS] = @Original_VA"& _ 
                "LESCOBRADOS)) AND ((@IsNull_VALESEMITIDOS = 1 AND [VALESEMITIDOS] IS NULL) OR (["& _ 
                "VALESEMITIDOS] = @Original_VALESEMITIDOS)) AND ((@IsNull_VALESPROVEEDOR = 1 AND "& _ 
                "[VALESPROVEEDOR] IS NULL) OR ([VALESPROVEEDOR] = @Original_VALESPROVEEDOR)) AND "& _ 
                "((@IsNull_VENTA = 1 AND [VENTA] IS NULL) OR ([VENTA] = @Original_VENTA)) AND ((@"& _ 
                "IsNull_NUMALBARANES = 1 AND [NUMALBARANES] IS NULL) OR ([NUMALBARANES] = @Origin"& _ 
                "al_NUMALBARANES)) AND ((@IsNull_NUMFACTURAS = 1 AND [NUMFACTURAS] IS NULL) OR (["& _ 
                "NUMFACTURAS] = @Original_NUMFACTURAS)) AND ((@IsNull_TOTALBARANES = 1 AND [TOTAL"& _ 
                "BARANES] IS NULL) OR ([TOTALBARANES] = @Original_TOTALBARANES)) AND ((@IsNull_TO"& _ 
                "TFACTURAS = 1 AND [TOTFACTURAS] IS NULL) OR ([TOTFACTURAS] = @Original_TOTFACTUR"& _ 
                "AS)) AND ((@IsNull_TOTPRONTO = 1 AND [TOTPRONTO] IS NULL) OR ([TOTPRONTO] = @Ori"& _ 
                "ginal_TOTPRONTO)) AND ((@IsNull_TOTREC = 1 AND [TOTREC] IS NULL) OR ([TOTREC] = "& _ 
                "@Original_TOTREC)) AND ((@IsNull_VALESCANJEADOS = 1 AND [VALESCANJEADOS] IS NULL"& _ 
                ") OR ([VALESCANJEADOS] = @Original_VALESCANJEADOS)) AND ((@IsNull_PENDIENTECOBRO"& _ 
                "CREDITO = 1 AND [PENDIENTECOBROCREDITO] IS NULL) OR ([PENDIENTECOBROCREDITO] = @"& _ 
                "Original_PENDIENTECOBROCREDITO)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COBROSCLIENTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COBROSCLIENTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COBROSCLIENTE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COBROSCLIENTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODALM", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODALM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EFECTIVO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EFECTIVO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EFECTIVO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EFECTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENTRADACAMBIOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADACAMBIOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENTRADACAMBIOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADACAMBIOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENVASES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENVASES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENVASES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENVASES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDCAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INGRESO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LINEAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINEAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LINEAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINEAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAGOSPROVEEDOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAGOSPROVEEDOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAGOSPROVEEDOR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAGOSPROVEEDOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PENDIENTECOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PENDIENTECOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PENDIENTECOBRO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PENDIENTECOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REPARTODOMICILIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPARTODOMICILIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPARTODOMICILIO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPARTODOMICILIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RETIRADAFONDOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETIRADAFONDOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RETIRADAFONDOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETIRADAFONDOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TALON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TALON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TALON", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TALON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TARJETA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TARJETA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TARJETA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TARJETA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TICKETS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TICKETS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TICKETS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TICKETS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALESCOBRADOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESCOBRADOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALESCOBRADOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESCOBRADOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALESEMITIDOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESEMITIDOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALESEMITIDOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESEMITIDOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALESPROVEEDOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESPROVEEDOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALESPROVEEDOR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESPROVEEDOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VENTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VENTA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMALBARANES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMALBARANES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMALBARANES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMALBARANES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMFACTURAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMFACTURAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMFACTURAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMFACTURAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALBARANES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALBARANES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALBARANES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALBARANES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTFACTURAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTFACTURAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTFACTURAS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTFACTURAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTPRONTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPRONTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTPRONTO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPRONTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTREC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTREC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTREC", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTREC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALESCANJEADOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESCANJEADOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALESCANJEADOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESCANJEADOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PENDIENTECOBROCREDITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PENDIENTECOBROCREDITO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PENDIENTECOBROCREDITO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PENDIENTECOBROCREDITO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [IDA_CAJAS] ([CAJA], [COBROSCLIENTE], [CODALM], [EFECTIVO], [ENTRADAC"& _ 
                "AMBIOS], [ENVASES], [FECHA], [INGRESO], [LINEAS], [PAGOSPROVEEDOR], [PENDIENTECO"& _ 
                "BRO], [REPARTODOMICILIO], [RETIRADAFONDOS], [TALON], [TARJETA], [TICKETS], [VALE"& _ 
                "SCOBRADOS], [VALESEMITIDOS], [VALESPROVEEDOR], [VENTA], [NUMALBARANES], [NUMFACT"& _ 
                "URAS], [TOTALBARANES], [TOTFACTURAS], [TOTPRONTO], [TOTREC], [VALESCANJEADOS], ["& _ 
                "PENDIENTECOBROCREDITO]) VALUES (@CAJA, @COBROSCLIENTE, @CODALM, @EFECTIVO, @ENTR"& _ 
                "ADACAMBIOS, @ENVASES, @FECHA, @INGRESO, @LINEAS, @PAGOSPROVEEDOR, @PENDIENTECOBR"& _ 
                "O, @REPARTODOMICILIO, @RETIRADAFONDOS, @TALON, @TARJETA, @TICKETS, @VALESCOBRADO"& _ 
                "S, @VALESEMITIDOS, @VALESPROVEEDOR, @VENTA, @NUMALBARANES, @NUMFACTURAS, @TOTALB"& _ 
                "ARANES, @TOTFACTURAS, @TOTPRONTO, @TOTREC, @VALESCANJEADOS, @PENDIENTECOBROCREDI"& _ 
                "TO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CAJA, COBROSCLIENTE, CODALM, EFECTIVO, ENTRADACAMBIOS, ENVASES, FEC"& _ 
                "HA, IDCAJA, INGRESO, LINEAS, PAGOSPROVEEDOR, PENDIENTECOBRO, REPARTODOMICILIO, R"& _ 
                "ETIRADAFONDOS, TALON, TARJETA, TICKETS, VALESCOBRADOS, VALESEMITIDOS, VALESPROVE"& _ 
                "EDOR, VENTA, NUMALBARANES, NUMFACTURAS, TOTALBARANES, TOTFACTURAS, TOTPRONTO, TO"& _ 
                "TREC, VALESCANJEADOS, PENDIENTECOBROCREDITO FROM IDA_CAJAS WHERE (IDCAJA = SCOPE"& _ 
                "_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COBROSCLIENTE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COBROSCLIENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODALM", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODALM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EFECTIVO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EFECTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENTRADACAMBIOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADACAMBIOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENVASES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENVASES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INGRESO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LINEAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINEAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAGOSPROVEEDOR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAGOSPROVEEDOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PENDIENTECOBRO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PENDIENTECOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPARTODOMICILIO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPARTODOMICILIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETIRADAFONDOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETIRADAFONDOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TALON", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TALON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TARJETA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TARJETA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TICKETS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TICKETS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALESCOBRADOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESCOBRADOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALESEMITIDOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESEMITIDOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALESPROVEEDOR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESPROVEEDOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VENTA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMALBARANES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMALBARANES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMFACTURAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMFACTURAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALBARANES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALBARANES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTFACTURAS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTFACTURAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTPRONTO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPRONTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTREC", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTREC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALESCANJEADOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESCANJEADOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PENDIENTECOBROCREDITO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PENDIENTECOBROCREDITO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [IDA_CAJAS] SET [CAJA] = @CAJA, [COBROSCLIENTE] = @COBROSCLIENTE, [CODALM]"& _ 
                " = @CODALM, [EFECTIVO] = @EFECTIVO, [ENTRADACAMBIOS] = @ENTRADACAMBIOS, [ENVASES"& _ 
                "] = @ENVASES, [FECHA] = @FECHA, [INGRESO] = @INGRESO, [LINEAS] = @LINEAS, [PAGOS"& _ 
                "PROVEEDOR] = @PAGOSPROVEEDOR, [PENDIENTECOBRO] = @PENDIENTECOBRO, [REPARTODOMICI"& _ 
                "LIO] = @REPARTODOMICILIO, [RETIRADAFONDOS] = @RETIRADAFONDOS, [TALON] = @TALON, "& _ 
                "[TARJETA] = @TARJETA, [TICKETS] = @TICKETS, [VALESCOBRADOS] = @VALESCOBRADOS, [V"& _ 
                "ALESEMITIDOS] = @VALESEMITIDOS, [VALESPROVEEDOR] = @VALESPROVEEDOR, [VENTA] = @V"& _ 
                "ENTA, [NUMALBARANES] = @NUMALBARANES, [NUMFACTURAS] = @NUMFACTURAS, [TOTALBARANE"& _ 
                "S] = @TOTALBARANES, [TOTFACTURAS] = @TOTFACTURAS, [TOTPRONTO] = @TOTPRONTO, [TOT"& _ 
                "REC] = @TOTREC, [VALESCANJEADOS] = @VALESCANJEADOS, [PENDIENTECOBROCREDITO] = @P"& _ 
                "ENDIENTECOBROCREDITO WHERE (([CAJA] = @Original_CAJA) AND ((@IsNull_COBROSCLIENT"& _ 
                "E = 1 AND [COBROSCLIENTE] IS NULL) OR ([COBROSCLIENTE] = @Original_COBROSCLIENTE"& _ 
                ")) AND ([CODALM] = @Original_CODALM) AND ((@IsNull_EFECTIVO = 1 AND [EFECTIVO] I"& _ 
                "S NULL) OR ([EFECTIVO] = @Original_EFECTIVO)) AND ((@IsNull_ENTRADACAMBIOS = 1 A"& _ 
                "ND [ENTRADACAMBIOS] IS NULL) OR ([ENTRADACAMBIOS] = @Original_ENTRADACAMBIOS)) A"& _ 
                "ND ((@IsNull_ENVASES = 1 AND [ENVASES] IS NULL) OR ([ENVASES] = @Original_ENVASE"& _ 
                "S)) AND ([FECHA] = @Original_FECHA) AND ([IDCAJA] = @Original_IDCAJA) AND ((@IsN"& _ 
                "ull_INGRESO = 1 AND [INGRESO] IS NULL) OR ([INGRESO] = @Original_INGRESO)) AND ("& _ 
                "(@IsNull_LINEAS = 1 AND [LINEAS] IS NULL) OR ([LINEAS] = @Original_LINEAS)) AND "& _ 
                "((@IsNull_PAGOSPROVEEDOR = 1 AND [PAGOSPROVEEDOR] IS NULL) OR ([PAGOSPROVEEDOR] "& _ 
                "= @Original_PAGOSPROVEEDOR)) AND ((@IsNull_PENDIENTECOBRO = 1 AND [PENDIENTECOBR"& _ 
                "O] IS NULL) OR ([PENDIENTECOBRO] = @Original_PENDIENTECOBRO)) AND ((@IsNull_REPA"& _ 
                "RTODOMICILIO = 1 AND [REPARTODOMICILIO] IS NULL) OR ([REPARTODOMICILIO] = @Origi"& _ 
                "nal_REPARTODOMICILIO)) AND ((@IsNull_RETIRADAFONDOS = 1 AND [RETIRADAFONDOS] IS "& _ 
                "NULL) OR ([RETIRADAFONDOS] = @Original_RETIRADAFONDOS)) AND ((@IsNull_TALON = 1 "& _ 
                "AND [TALON] IS NULL) OR ([TALON] = @Original_TALON)) AND ((@IsNull_TARJETA = 1 A"& _ 
                "ND [TARJETA] IS NULL) OR ([TARJETA] = @Original_TARJETA)) AND ((@IsNull_TICKETS "& _ 
                "= 1 AND [TICKETS] IS NULL) OR ([TICKETS] = @Original_TICKETS)) AND ((@IsNull_VAL"& _ 
                "ESCOBRADOS = 1 AND [VALESCOBRADOS] IS NULL) OR ([VALESCOBRADOS] = @Original_VALE"& _ 
                "SCOBRADOS)) AND ((@IsNull_VALESEMITIDOS = 1 AND [VALESEMITIDOS] IS NULL) OR ([VA"& _ 
                "LESEMITIDOS] = @Original_VALESEMITIDOS)) AND ((@IsNull_VALESPROVEEDOR = 1 AND [V"& _ 
                "ALESPROVEEDOR] IS NULL) OR ([VALESPROVEEDOR] = @Original_VALESPROVEEDOR)) AND (("& _ 
                "@IsNull_VENTA = 1 AND [VENTA] IS NULL) OR ([VENTA] = @Original_VENTA)) AND ((@Is"& _ 
                "Null_NUMALBARANES = 1 AND [NUMALBARANES] IS NULL) OR ([NUMALBARANES] = @Original"& _ 
                "_NUMALBARANES)) AND ((@IsNull_NUMFACTURAS = 1 AND [NUMFACTURAS] IS NULL) OR ([NU"& _ 
                "MFACTURAS] = @Original_NUMFACTURAS)) AND ((@IsNull_TOTALBARANES = 1 AND [TOTALBA"& _ 
                "RANES] IS NULL) OR ([TOTALBARANES] = @Original_TOTALBARANES)) AND ((@IsNull_TOTF"& _ 
                "ACTURAS = 1 AND [TOTFACTURAS] IS NULL) OR ([TOTFACTURAS] = @Original_TOTFACTURAS"& _ 
                ")) AND ((@IsNull_TOTPRONTO = 1 AND [TOTPRONTO] IS NULL) OR ([TOTPRONTO] = @Origi"& _ 
                "nal_TOTPRONTO)) AND ((@IsNull_TOTREC = 1 AND [TOTREC] IS NULL) OR ([TOTREC] = @O"& _ 
                "riginal_TOTREC)) AND ((@IsNull_VALESCANJEADOS = 1 AND [VALESCANJEADOS] IS NULL) "& _ 
                "OR ([VALESCANJEADOS] = @Original_VALESCANJEADOS)) AND ((@IsNull_PENDIENTECOBROCR"& _ 
                "EDITO = 1 AND [PENDIENTECOBROCREDITO] IS NULL) OR ([PENDIENTECOBROCREDITO] = @Or"& _ 
                "iginal_PENDIENTECOBROCREDITO)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CAJA, COBROSCLIENTE, CODALM, EFECTIVO, "& _ 
                "ENTRADACAMBIOS, ENVASES, FECHA, IDCAJA, INGRESO, LINEAS, PAGOSPROVEEDOR, PENDIEN"& _ 
                "TECOBRO, REPARTODOMICILIO, RETIRADAFONDOS, TALON, TARJETA, TICKETS, VALESCOBRADO"& _ 
                "S, VALESEMITIDOS, VALESPROVEEDOR, VENTA, NUMALBARANES, NUMFACTURAS, TOTALBARANES"& _ 
                ", TOTFACTURAS, TOTPRONTO, TOTREC, VALESCANJEADOS, PENDIENTECOBROCREDITO FROM IDA"& _ 
                "_CAJAS WHERE (IDCAJA = @IDCAJA)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COBROSCLIENTE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COBROSCLIENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODALM", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODALM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EFECTIVO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EFECTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENTRADACAMBIOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADACAMBIOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENVASES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENVASES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INGRESO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LINEAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINEAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAGOSPROVEEDOR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAGOSPROVEEDOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PENDIENTECOBRO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PENDIENTECOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPARTODOMICILIO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPARTODOMICILIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETIRADAFONDOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETIRADAFONDOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TALON", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TALON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TARJETA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TARJETA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TICKETS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TICKETS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALESCOBRADOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESCOBRADOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALESEMITIDOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESEMITIDOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALESPROVEEDOR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESPROVEEDOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VENTA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMALBARANES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMALBARANES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMFACTURAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMFACTURAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALBARANES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALBARANES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTFACTURAS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTFACTURAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTPRONTO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPRONTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTREC", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTREC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALESCANJEADOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESCANJEADOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PENDIENTECOBROCREDITO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PENDIENTECOBROCREDITO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COBROSCLIENTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COBROSCLIENTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COBROSCLIENTE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COBROSCLIENTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODALM", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODALM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EFECTIVO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EFECTIVO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EFECTIVO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EFECTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENTRADACAMBIOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADACAMBIOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENTRADACAMBIOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENTRADACAMBIOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENVASES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENVASES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENVASES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENVASES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDCAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INGRESO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LINEAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINEAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LINEAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINEAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAGOSPROVEEDOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAGOSPROVEEDOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAGOSPROVEEDOR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAGOSPROVEEDOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PENDIENTECOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PENDIENTECOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PENDIENTECOBRO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PENDIENTECOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REPARTODOMICILIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPARTODOMICILIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REPARTODOMICILIO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPARTODOMICILIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RETIRADAFONDOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETIRADAFONDOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RETIRADAFONDOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETIRADAFONDOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TALON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TALON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TALON", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TALON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TARJETA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TARJETA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TARJETA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TARJETA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TICKETS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TICKETS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TICKETS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TICKETS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALESCOBRADOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESCOBRADOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALESCOBRADOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESCOBRADOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALESEMITIDOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESEMITIDOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALESEMITIDOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESEMITIDOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALESPROVEEDOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESPROVEEDOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALESPROVEEDOR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESPROVEEDOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VENTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VENTA", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMALBARANES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMALBARANES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMALBARANES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMALBARANES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMFACTURAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMFACTURAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMFACTURAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMFACTURAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALBARANES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALBARANES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALBARANES", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALBARANES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTFACTURAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTFACTURAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTFACTURAS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTFACTURAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTPRONTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPRONTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTPRONTO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTPRONTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTREC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTREC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTREC", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTREC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALESCANJEADOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESCANJEADOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALESCANJEADOS", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALESCANJEADOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PENDIENTECOBROCREDITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PENDIENTECOBROCREDITO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PENDIENTECOBROCREDITO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PENDIENTECOBROCREDITO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDCAJA", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.a3ERP_AydaraTPV.Settings.Default.SqlConection
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CAJA, COBROSCLIENTE, CODALM, EFECTIVO, ENTRADACAMBIOS, ENVASES, FEC"& _ 
                "HA, IDCAJA, INGRESO, LINEAS, PAGOSPROVEEDOR, PENDIENTECOBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        REPARTODOMICILIO, RETIRADAFONDOS, TALON, TARJETA, TICKETS, VALESCOBRADOS"& _ 
                ", VALESEMITIDOS, VALESPROVEEDOR, VENTA, NUMALBARANES, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " NUMFACTURAS, TOTALBARANES, TOTFACTURAS, TOTPRONTO, TOTREC, VALESCANJEADOS, PEND"& _ 
                "IENTECOBROCREDITO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            IDA_CAJAS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsTPVRecepcion.IDA_CAJASDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsTPVRecepcion.IDA_CAJASDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsTPVRecepcion) As Integer
            Return Me.Adapter.Update(dataSet, "IDA_CAJAS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CAJA As Integer,  _
                    ByVal Original_COBROSCLIENTE As Global.System.Nullable(Of Double),  _
                    ByVal Original_CODALM As String,  _
                    ByVal Original_EFECTIVO As Global.System.Nullable(Of Double),  _
                    ByVal Original_ENTRADACAMBIOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_ENVASES As Global.System.Nullable(Of Double),  _
                    ByVal Original_FECHA As Date,  _
                    ByVal Original_IDCAJA As Integer,  _
                    ByVal Original_INGRESO As Global.System.Nullable(Of Double),  _
                    ByVal Original_LINEAS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PAGOSPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal Original_PENDIENTECOBRO As Global.System.Nullable(Of Double),  _
                    ByVal Original_REPARTODOMICILIO As Global.System.Nullable(Of Double),  _
                    ByVal Original_RETIRADAFONDOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_TALON As Global.System.Nullable(Of Double),  _
                    ByVal Original_TARJETA As Global.System.Nullable(Of Double),  _
                    ByVal Original_TICKETS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_VALESCOBRADOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_VALESEMITIDOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_VALESPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal Original_VENTA As Global.System.Nullable(Of Double),  _
                    ByVal Original_NUMALBARANES As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NUMFACTURAS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TOTALBARANES As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTFACTURAS As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTPRONTO As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTREC As Global.System.Nullable(Of Double),  _
                    ByVal Original_VALESCANJEADOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_PENDIENTECOBROCREDITO As Global.System.Nullable(Of Double)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CAJA,Integer)
            If (Original_COBROSCLIENTE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_COBROSCLIENTE.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_CODALM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CODALM")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CODALM,String)
            End If
            If (Original_EFECTIVO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_EFECTIVO.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_ENTRADACAMBIOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_ENTRADACAMBIOS.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_ENVASES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_ENVASES.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_FECHA,Date)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_IDCAJA,Integer)
            If (Original_INGRESO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_INGRESO.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_LINEAS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_LINEAS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_PAGOSPROVEEDOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_PAGOSPROVEEDOR.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_PENDIENTECOBRO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_PENDIENTECOBRO.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_REPARTODOMICILIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_REPARTODOMICILIO.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_RETIRADAFONDOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_RETIRADAFONDOS.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_TALON.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_TALON.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_TARJETA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_TARJETA.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_TICKETS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_TICKETS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_VALESCOBRADOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_VALESCOBRADOS.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_VALESEMITIDOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_VALESEMITIDOS.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_VALESPROVEEDOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_VALESPROVEEDOR.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_VENTA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_VENTA.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMALBARANES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_NUMALBARANES.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMFACTURAS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_NUMFACTURAS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALBARANES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_TOTALBARANES.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTFACTURAS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_TOTFACTURAS.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTPRONTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_TOTPRONTO.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTREC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_TOTREC.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_VALESCANJEADOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_VALESCANJEADOS.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_PENDIENTECOBROCREDITO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_PENDIENTECOBROCREDITO.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CAJA As Integer,  _
                    ByVal COBROSCLIENTE As Global.System.Nullable(Of Double),  _
                    ByVal CODALM As String,  _
                    ByVal EFECTIVO As Global.System.Nullable(Of Double),  _
                    ByVal ENTRADACAMBIOS As Global.System.Nullable(Of Double),  _
                    ByVal ENVASES As Global.System.Nullable(Of Double),  _
                    ByVal FECHA As Date,  _
                    ByVal INGRESO As Global.System.Nullable(Of Double),  _
                    ByVal LINEAS As Global.System.Nullable(Of Integer),  _
                    ByVal PAGOSPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal PENDIENTECOBRO As Global.System.Nullable(Of Double),  _
                    ByVal REPARTODOMICILIO As Global.System.Nullable(Of Double),  _
                    ByVal RETIRADAFONDOS As Global.System.Nullable(Of Double),  _
                    ByVal TALON As Global.System.Nullable(Of Double),  _
                    ByVal TARJETA As Global.System.Nullable(Of Double),  _
                    ByVal TICKETS As Global.System.Nullable(Of Integer),  _
                    ByVal VALESCOBRADOS As Global.System.Nullable(Of Double),  _
                    ByVal VALESEMITIDOS As Global.System.Nullable(Of Double),  _
                    ByVal VALESPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal VENTA As Global.System.Nullable(Of Double),  _
                    ByVal NUMALBARANES As Global.System.Nullable(Of Integer),  _
                    ByVal NUMFACTURAS As Global.System.Nullable(Of Integer),  _
                    ByVal TOTALBARANES As Global.System.Nullable(Of Double),  _
                    ByVal TOTFACTURAS As Global.System.Nullable(Of Double),  _
                    ByVal TOTPRONTO As Global.System.Nullable(Of Double),  _
                    ByVal TOTREC As Global.System.Nullable(Of Double),  _
                    ByVal VALESCANJEADOS As Global.System.Nullable(Of Double),  _
                    ByVal PENDIENTECOBROCREDITO As Global.System.Nullable(Of Double)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CAJA,Integer)
            If (COBROSCLIENTE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(COBROSCLIENTE.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODALM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODALM")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODALM,String)
            End If
            If (EFECTIVO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(EFECTIVO.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ENTRADACAMBIOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ENTRADACAMBIOS.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ENVASES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ENVASES.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(FECHA,Date)
            If (INGRESO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(INGRESO.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (LINEAS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(LINEAS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (PAGOSPROVEEDOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(PAGOSPROVEEDOR.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (PENDIENTECOBRO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(PENDIENTECOBRO.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (REPARTODOMICILIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(REPARTODOMICILIO.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (RETIRADAFONDOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(RETIRADAFONDOS.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (TALON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(TALON.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (TARJETA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(TARJETA.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (TICKETS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(TICKETS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (VALESCOBRADOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(VALESCOBRADOS.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (VALESEMITIDOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(VALESEMITIDOS.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (VALESPROVEEDOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(VALESPROVEEDOR.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (VENTA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(VENTA.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (NUMALBARANES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(NUMALBARANES.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (NUMFACTURAS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(NUMFACTURAS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (TOTALBARANES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(TOTALBARANES.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (TOTFACTURAS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(TOTFACTURAS.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (TOTPRONTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(TOTPRONTO.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (TOTREC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(TOTREC.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (VALESCANJEADOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(VALESCANJEADOS.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (PENDIENTECOBROCREDITO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(PENDIENTECOBROCREDITO.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CAJA As Integer,  _
                    ByVal COBROSCLIENTE As Global.System.Nullable(Of Double),  _
                    ByVal CODALM As String,  _
                    ByVal EFECTIVO As Global.System.Nullable(Of Double),  _
                    ByVal ENTRADACAMBIOS As Global.System.Nullable(Of Double),  _
                    ByVal ENVASES As Global.System.Nullable(Of Double),  _
                    ByVal FECHA As Date,  _
                    ByVal INGRESO As Global.System.Nullable(Of Double),  _
                    ByVal LINEAS As Global.System.Nullable(Of Integer),  _
                    ByVal PAGOSPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal PENDIENTECOBRO As Global.System.Nullable(Of Double),  _
                    ByVal REPARTODOMICILIO As Global.System.Nullable(Of Double),  _
                    ByVal RETIRADAFONDOS As Global.System.Nullable(Of Double),  _
                    ByVal TALON As Global.System.Nullable(Of Double),  _
                    ByVal TARJETA As Global.System.Nullable(Of Double),  _
                    ByVal TICKETS As Global.System.Nullable(Of Integer),  _
                    ByVal VALESCOBRADOS As Global.System.Nullable(Of Double),  _
                    ByVal VALESEMITIDOS As Global.System.Nullable(Of Double),  _
                    ByVal VALESPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal VENTA As Global.System.Nullable(Of Double),  _
                    ByVal NUMALBARANES As Global.System.Nullable(Of Integer),  _
                    ByVal NUMFACTURAS As Global.System.Nullable(Of Integer),  _
                    ByVal TOTALBARANES As Global.System.Nullable(Of Double),  _
                    ByVal TOTFACTURAS As Global.System.Nullable(Of Double),  _
                    ByVal TOTPRONTO As Global.System.Nullable(Of Double),  _
                    ByVal TOTREC As Global.System.Nullable(Of Double),  _
                    ByVal VALESCANJEADOS As Global.System.Nullable(Of Double),  _
                    ByVal PENDIENTECOBROCREDITO As Global.System.Nullable(Of Double),  _
                    ByVal Original_CAJA As Integer,  _
                    ByVal Original_COBROSCLIENTE As Global.System.Nullable(Of Double),  _
                    ByVal Original_CODALM As String,  _
                    ByVal Original_EFECTIVO As Global.System.Nullable(Of Double),  _
                    ByVal Original_ENTRADACAMBIOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_ENVASES As Global.System.Nullable(Of Double),  _
                    ByVal Original_FECHA As Date,  _
                    ByVal Original_IDCAJA As Integer,  _
                    ByVal Original_INGRESO As Global.System.Nullable(Of Double),  _
                    ByVal Original_LINEAS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PAGOSPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal Original_PENDIENTECOBRO As Global.System.Nullable(Of Double),  _
                    ByVal Original_REPARTODOMICILIO As Global.System.Nullable(Of Double),  _
                    ByVal Original_RETIRADAFONDOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_TALON As Global.System.Nullable(Of Double),  _
                    ByVal Original_TARJETA As Global.System.Nullable(Of Double),  _
                    ByVal Original_TICKETS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_VALESCOBRADOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_VALESEMITIDOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_VALESPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal Original_VENTA As Global.System.Nullable(Of Double),  _
                    ByVal Original_NUMALBARANES As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NUMFACTURAS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TOTALBARANES As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTFACTURAS As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTPRONTO As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTREC As Global.System.Nullable(Of Double),  _
                    ByVal Original_VALESCANJEADOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_PENDIENTECOBROCREDITO As Global.System.Nullable(Of Double),  _
                    ByVal IDCAJA As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CAJA,Integer)
            If (COBROSCLIENTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(COBROSCLIENTE.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODALM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODALM")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODALM,String)
            End If
            If (EFECTIVO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(EFECTIVO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ENTRADACAMBIOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ENTRADACAMBIOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ENVASES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ENVASES.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(FECHA,Date)
            If (INGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(INGRESO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (LINEAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(LINEAS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (PAGOSPROVEEDOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(PAGOSPROVEEDOR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (PENDIENTECOBRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(PENDIENTECOBRO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (REPARTODOMICILIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(REPARTODOMICILIO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (RETIRADAFONDOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(RETIRADAFONDOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (TALON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(TALON.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (TARJETA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(TARJETA.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (TICKETS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(TICKETS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (VALESCOBRADOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(VALESCOBRADOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (VALESEMITIDOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(VALESEMITIDOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (VALESPROVEEDOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(VALESPROVEEDOR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (VENTA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(VENTA.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (NUMALBARANES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(NUMALBARANES.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (NUMFACTURAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(NUMFACTURAS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (TOTALBARANES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(TOTALBARANES.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (TOTFACTURAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(TOTFACTURAS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (TOTPRONTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(TOTPRONTO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (TOTREC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(TOTREC.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (VALESCANJEADOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(VALESCANJEADOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (PENDIENTECOBROCREDITO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(PENDIENTECOBROCREDITO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_CAJA,Integer)
            If (Original_COBROSCLIENTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_COBROSCLIENTE.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_CODALM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CODALM")
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_CODALM,String)
            End If
            If (Original_EFECTIVO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_EFECTIVO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_ENTRADACAMBIOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_ENTRADACAMBIOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_ENVASES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_ENVASES.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_FECHA,Date)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_IDCAJA,Integer)
            If (Original_INGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_INGRESO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_LINEAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_LINEAS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_PAGOSPROVEEDOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_PAGOSPROVEEDOR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_PENDIENTECOBRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_PENDIENTECOBRO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_REPARTODOMICILIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_REPARTODOMICILIO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_RETIRADAFONDOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_RETIRADAFONDOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_TALON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_TALON.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_TARJETA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_TARJETA.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_TICKETS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_TICKETS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_VALESCOBRADOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_VALESCOBRADOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_VALESEMITIDOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_VALESEMITIDOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_VALESPROVEEDOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_VALESPROVEEDOR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_VENTA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_VENTA.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMALBARANES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_NUMALBARANES.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMFACTURAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_NUMFACTURAS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALBARANES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_TOTALBARANES.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTFACTURAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_TOTFACTURAS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTPRONTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_TOTPRONTO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTREC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_TOTREC.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (Original_VALESCANJEADOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_VALESCANJEADOS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_PENDIENTECOBROCREDITO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_PENDIENTECOBROCREDITO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(82).Value = CType(IDCAJA,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CAJA As Integer,  _
                    ByVal COBROSCLIENTE As Global.System.Nullable(Of Double),  _
                    ByVal CODALM As String,  _
                    ByVal EFECTIVO As Global.System.Nullable(Of Double),  _
                    ByVal ENTRADACAMBIOS As Global.System.Nullable(Of Double),  _
                    ByVal ENVASES As Global.System.Nullable(Of Double),  _
                    ByVal FECHA As Date,  _
                    ByVal INGRESO As Global.System.Nullable(Of Double),  _
                    ByVal LINEAS As Global.System.Nullable(Of Integer),  _
                    ByVal PAGOSPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal PENDIENTECOBRO As Global.System.Nullable(Of Double),  _
                    ByVal REPARTODOMICILIO As Global.System.Nullable(Of Double),  _
                    ByVal RETIRADAFONDOS As Global.System.Nullable(Of Double),  _
                    ByVal TALON As Global.System.Nullable(Of Double),  _
                    ByVal TARJETA As Global.System.Nullable(Of Double),  _
                    ByVal TICKETS As Global.System.Nullable(Of Integer),  _
                    ByVal VALESCOBRADOS As Global.System.Nullable(Of Double),  _
                    ByVal VALESEMITIDOS As Global.System.Nullable(Of Double),  _
                    ByVal VALESPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal VENTA As Global.System.Nullable(Of Double),  _
                    ByVal NUMALBARANES As Global.System.Nullable(Of Integer),  _
                    ByVal NUMFACTURAS As Global.System.Nullable(Of Integer),  _
                    ByVal TOTALBARANES As Global.System.Nullable(Of Double),  _
                    ByVal TOTFACTURAS As Global.System.Nullable(Of Double),  _
                    ByVal TOTPRONTO As Global.System.Nullable(Of Double),  _
                    ByVal TOTREC As Global.System.Nullable(Of Double),  _
                    ByVal VALESCANJEADOS As Global.System.Nullable(Of Double),  _
                    ByVal PENDIENTECOBROCREDITO As Global.System.Nullable(Of Double),  _
                    ByVal Original_CAJA As Integer,  _
                    ByVal Original_COBROSCLIENTE As Global.System.Nullable(Of Double),  _
                    ByVal Original_CODALM As String,  _
                    ByVal Original_EFECTIVO As Global.System.Nullable(Of Double),  _
                    ByVal Original_ENTRADACAMBIOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_ENVASES As Global.System.Nullable(Of Double),  _
                    ByVal Original_FECHA As Date,  _
                    ByVal Original_IDCAJA As Integer,  _
                    ByVal Original_INGRESO As Global.System.Nullable(Of Double),  _
                    ByVal Original_LINEAS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PAGOSPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal Original_PENDIENTECOBRO As Global.System.Nullable(Of Double),  _
                    ByVal Original_REPARTODOMICILIO As Global.System.Nullable(Of Double),  _
                    ByVal Original_RETIRADAFONDOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_TALON As Global.System.Nullable(Of Double),  _
                    ByVal Original_TARJETA As Global.System.Nullable(Of Double),  _
                    ByVal Original_TICKETS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_VALESCOBRADOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_VALESEMITIDOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_VALESPROVEEDOR As Global.System.Nullable(Of Double),  _
                    ByVal Original_VENTA As Global.System.Nullable(Of Double),  _
                    ByVal Original_NUMALBARANES As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NUMFACTURAS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TOTALBARANES As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTFACTURAS As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTPRONTO As Global.System.Nullable(Of Double),  _
                    ByVal Original_TOTREC As Global.System.Nullable(Of Double),  _
                    ByVal Original_VALESCANJEADOS As Global.System.Nullable(Of Double),  _
                    ByVal Original_PENDIENTECOBROCREDITO As Global.System.Nullable(Of Double)) As Integer
            Return Me.Update(CAJA, COBROSCLIENTE, CODALM, EFECTIVO, ENTRADACAMBIOS, ENVASES, FECHA, INGRESO, LINEAS, PAGOSPROVEEDOR, PENDIENTECOBRO, REPARTODOMICILIO, RETIRADAFONDOS, TALON, TARJETA, TICKETS, VALESCOBRADOS, VALESEMITIDOS, VALESPROVEEDOR, VENTA, NUMALBARANES, NUMFACTURAS, TOTALBARANES, TOTFACTURAS, TOTPRONTO, TOTREC, VALESCANJEADOS, PENDIENTECOBROCREDITO, Original_CAJA, Original_COBROSCLIENTE, Original_CODALM, Original_EFECTIVO, Original_ENTRADACAMBIOS, Original_ENVASES, Original_FECHA, Original_IDCAJA, Original_INGRESO, Original_LINEAS, Original_PAGOSPROVEEDOR, Original_PENDIENTECOBRO, Original_REPARTODOMICILIO, Original_RETIRADAFONDOS, Original_TALON, Original_TARJETA, Original_TICKETS, Original_VALESCOBRADOS, Original_VALESEMITIDOS, Original_VALESPROVEEDOR, Original_VENTA, Original_NUMALBARANES, Original_NUMFACTURAS, Original_TOTALBARANES, Original_TOTFACTURAS, Original_TOTPRONTO, Original_TOTREC, Original_VALESCANJEADOS, Original_PENDIENTECOBROCREDITO, Original_IDCAJA)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _iDA_TICKETSTableAdapter As IDA_TICKETSTableAdapter
        
        Private _iDA_TICKETSLINEASTableAdapter As IDA_TICKETSLINEASTableAdapter
        
        Private _iDA_CAJASTableAdapter As IDA_CAJASTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property IDA_TICKETSTableAdapter() As IDA_TICKETSTableAdapter
            Get
                Return Me._iDA_TICKETSTableAdapter
            End Get
            Set
                Me._iDA_TICKETSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property IDA_TICKETSLINEASTableAdapter() As IDA_TICKETSLINEASTableAdapter
            Get
                Return Me._iDA_TICKETSLINEASTableAdapter
            End Get
            Set
                Me._iDA_TICKETSLINEASTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property IDA_CAJASTableAdapter() As IDA_CAJASTableAdapter
            Get
                Return Me._iDA_CAJASTableAdapter
            End Get
            Set
                Me._iDA_CAJASTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._iDA_TICKETSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._iDA_TICKETSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._iDA_TICKETSTableAdapter.Connection
                End If
                If ((Not (Me._iDA_TICKETSLINEASTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._iDA_TICKETSLINEASTableAdapter.Connection) Is Nothing)) Then
                    Return Me._iDA_TICKETSLINEASTableAdapter.Connection
                End If
                If ((Not (Me._iDA_CAJASTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._iDA_CAJASTableAdapter.Connection) Is Nothing)) Then
                    Return Me._iDA_CAJASTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._iDA_TICKETSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._iDA_TICKETSLINEASTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._iDA_CAJASTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsTPVRecepcion, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._iDA_TICKETSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.IDA_TICKETS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._iDA_TICKETSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._iDA_TICKETSLINEASTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.IDA_TICKETSLINEAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._iDA_TICKETSLINEASTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._iDA_CAJASTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.IDA_CAJAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._iDA_CAJASTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dsTPVRecepcion, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._iDA_TICKETSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.IDA_TICKETS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._iDA_TICKETSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._iDA_TICKETSLINEASTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.IDA_TICKETSLINEAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._iDA_TICKETSLINEASTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._iDA_CAJASTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.IDA_CAJAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._iDA_CAJASTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dsTPVRecepcion, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._iDA_CAJASTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.IDA_CAJAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._iDA_CAJASTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._iDA_TICKETSLINEASTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.IDA_TICKETSLINEAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._iDA_TICKETSLINEASTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._iDA_TICKETSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.IDA_TICKETS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._iDA_TICKETSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dsTPVRecepcion) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._iDA_TICKETSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._iDA_TICKETSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._iDA_TICKETSLINEASTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._iDA_TICKETSLINEASTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._iDA_CAJASTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._iDA_CAJASTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._iDA_TICKETSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._iDA_TICKETSTableAdapter, Me._iDA_TICKETSTableAdapter.Connection)
                    Me._iDA_TICKETSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._iDA_TICKETSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._iDA_TICKETSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._iDA_TICKETSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._iDA_TICKETSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._iDA_TICKETSLINEASTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._iDA_TICKETSLINEASTableAdapter, Me._iDA_TICKETSLINEASTableAdapter.Connection)
                    Me._iDA_TICKETSLINEASTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._iDA_TICKETSLINEASTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._iDA_TICKETSLINEASTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._iDA_TICKETSLINEASTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._iDA_TICKETSLINEASTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._iDA_CAJASTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._iDA_CAJASTableAdapter, Me._iDA_CAJASTableAdapter.Connection)
                    Me._iDA_CAJASTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._iDA_CAJASTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._iDA_CAJASTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._iDA_CAJASTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._iDA_CAJASTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._iDA_TICKETSTableAdapter) Is Nothing) Then
                    Me._iDA_TICKETSTableAdapter.Connection = CType(revertConnections(Me._iDA_TICKETSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._iDA_TICKETSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._iDA_TICKETSLINEASTableAdapter) Is Nothing) Then
                    Me._iDA_TICKETSLINEASTableAdapter.Connection = CType(revertConnections(Me._iDA_TICKETSLINEASTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._iDA_TICKETSLINEASTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._iDA_CAJASTableAdapter) Is Nothing) Then
                    Me._iDA_CAJASTableAdapter.Connection = CType(revertConnections(Me._iDA_CAJASTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._iDA_CAJASTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
